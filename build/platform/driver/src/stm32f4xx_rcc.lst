ARM GAS  /tmp/ccOp399b.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_rcc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.RCC_DeInit,"ax",%progbits
  20              		.align	1
  21              		.global	RCC_DeInit
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	RCC_DeInit:
  27              	.LFB123:
  28              		.file 1 "platform/driver/src/stm32f4xx_rcc.c"
   1:platform/driver/src/stm32f4xx_rcc.c **** /**
   2:platform/driver/src/stm32f4xx_rcc.c ****   ******************************************************************************
   3:platform/driver/src/stm32f4xx_rcc.c ****   * @file    stm32f4xx_rcc.c
   4:platform/driver/src/stm32f4xx_rcc.c ****   * @author  MCD Application Team
   5:platform/driver/src/stm32f4xx_rcc.c ****   * @version V1.8.1
   6:platform/driver/src/stm32f4xx_rcc.c ****   * @date    27-January-2022
   7:platform/driver/src/stm32f4xx_rcc.c ****   * @brief   This file provides firmware functions to manage the following 
   8:platform/driver/src/stm32f4xx_rcc.c ****   *          functionalities of the Reset and clock control (RCC) peripheral:
   9:platform/driver/src/stm32f4xx_rcc.c ****   *           + Internal/external clocks, PLL, CSS and MCO configuration
  10:platform/driver/src/stm32f4xx_rcc.c ****   *           + System, AHB and APB busses clocks configuration
  11:platform/driver/src/stm32f4xx_rcc.c ****   *           + Peripheral clocks configuration
  12:platform/driver/src/stm32f4xx_rcc.c ****   *           + Interrupts and flags management
  13:platform/driver/src/stm32f4xx_rcc.c ****   *
  14:platform/driver/src/stm32f4xx_rcc.c ****  @verbatim
  15:platform/driver/src/stm32f4xx_rcc.c ****  ===============================================================================
  16:platform/driver/src/stm32f4xx_rcc.c ****                       ##### RCC specific features #####
  17:platform/driver/src/stm32f4xx_rcc.c ****  ===============================================================================
  18:platform/driver/src/stm32f4xx_rcc.c ****     [..]  
  19:platform/driver/src/stm32f4xx_rcc.c ****       After reset the device is running from Internal High Speed oscillator 
  20:platform/driver/src/stm32f4xx_rcc.c ****       (HSI 16MHz) with Flash 0 wait state, Flash prefetch buffer, D-Cache 
  21:platform/driver/src/stm32f4xx_rcc.c ****       and I-Cache are disabled, and all peripherals are off except internal
  22:platform/driver/src/stm32f4xx_rcc.c ****       SRAM, Flash and JTAG.
  23:platform/driver/src/stm32f4xx_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) busses;
  24:platform/driver/src/stm32f4xx_rcc.c ****           all peripherals mapped on these busses are running at HSI speed.
  25:platform/driver/src/stm32f4xx_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  26:platform/driver/src/stm32f4xx_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  27:platform/driver/src/stm32f4xx_rcc.c ****           are assigned to be used for debug purpose.
  28:platform/driver/src/stm32f4xx_rcc.c ****     [..]          
  29:platform/driver/src/stm32f4xx_rcc.c ****       Once the device started from reset, the user application has to:
  30:platform/driver/src/stm32f4xx_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
ARM GAS  /tmp/ccOp399b.s 			page 2


  31:platform/driver/src/stm32f4xx_rcc.c ****           (if the application needs higher frequency/performance)
  32:platform/driver/src/stm32f4xx_rcc.c ****       (+) Configure the System clock frequency and Flash settings  
  33:platform/driver/src/stm32f4xx_rcc.c ****       (+) Configure the AHB and APB busses prescalers
  34:platform/driver/src/stm32f4xx_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  35:platform/driver/src/stm32f4xx_rcc.c ****       (+) Configure the clock source(s) for peripherals which clocks are not
  36:platform/driver/src/stm32f4xx_rcc.c ****           derived from the System clock (I2S, RTC, ADC, USB OTG FS/SDIO/RNG)
  37:platform/driver/src/stm32f4xx_rcc.c ****  @endverbatim    
  38:platform/driver/src/stm32f4xx_rcc.c ****   ******************************************************************************
  39:platform/driver/src/stm32f4xx_rcc.c ****   * @attention
  40:platform/driver/src/stm32f4xx_rcc.c ****   *
  41:platform/driver/src/stm32f4xx_rcc.c ****   * Copyright (c) 2016 STMicroelectronics.
  42:platform/driver/src/stm32f4xx_rcc.c ****   * All rights reserved.
  43:platform/driver/src/stm32f4xx_rcc.c ****   *
  44:platform/driver/src/stm32f4xx_rcc.c ****   * This software is licensed under terms that can be found in the LICENSE file
  45:platform/driver/src/stm32f4xx_rcc.c ****   * in the root directory of this software component.
  46:platform/driver/src/stm32f4xx_rcc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  47:platform/driver/src/stm32f4xx_rcc.c ****   *
  48:platform/driver/src/stm32f4xx_rcc.c ****   ******************************************************************************
  49:platform/driver/src/stm32f4xx_rcc.c ****   */
  50:platform/driver/src/stm32f4xx_rcc.c **** 
  51:platform/driver/src/stm32f4xx_rcc.c **** /* Includes ------------------------------------------------------------------*/
  52:platform/driver/src/stm32f4xx_rcc.c **** #include "stm32f4xx_rcc.h"
  53:platform/driver/src/stm32f4xx_rcc.c **** 
  54:platform/driver/src/stm32f4xx_rcc.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  55:platform/driver/src/stm32f4xx_rcc.c ****   * @{
  56:platform/driver/src/stm32f4xx_rcc.c ****   */
  57:platform/driver/src/stm32f4xx_rcc.c **** 
  58:platform/driver/src/stm32f4xx_rcc.c **** /** @defgroup RCC 
  59:platform/driver/src/stm32f4xx_rcc.c ****   * @brief RCC driver modules
  60:platform/driver/src/stm32f4xx_rcc.c ****   * @{
  61:platform/driver/src/stm32f4xx_rcc.c ****   */ 
  62:platform/driver/src/stm32f4xx_rcc.c **** 
  63:platform/driver/src/stm32f4xx_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  64:platform/driver/src/stm32f4xx_rcc.c **** /* Private define ------------------------------------------------------------*/
  65:platform/driver/src/stm32f4xx_rcc.c **** /* ------------ RCC registers bit address in the alias region ----------- */
  66:platform/driver/src/stm32f4xx_rcc.c **** #define RCC_OFFSET                (RCC_BASE - PERIPH_BASE)
  67:platform/driver/src/stm32f4xx_rcc.c **** /* --- CR Register ---*/
  68:platform/driver/src/stm32f4xx_rcc.c **** /* Alias word address of HSION bit */
  69:platform/driver/src/stm32f4xx_rcc.c **** #define CR_OFFSET                 (RCC_OFFSET + 0x00)
  70:platform/driver/src/stm32f4xx_rcc.c **** #define HSION_BitNumber           0x00
  71:platform/driver/src/stm32f4xx_rcc.c **** #define CR_HSION_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (HSION_BitNumber * 4))
  72:platform/driver/src/stm32f4xx_rcc.c **** /* Alias word address of CSSON bit */
  73:platform/driver/src/stm32f4xx_rcc.c **** #define CSSON_BitNumber           0x13
  74:platform/driver/src/stm32f4xx_rcc.c **** #define CR_CSSON_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (CSSON_BitNumber * 4))
  75:platform/driver/src/stm32f4xx_rcc.c **** /* Alias word address of PLLON bit */
  76:platform/driver/src/stm32f4xx_rcc.c **** #define PLLON_BitNumber           0x18
  77:platform/driver/src/stm32f4xx_rcc.c **** #define CR_PLLON_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLLON_BitNumber * 4))
  78:platform/driver/src/stm32f4xx_rcc.c **** /* Alias word address of PLLI2SON bit */
  79:platform/driver/src/stm32f4xx_rcc.c **** #define PLLI2SON_BitNumber        0x1A
  80:platform/driver/src/stm32f4xx_rcc.c **** #define CR_PLLI2SON_BB            (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLLI2SON_BitNumber * 4))
  81:platform/driver/src/stm32f4xx_rcc.c **** 
  82:platform/driver/src/stm32f4xx_rcc.c **** /* Alias word address of PLLSAION bit */
  83:platform/driver/src/stm32f4xx_rcc.c **** #define PLLSAION_BitNumber        0x1C
  84:platform/driver/src/stm32f4xx_rcc.c **** #define CR_PLLSAION_BB            (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLLSAION_BitNumber * 4))
  85:platform/driver/src/stm32f4xx_rcc.c **** 
  86:platform/driver/src/stm32f4xx_rcc.c **** /* --- CFGR Register ---*/
  87:platform/driver/src/stm32f4xx_rcc.c **** /* Alias word address of I2SSRC bit */
ARM GAS  /tmp/ccOp399b.s 			page 3


  88:platform/driver/src/stm32f4xx_rcc.c **** #define CFGR_OFFSET               (RCC_OFFSET + 0x08)
  89:platform/driver/src/stm32f4xx_rcc.c **** #define I2SSRC_BitNumber          0x17
  90:platform/driver/src/stm32f4xx_rcc.c **** #define CFGR_I2SSRC_BB            (PERIPH_BB_BASE + (CFGR_OFFSET * 32) + (I2SSRC_BitNumber * 4))
  91:platform/driver/src/stm32f4xx_rcc.c **** 
  92:platform/driver/src/stm32f4xx_rcc.c **** /* --- BDCR Register ---*/
  93:platform/driver/src/stm32f4xx_rcc.c **** /* Alias word address of RTCEN bit */
  94:platform/driver/src/stm32f4xx_rcc.c **** #define BDCR_OFFSET               (RCC_OFFSET + 0x70)
  95:platform/driver/src/stm32f4xx_rcc.c **** #define RTCEN_BitNumber           0x0F
  96:platform/driver/src/stm32f4xx_rcc.c **** #define BDCR_RTCEN_BB             (PERIPH_BB_BASE + (BDCR_OFFSET * 32) + (RTCEN_BitNumber * 4))
  97:platform/driver/src/stm32f4xx_rcc.c **** /* Alias word address of BDRST bit */
  98:platform/driver/src/stm32f4xx_rcc.c **** #define BDRST_BitNumber           0x10
  99:platform/driver/src/stm32f4xx_rcc.c **** #define BDCR_BDRST_BB             (PERIPH_BB_BASE + (BDCR_OFFSET * 32) + (BDRST_BitNumber * 4))
 100:platform/driver/src/stm32f4xx_rcc.c **** 
 101:platform/driver/src/stm32f4xx_rcc.c **** /* --- CSR Register ---*/
 102:platform/driver/src/stm32f4xx_rcc.c **** /* Alias word address of LSION bit */
 103:platform/driver/src/stm32f4xx_rcc.c **** #define CSR_OFFSET                (RCC_OFFSET + 0x74)
 104:platform/driver/src/stm32f4xx_rcc.c **** #define LSION_BitNumber           0x00
 105:platform/driver/src/stm32f4xx_rcc.c **** #define CSR_LSION_BB              (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (LSION_BitNumber * 4))
 106:platform/driver/src/stm32f4xx_rcc.c **** 
 107:platform/driver/src/stm32f4xx_rcc.c **** /* --- DCKCFGR Register ---*/
 108:platform/driver/src/stm32f4xx_rcc.c **** /* Alias word address of TIMPRE bit */
 109:platform/driver/src/stm32f4xx_rcc.c **** #define DCKCFGR_OFFSET            (RCC_OFFSET + 0x8C)
 110:platform/driver/src/stm32f4xx_rcc.c **** #define TIMPRE_BitNumber          0x18
 111:platform/driver/src/stm32f4xx_rcc.c **** #define DCKCFGR_TIMPRE_BB         (PERIPH_BB_BASE + (DCKCFGR_OFFSET * 32) + (TIMPRE_BitNumber * 4))
 112:platform/driver/src/stm32f4xx_rcc.c ****     
 113:platform/driver/src/stm32f4xx_rcc.c **** /* --- CFGR Register ---*/
 114:platform/driver/src/stm32f4xx_rcc.c **** #define RCC_CFGR_OFFSET            (RCC_OFFSET + 0x08)
 115:platform/driver/src/stm32f4xx_rcc.c ****  #if defined(STM32F410xx)
 116:platform/driver/src/stm32f4xx_rcc.c **** /* Alias word address of MCO1EN bit */
 117:platform/driver/src/stm32f4xx_rcc.c **** #define RCC_MCO1EN_BIT_NUMBER      0x8
 118:platform/driver/src/stm32f4xx_rcc.c **** #define RCC_CFGR_MCO1EN_BB         (PERIPH_BB_BASE + (RCC_CFGR_OFFSET * 32) + (RCC_MCO1EN_BIT_NUMBE
 119:platform/driver/src/stm32f4xx_rcc.c **** 
 120:platform/driver/src/stm32f4xx_rcc.c **** /* Alias word address of MCO2EN bit */
 121:platform/driver/src/stm32f4xx_rcc.c **** #define RCC_MCO2EN_BIT_NUMBER      0x9
 122:platform/driver/src/stm32f4xx_rcc.c **** #define RCC_CFGR_MCO2EN_BB         (PERIPH_BB_BASE + (RCC_CFGR_OFFSET * 32) + (RCC_MCO2EN_BIT_NUMBE
 123:platform/driver/src/stm32f4xx_rcc.c **** #endif /* STM32F410xx */
 124:platform/driver/src/stm32f4xx_rcc.c **** /* ---------------------- RCC registers bit mask ------------------------ */
 125:platform/driver/src/stm32f4xx_rcc.c **** /* CFGR register bit mask */
 126:platform/driver/src/stm32f4xx_rcc.c **** #define CFGR_MCO2_RESET_MASK      ((uint32_t)0x07FFFFFF)
 127:platform/driver/src/stm32f4xx_rcc.c **** #define CFGR_MCO1_RESET_MASK      ((uint32_t)0xF89FFFFF)
 128:platform/driver/src/stm32f4xx_rcc.c **** 
 129:platform/driver/src/stm32f4xx_rcc.c **** /* RCC Flag Mask */
 130:platform/driver/src/stm32f4xx_rcc.c **** #define FLAG_MASK                 ((uint8_t)0x1F)
 131:platform/driver/src/stm32f4xx_rcc.c **** 
 132:platform/driver/src/stm32f4xx_rcc.c **** /* CR register byte 3 (Bits[23:16]) base address */
 133:platform/driver/src/stm32f4xx_rcc.c **** #define CR_BYTE3_ADDRESS          ((uint32_t)0x40023802)
 134:platform/driver/src/stm32f4xx_rcc.c **** 
 135:platform/driver/src/stm32f4xx_rcc.c **** /* CIR register byte 2 (Bits[15:8]) base address */
 136:platform/driver/src/stm32f4xx_rcc.c **** #define CIR_BYTE2_ADDRESS         ((uint32_t)(RCC_BASE + 0x0C + 0x01))
 137:platform/driver/src/stm32f4xx_rcc.c **** 
 138:platform/driver/src/stm32f4xx_rcc.c **** /* CIR register byte 3 (Bits[23:16]) base address */
 139:platform/driver/src/stm32f4xx_rcc.c **** #define CIR_BYTE3_ADDRESS         ((uint32_t)(RCC_BASE + 0x0C + 0x02))
 140:platform/driver/src/stm32f4xx_rcc.c **** 
 141:platform/driver/src/stm32f4xx_rcc.c **** /* BDCR register base address */
 142:platform/driver/src/stm32f4xx_rcc.c **** #define BDCR_ADDRESS              (PERIPH_BASE + BDCR_OFFSET)
 143:platform/driver/src/stm32f4xx_rcc.c **** 
 144:platform/driver/src/stm32f4xx_rcc.c **** /* Private macro -------------------------------------------------------------*/
ARM GAS  /tmp/ccOp399b.s 			page 4


 145:platform/driver/src/stm32f4xx_rcc.c **** /* Private variables ---------------------------------------------------------*/
 146:platform/driver/src/stm32f4xx_rcc.c **** static __I uint8_t APBAHBPrescTable[16] = {0, 0, 0, 0, 1, 2, 3, 4, 1, 2, 3, 4, 6, 7, 8, 9};
 147:platform/driver/src/stm32f4xx_rcc.c **** 
 148:platform/driver/src/stm32f4xx_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 149:platform/driver/src/stm32f4xx_rcc.c **** /* Private functions ---------------------------------------------------------*/
 150:platform/driver/src/stm32f4xx_rcc.c **** 
 151:platform/driver/src/stm32f4xx_rcc.c **** /** @defgroup RCC_Private_Functions
 152:platform/driver/src/stm32f4xx_rcc.c ****   * @{
 153:platform/driver/src/stm32f4xx_rcc.c ****   */ 
 154:platform/driver/src/stm32f4xx_rcc.c **** 
 155:platform/driver/src/stm32f4xx_rcc.c **** /** @defgroup RCC_Group1 Internal and external clocks, PLL, CSS and MCO configuration functions
 156:platform/driver/src/stm32f4xx_rcc.c ****  *  @brief   Internal and external clocks, PLL, CSS and MCO configuration functions 
 157:platform/driver/src/stm32f4xx_rcc.c ****  *
 158:platform/driver/src/stm32f4xx_rcc.c **** @verbatim   
 159:platform/driver/src/stm32f4xx_rcc.c ****  ===================================================================================
 160:platform/driver/src/stm32f4xx_rcc.c ****  ##### Internal and  external clocks, PLL, CSS and MCO configuration functions #####
 161:platform/driver/src/stm32f4xx_rcc.c ****  ===================================================================================
 162:platform/driver/src/stm32f4xx_rcc.c ****     [..]
 163:platform/driver/src/stm32f4xx_rcc.c ****       This section provide functions allowing to configure the internal/external clocks,
 164:platform/driver/src/stm32f4xx_rcc.c ****       PLLs, CSS and MCO pins.
 165:platform/driver/src/stm32f4xx_rcc.c ****   
 166:platform/driver/src/stm32f4xx_rcc.c ****       (#) HSI (high-speed internal), 16 MHz factory-trimmed RC used directly or through
 167:platform/driver/src/stm32f4xx_rcc.c ****           the PLL as System clock source.
 168:platform/driver/src/stm32f4xx_rcc.c **** 
 169:platform/driver/src/stm32f4xx_rcc.c ****       (#) LSI (low-speed internal), 32 KHz low consumption RC used as IWDG and/or RTC
 170:platform/driver/src/stm32f4xx_rcc.c ****           clock source.
 171:platform/driver/src/stm32f4xx_rcc.c **** 
 172:platform/driver/src/stm32f4xx_rcc.c ****       (#) HSE (high-speed external), 4 to 26 MHz crystal oscillator used directly or
 173:platform/driver/src/stm32f4xx_rcc.c ****           through the PLL as System clock source. Can be used also as RTC clock source.
 174:platform/driver/src/stm32f4xx_rcc.c **** 
 175:platform/driver/src/stm32f4xx_rcc.c ****       (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.   
 176:platform/driver/src/stm32f4xx_rcc.c **** 
 177:platform/driver/src/stm32f4xx_rcc.c ****       (#) PLL (clocked by HSI or HSE), featuring two different output clocks:
 178:platform/driver/src/stm32f4xx_rcc.c ****         (++) The first output is used to generate the high speed system clock (up to 168 MHz)
 179:platform/driver/src/stm32f4xx_rcc.c ****         (++) The second output is used to generate the clock for the USB OTG FS (48 MHz),
 180:platform/driver/src/stm32f4xx_rcc.c ****              the random analog generator (<=48 MHz) and the SDIO (<= 48 MHz).
 181:platform/driver/src/stm32f4xx_rcc.c **** 
 182:platform/driver/src/stm32f4xx_rcc.c ****       (#) PLLI2S (clocked by HSI or HSE), used to generate an accurate clock to achieve 
 183:platform/driver/src/stm32f4xx_rcc.c ****           high-quality audio performance on the I2S interface or SAI interface in case 
 184:platform/driver/src/stm32f4xx_rcc.c ****           of STM32F429x/439x devices.
 185:platform/driver/src/stm32f4xx_rcc.c ****      
 186:platform/driver/src/stm32f4xx_rcc.c ****       (#) PLLSAI clocked by (HSI or HSE), used to generate an accurate clock to SAI 
 187:platform/driver/src/stm32f4xx_rcc.c ****           interface and LCD TFT controller available only for STM32F42xxx/43xxx/446xx/469xx/479xx d
 188:platform/driver/src/stm32f4xx_rcc.c ****   
 189:platform/driver/src/stm32f4xx_rcc.c ****       (#) CSS (Clock security system), once enable and if a HSE clock failure occurs 
 190:platform/driver/src/stm32f4xx_rcc.c ****          (HSE used directly or through PLL as System clock source), the System clock
 191:platform/driver/src/stm32f4xx_rcc.c ****          is automatically switched to HSI and an interrupt is generated if enabled. 
 192:platform/driver/src/stm32f4xx_rcc.c ****          The interrupt is linked to the Cortex-M4 NMI (Non-Maskable Interrupt) 
 193:platform/driver/src/stm32f4xx_rcc.c ****          exception vector.   
 194:platform/driver/src/stm32f4xx_rcc.c **** 
 195:platform/driver/src/stm32f4xx_rcc.c ****       (#) MCO1 (microcontroller clock output), used to output HSI, LSE, HSE or PLL
 196:platform/driver/src/stm32f4xx_rcc.c ****           clock (through a configurable prescaler) on PA8 pin.
 197:platform/driver/src/stm32f4xx_rcc.c **** 
 198:platform/driver/src/stm32f4xx_rcc.c ****       (#) MCO2 (microcontroller clock output), used to output HSE, PLL, SYSCLK or PLLI2S
 199:platform/driver/src/stm32f4xx_rcc.c ****           clock (through a configurable prescaler) on PC9 pin.
 200:platform/driver/src/stm32f4xx_rcc.c ****  @endverbatim
 201:platform/driver/src/stm32f4xx_rcc.c ****   * @{
ARM GAS  /tmp/ccOp399b.s 			page 5


 202:platform/driver/src/stm32f4xx_rcc.c ****   */
 203:platform/driver/src/stm32f4xx_rcc.c **** 
 204:platform/driver/src/stm32f4xx_rcc.c **** /**
 205:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 206:platform/driver/src/stm32f4xx_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 207:platform/driver/src/stm32f4xx_rcc.c ****   *            - HSI ON and used as system clock source
 208:platform/driver/src/stm32f4xx_rcc.c ****   *            - HSE, PLL and PLLI2S OFF
 209:platform/driver/src/stm32f4xx_rcc.c ****   *            - AHB, APB1 and APB2 prescaler set to 1.
 210:platform/driver/src/stm32f4xx_rcc.c ****   *            - CSS, MCO1 and MCO2 OFF
 211:platform/driver/src/stm32f4xx_rcc.c ****   *            - All interrupts disabled
 212:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This function doesn't modify the configuration of the
 213:platform/driver/src/stm32f4xx_rcc.c ****   *            - Peripheral clocks  
 214:platform/driver/src/stm32f4xx_rcc.c ****   *            - LSI, LSE and RTC clocks 
 215:platform/driver/src/stm32f4xx_rcc.c ****   * @param  None
 216:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
 217:platform/driver/src/stm32f4xx_rcc.c ****   */
 218:platform/driver/src/stm32f4xx_rcc.c **** void RCC_DeInit(void)
 219:platform/driver/src/stm32f4xx_rcc.c **** {
  29              		.loc 1 219 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 220:platform/driver/src/stm32f4xx_rcc.c ****   /* Set HSION bit */
 221:platform/driver/src/stm32f4xx_rcc.c ****   RCC->CR |= (uint32_t)0x00000001;
  34              		.loc 1 221 3 view .LVU1
  35              		.loc 1 221 11 is_stmt 0 view .LVU2
  36 0000 0E4B     		ldr	r3, .L2
  37 0002 1A68     		ldr	r2, [r3]
  38 0004 42F00102 		orr	r2, r2, #1
  39 0008 1A60     		str	r2, [r3]
 222:platform/driver/src/stm32f4xx_rcc.c **** 
 223:platform/driver/src/stm32f4xx_rcc.c ****   /* Reset CFGR register */
 224:platform/driver/src/stm32f4xx_rcc.c ****   RCC->CFGR = 0x00000000;
  40              		.loc 1 224 3 is_stmt 1 view .LVU3
  41              		.loc 1 224 13 is_stmt 0 view .LVU4
  42 000a 0021     		movs	r1, #0
  43 000c 9960     		str	r1, [r3, #8]
 225:platform/driver/src/stm32f4xx_rcc.c **** 
 226:platform/driver/src/stm32f4xx_rcc.c ****   /* Reset HSEON, CSSON, PLLON, PLLI2S and PLLSAI(STM32F42xxx/43xxx/446xx/469xx/479xx devices) bits
 227:platform/driver/src/stm32f4xx_rcc.c ****   RCC->CR &= (uint32_t)0xEAF6FFFF;
  44              		.loc 1 227 3 is_stmt 1 view .LVU5
  45              		.loc 1 227 11 is_stmt 0 view .LVU6
  46 000e 1A68     		ldr	r2, [r3]
  47 0010 22F0A852 		bic	r2, r2, #352321536
  48 0014 22F41022 		bic	r2, r2, #589824
  49 0018 1A60     		str	r2, [r3]
 228:platform/driver/src/stm32f4xx_rcc.c ****   
 229:platform/driver/src/stm32f4xx_rcc.c ****   /* Reset PLLCFGR register */
 230:platform/driver/src/stm32f4xx_rcc.c ****   RCC->PLLCFGR = 0x24003010;
  50              		.loc 1 230 3 is_stmt 1 view .LVU7
  51              		.loc 1 230 16 is_stmt 0 view .LVU8
  52 001a 094A     		ldr	r2, .L2+4
  53 001c 5A60     		str	r2, [r3, #4]
 231:platform/driver/src/stm32f4xx_rcc.c **** 
 232:platform/driver/src/stm32f4xx_rcc.c **** #if defined(STM32F40_41xxx) || defined(STM32F427_437xx) || defined(STM32F429_439xx) || defined(STM3
 233:platform/driver/src/stm32f4xx_rcc.c ****   /* Reset PLLI2SCFGR register */
ARM GAS  /tmp/ccOp399b.s 			page 6


 234:platform/driver/src/stm32f4xx_rcc.c ****   RCC->PLLI2SCFGR = 0x20003000;
  54              		.loc 1 234 3 is_stmt 1 view .LVU9
  55              		.loc 1 234 19 is_stmt 0 view .LVU10
  56 001e 094A     		ldr	r2, .L2+8
  57 0020 C3F88420 		str	r2, [r3, #132]
 235:platform/driver/src/stm32f4xx_rcc.c **** #endif /* STM32F40_41xxx || STM32F427_437xx || STM32F429_439xx || STM32F401xx || STM32F411xE || STM
 236:platform/driver/src/stm32f4xx_rcc.c **** 
 237:platform/driver/src/stm32f4xx_rcc.c **** #if defined(STM32F40_41xxx) || defined(STM32F427_437xx) || defined(STM32F429_439xx) || defined(STM3
 238:platform/driver/src/stm32f4xx_rcc.c ****   /* Reset PLLSAICFGR register, only available for STM32F42xxx/43xxx/446xx/469xx/479xx devices */
 239:platform/driver/src/stm32f4xx_rcc.c ****   RCC->PLLSAICFGR = 0x24003000;
  58              		.loc 1 239 3 is_stmt 1 view .LVU11
  59              		.loc 1 239 19 is_stmt 0 view .LVU12
  60 0024 02F18062 		add	r2, r2, #67108864
  61 0028 C3F88820 		str	r2, [r3, #136]
 240:platform/driver/src/stm32f4xx_rcc.c **** #endif /* STM32F40_41xxx || STM32F427_437xx || STM32F429_439xx || STM32F446xx || STM32F469_479xx */
 241:platform/driver/src/stm32f4xx_rcc.c ****   
 242:platform/driver/src/stm32f4xx_rcc.c ****   /* Reset HSEBYP bit */
 243:platform/driver/src/stm32f4xx_rcc.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
  62              		.loc 1 243 3 is_stmt 1 view .LVU13
  63              		.loc 1 243 11 is_stmt 0 view .LVU14
  64 002c 1A68     		ldr	r2, [r3]
  65 002e 22F48022 		bic	r2, r2, #262144
  66 0032 1A60     		str	r2, [r3]
 244:platform/driver/src/stm32f4xx_rcc.c **** 
 245:platform/driver/src/stm32f4xx_rcc.c ****   /* Disable all interrupts */
 246:platform/driver/src/stm32f4xx_rcc.c ****   RCC->CIR = 0x00000000;
  67              		.loc 1 246 3 is_stmt 1 view .LVU15
  68              		.loc 1 246 12 is_stmt 0 view .LVU16
  69 0034 D960     		str	r1, [r3, #12]
 247:platform/driver/src/stm32f4xx_rcc.c **** 
 248:platform/driver/src/stm32f4xx_rcc.c ****   /* Disable Timers clock prescalers selection, only available for STM32F42/43xxx and STM32F413_423
 249:platform/driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR = 0x00000000;
  70              		.loc 1 249 3 is_stmt 1 view .LVU17
  71              		.loc 1 249 16 is_stmt 0 view .LVU18
  72 0036 C3F88C10 		str	r1, [r3, #140]
 250:platform/driver/src/stm32f4xx_rcc.c ****   
 251:platform/driver/src/stm32f4xx_rcc.c **** #if defined(STM32F410xx) || defined(STM32F413_423xx)
 252:platform/driver/src/stm32f4xx_rcc.c ****   /* Disable LPTIM and FMPI2C clock prescalers selection, only available for STM32F410xx and STM32F
 253:platform/driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR2 = 0x00000000;
 254:platform/driver/src/stm32f4xx_rcc.c **** #endif /* STM32F410xx || STM32F413_423xx */  
 255:platform/driver/src/stm32f4xx_rcc.c **** }
  73              		.loc 1 255 1 view .LVU19
  74 003a 7047     		bx	lr
  75              	.L3:
  76              		.align	2
  77              	.L2:
  78 003c 00380240 		.word	1073887232
  79 0040 10300024 		.word	603992080
  80 0044 00300020 		.word	536883200
  81              		.cfi_endproc
  82              	.LFE123:
  84              		.section	.text.RCC_HSEConfig,"ax",%progbits
  85              		.align	1
  86              		.global	RCC_HSEConfig
  87              		.syntax unified
  88              		.thumb
  89              		.thumb_func
ARM GAS  /tmp/ccOp399b.s 			page 7


  91              	RCC_HSEConfig:
  92              	.LVL0:
  93              	.LFB124:
 256:platform/driver/src/stm32f4xx_rcc.c **** 
 257:platform/driver/src/stm32f4xx_rcc.c **** /**
 258:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the External High Speed oscillator (HSE).
 259:platform/driver/src/stm32f4xx_rcc.c ****   * @note   After enabling the HSE (RCC_HSE_ON or RCC_HSE_Bypass), the application
 260:platform/driver/src/stm32f4xx_rcc.c ****   *         software should wait on HSERDY flag to be set indicating that HSE clock
 261:platform/driver/src/stm32f4xx_rcc.c ****   *         is stable and can be used to clock the PLL and/or system clock.
 262:platform/driver/src/stm32f4xx_rcc.c ****   * @note   HSE state can not be changed if it is used directly or through the
 263:platform/driver/src/stm32f4xx_rcc.c ****   *         PLL as system clock. In this case, you have to select another source
 264:platform/driver/src/stm32f4xx_rcc.c ****   *         of the system clock then change the HSE state (ex. disable it).
 265:platform/driver/src/stm32f4xx_rcc.c ****   * @note   The HSE is stopped by hardware when entering STOP and STANDBY modes.  
 266:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This function reset the CSSON bit, so if the Clock security system(CSS)
 267:platform/driver/src/stm32f4xx_rcc.c ****   *         was previously enabled you have to enable it again after calling this
 268:platform/driver/src/stm32f4xx_rcc.c ****   *         function.    
 269:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_HSE: specifies the new state of the HSE.
 270:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
 271:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_HSE_OFF: turn OFF the HSE oscillator, HSERDY flag goes low after
 272:platform/driver/src/stm32f4xx_rcc.c ****   *                              6 HSE oscillator clock cycles.
 273:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_HSE_ON: turn ON the HSE oscillator
 274:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_HSE_Bypass: HSE oscillator bypassed with external clock
 275:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
 276:platform/driver/src/stm32f4xx_rcc.c ****   */
 277:platform/driver/src/stm32f4xx_rcc.c **** void RCC_HSEConfig(uint8_t RCC_HSE)
 278:platform/driver/src/stm32f4xx_rcc.c **** {
  94              		.loc 1 278 1 is_stmt 1 view -0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 0
  97              		@ frame_needed = 0, uses_anonymous_args = 0
  98              		@ link register save eliminated.
 279:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 280:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_HSE(RCC_HSE));
  99              		.loc 1 280 3 view .LVU21
 281:platform/driver/src/stm32f4xx_rcc.c **** 
 282:platform/driver/src/stm32f4xx_rcc.c ****   /* Reset HSEON and HSEBYP bits before configuring the HSE ------------------*/
 283:platform/driver/src/stm32f4xx_rcc.c ****   *(__IO uint8_t *) CR_BYTE3_ADDRESS = RCC_HSE_OFF;
 100              		.loc 1 283 3 view .LVU22
 101              		.loc 1 283 38 is_stmt 0 view .LVU23
 102 0000 024B     		ldr	r3, .L5
 103 0002 0022     		movs	r2, #0
 104 0004 9A70     		strb	r2, [r3, #2]
 284:platform/driver/src/stm32f4xx_rcc.c **** 
 285:platform/driver/src/stm32f4xx_rcc.c ****   /* Set the new HSE configuration -------------------------------------------*/
 286:platform/driver/src/stm32f4xx_rcc.c ****   *(__IO uint8_t *) CR_BYTE3_ADDRESS = RCC_HSE;
 105              		.loc 1 286 3 is_stmt 1 view .LVU24
 106              		.loc 1 286 38 is_stmt 0 view .LVU25
 107 0006 9870     		strb	r0, [r3, #2]
 287:platform/driver/src/stm32f4xx_rcc.c **** }
 108              		.loc 1 287 1 view .LVU26
 109 0008 7047     		bx	lr
 110              	.L6:
 111 000a 00BF     		.align	2
 112              	.L5:
 113 000c 00380240 		.word	1073887232
 114              		.cfi_endproc
 115              	.LFE124:
ARM GAS  /tmp/ccOp399b.s 			page 8


 117              		.section	.text.RCC_AdjustHSICalibrationValue,"ax",%progbits
 118              		.align	1
 119              		.global	RCC_AdjustHSICalibrationValue
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 124              	RCC_AdjustHSICalibrationValue:
 125              	.LVL1:
 126              	.LFB126:
 288:platform/driver/src/stm32f4xx_rcc.c **** 
 289:platform/driver/src/stm32f4xx_rcc.c **** /**
 290:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Waits for HSE start-up.
 291:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This functions waits on HSERDY flag to be set and return SUCCESS if 
 292:platform/driver/src/stm32f4xx_rcc.c ****   *         this flag is set, otherwise returns ERROR if the timeout is reached 
 293:platform/driver/src/stm32f4xx_rcc.c ****   *         and this flag is not set. The timeout value is defined by the constant
 294:platform/driver/src/stm32f4xx_rcc.c ****   *         HSE_STARTUP_TIMEOUT in stm32f4xx.h file. You can tailor it depending
 295:platform/driver/src/stm32f4xx_rcc.c ****   *         on the HSE crystal used in your application. 
 296:platform/driver/src/stm32f4xx_rcc.c ****   * @param  None
 297:platform/driver/src/stm32f4xx_rcc.c ****   * @retval An ErrorStatus enumeration value:
 298:platform/driver/src/stm32f4xx_rcc.c ****   *          - SUCCESS: HSE oscillator is stable and ready to use
 299:platform/driver/src/stm32f4xx_rcc.c ****   *          - ERROR: HSE oscillator not yet ready
 300:platform/driver/src/stm32f4xx_rcc.c ****   */
 301:platform/driver/src/stm32f4xx_rcc.c **** ErrorStatus RCC_WaitForHSEStartUp(void)
 302:platform/driver/src/stm32f4xx_rcc.c **** {
 303:platform/driver/src/stm32f4xx_rcc.c ****   __IO uint32_t startupcounter = 0;
 304:platform/driver/src/stm32f4xx_rcc.c ****   ErrorStatus status = ERROR;
 305:platform/driver/src/stm32f4xx_rcc.c ****   FlagStatus hsestatus = RESET;
 306:platform/driver/src/stm32f4xx_rcc.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 307:platform/driver/src/stm32f4xx_rcc.c ****   do
 308:platform/driver/src/stm32f4xx_rcc.c ****   {
 309:platform/driver/src/stm32f4xx_rcc.c ****     hsestatus = RCC_GetFlagStatus(RCC_FLAG_HSERDY);
 310:platform/driver/src/stm32f4xx_rcc.c ****     startupcounter++;
 311:platform/driver/src/stm32f4xx_rcc.c ****   } while((startupcounter != HSE_STARTUP_TIMEOUT) && (hsestatus == RESET));
 312:platform/driver/src/stm32f4xx_rcc.c **** 
 313:platform/driver/src/stm32f4xx_rcc.c ****   if (RCC_GetFlagStatus(RCC_FLAG_HSERDY) != RESET)
 314:platform/driver/src/stm32f4xx_rcc.c ****   {
 315:platform/driver/src/stm32f4xx_rcc.c ****     status = SUCCESS;
 316:platform/driver/src/stm32f4xx_rcc.c ****   }
 317:platform/driver/src/stm32f4xx_rcc.c ****   else
 318:platform/driver/src/stm32f4xx_rcc.c ****   {
 319:platform/driver/src/stm32f4xx_rcc.c ****     status = ERROR;
 320:platform/driver/src/stm32f4xx_rcc.c ****   }
 321:platform/driver/src/stm32f4xx_rcc.c ****   return (status);
 322:platform/driver/src/stm32f4xx_rcc.c **** }
 323:platform/driver/src/stm32f4xx_rcc.c **** 
 324:platform/driver/src/stm32f4xx_rcc.c **** /**
 325:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Adjusts the Internal High Speed oscillator (HSI) calibration value.
 326:platform/driver/src/stm32f4xx_rcc.c ****   * @note   The calibration is used to compensate for the variations in voltage
 327:platform/driver/src/stm32f4xx_rcc.c ****   *         and temperature that influence the frequency of the internal HSI RC.
 328:platform/driver/src/stm32f4xx_rcc.c ****   * @param  HSICalibrationValue: specifies the calibration trimming value.
 329:platform/driver/src/stm32f4xx_rcc.c ****   *         This parameter must be a number between 0 and 0x1F.
 330:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
 331:platform/driver/src/stm32f4xx_rcc.c ****   */
 332:platform/driver/src/stm32f4xx_rcc.c **** void RCC_AdjustHSICalibrationValue(uint8_t HSICalibrationValue)
 333:platform/driver/src/stm32f4xx_rcc.c **** {
 127              		.loc 1 333 1 is_stmt 1 view -0
 128              		.cfi_startproc
ARM GAS  /tmp/ccOp399b.s 			page 9


 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 131              		@ link register save eliminated.
 334:platform/driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 132              		.loc 1 334 3 view .LVU28
 335:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 336:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_CALIBRATION_VALUE(HSICalibrationValue));
 133              		.loc 1 336 3 view .LVU29
 337:platform/driver/src/stm32f4xx_rcc.c **** 
 338:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->CR;
 134              		.loc 1 338 3 view .LVU30
 135              		.loc 1 338 10 is_stmt 0 view .LVU31
 136 0000 034A     		ldr	r2, .L8
 137 0002 1368     		ldr	r3, [r2]
 138              	.LVL2:
 339:platform/driver/src/stm32f4xx_rcc.c **** 
 340:platform/driver/src/stm32f4xx_rcc.c ****   /* Clear HSITRIM[4:0] bits */
 341:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_CR_HSITRIM;
 139              		.loc 1 341 3 is_stmt 1 view .LVU32
 140              		.loc 1 341 10 is_stmt 0 view .LVU33
 141 0004 23F0F803 		bic	r3, r3, #248
 142              	.LVL3:
 342:platform/driver/src/stm32f4xx_rcc.c **** 
 343:platform/driver/src/stm32f4xx_rcc.c ****   /* Set the HSITRIM[4:0] bits according to HSICalibrationValue value */
 344:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg |= (uint32_t)HSICalibrationValue << 3;
 143              		.loc 1 344 3 is_stmt 1 view .LVU34
 144              		.loc 1 344 10 is_stmt 0 view .LVU35
 145 0008 43EAC003 		orr	r3, r3, r0, lsl #3
 146              	.LVL4:
 345:platform/driver/src/stm32f4xx_rcc.c **** 
 346:platform/driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
 347:platform/driver/src/stm32f4xx_rcc.c ****   RCC->CR = tmpreg;
 147              		.loc 1 347 3 is_stmt 1 view .LVU36
 148              		.loc 1 347 11 is_stmt 0 view .LVU37
 149 000c 1360     		str	r3, [r2]
 348:platform/driver/src/stm32f4xx_rcc.c **** }
 150              		.loc 1 348 1 view .LVU38
 151 000e 7047     		bx	lr
 152              	.L9:
 153              		.align	2
 154              	.L8:
 155 0010 00380240 		.word	1073887232
 156              		.cfi_endproc
 157              	.LFE126:
 159              		.section	.text.RCC_HSICmd,"ax",%progbits
 160              		.align	1
 161              		.global	RCC_HSICmd
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 166              	RCC_HSICmd:
 167              	.LVL5:
 168              	.LFB127:
 349:platform/driver/src/stm32f4xx_rcc.c **** 
 350:platform/driver/src/stm32f4xx_rcc.c **** /**
 351:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the Internal High Speed oscillator (HSI).
 352:platform/driver/src/stm32f4xx_rcc.c ****   * @note   The HSI is stopped by hardware when entering STOP and STANDBY modes.
ARM GAS  /tmp/ccOp399b.s 			page 10


 353:platform/driver/src/stm32f4xx_rcc.c ****   *         It is used (enabled by hardware) as system clock source after startup
 354:platform/driver/src/stm32f4xx_rcc.c ****   *         from Reset, wakeup from STOP and STANDBY mode, or in case of failure
 355:platform/driver/src/stm32f4xx_rcc.c ****   *         of the HSE used directly or indirectly as system clock (if the Clock
 356:platform/driver/src/stm32f4xx_rcc.c ****   *         Security System CSS is enabled).             
 357:platform/driver/src/stm32f4xx_rcc.c ****   * @note   HSI can not be stopped if it is used as system clock source. In this case,
 358:platform/driver/src/stm32f4xx_rcc.c ****   *         you have to select another source of the system clock then stop the HSI.  
 359:platform/driver/src/stm32f4xx_rcc.c ****   * @note   After enabling the HSI, the application software should wait on HSIRDY
 360:platform/driver/src/stm32f4xx_rcc.c ****   *         flag to be set indicating that HSI clock is stable and can be used as
 361:platform/driver/src/stm32f4xx_rcc.c ****   *         system clock source.  
 362:platform/driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the HSI.
 363:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
 364:platform/driver/src/stm32f4xx_rcc.c ****   * @note   When the HSI is stopped, HSIRDY flag goes low after 6 HSI oscillator
 365:platform/driver/src/stm32f4xx_rcc.c ****   *         clock cycles.  
 366:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
 367:platform/driver/src/stm32f4xx_rcc.c ****   */
 368:platform/driver/src/stm32f4xx_rcc.c **** void RCC_HSICmd(FunctionalState NewState)
 369:platform/driver/src/stm32f4xx_rcc.c **** {
 169              		.loc 1 369 1 is_stmt 1 view -0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173              		@ link register save eliminated.
 370:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 371:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 174              		.loc 1 371 3 view .LVU40
 372:platform/driver/src/stm32f4xx_rcc.c **** 
 373:platform/driver/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) CR_HSION_BB = (uint32_t)NewState;
 175              		.loc 1 373 3 view .LVU41
 176              		.loc 1 373 34 is_stmt 0 view .LVU42
 177 0000 014B     		ldr	r3, .L11
 178 0002 1860     		str	r0, [r3]
 374:platform/driver/src/stm32f4xx_rcc.c **** }
 179              		.loc 1 374 1 view .LVU43
 180 0004 7047     		bx	lr
 181              	.L12:
 182 0006 00BF     		.align	2
 183              	.L11:
 184 0008 00004742 		.word	1111949312
 185              		.cfi_endproc
 186              	.LFE127:
 188              		.section	.text.RCC_LSEConfig,"ax",%progbits
 189              		.align	1
 190              		.global	RCC_LSEConfig
 191              		.syntax unified
 192              		.thumb
 193              		.thumb_func
 195              	RCC_LSEConfig:
 196              	.LVL6:
 197              	.LFB128:
 375:platform/driver/src/stm32f4xx_rcc.c **** 
 376:platform/driver/src/stm32f4xx_rcc.c **** /**
 377:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the External Low Speed oscillator (LSE).
 378:platform/driver/src/stm32f4xx_rcc.c ****   * @note   As the LSE is in the Backup domain and write access is denied to
 379:platform/driver/src/stm32f4xx_rcc.c ****   *         this domain after reset, you have to enable write access using 
 380:platform/driver/src/stm32f4xx_rcc.c ****   *         PWR_BackupAccessCmd(ENABLE) function before to configure the LSE
 381:platform/driver/src/stm32f4xx_rcc.c ****   *         (to be done once after reset).  
 382:platform/driver/src/stm32f4xx_rcc.c ****   * @note   After enabling the LSE (RCC_LSE_ON or RCC_LSE_Bypass), the application
ARM GAS  /tmp/ccOp399b.s 			page 11


 383:platform/driver/src/stm32f4xx_rcc.c ****   *         software should wait on LSERDY flag to be set indicating that LSE clock
 384:platform/driver/src/stm32f4xx_rcc.c ****   *         is stable and can be used to clock the RTC.
 385:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_LSE: specifies the new state of the LSE.
 386:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
 387:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_LSE_OFF: turn OFF the LSE oscillator, LSERDY flag goes low after
 388:platform/driver/src/stm32f4xx_rcc.c ****   *                              6 LSE oscillator clock cycles.
 389:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_LSE_ON: turn ON the LSE oscillator
 390:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_LSE_Bypass: LSE oscillator bypassed with external clock
 391:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
 392:platform/driver/src/stm32f4xx_rcc.c ****   */
 393:platform/driver/src/stm32f4xx_rcc.c **** void RCC_LSEConfig(uint8_t RCC_LSE)
 394:platform/driver/src/stm32f4xx_rcc.c **** {
 198              		.loc 1 394 1 is_stmt 1 view -0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202              		@ link register save eliminated.
 395:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 396:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_LSE(RCC_LSE));
 203              		.loc 1 396 3 view .LVU45
 397:platform/driver/src/stm32f4xx_rcc.c **** 
 398:platform/driver/src/stm32f4xx_rcc.c ****   /* Reset LSEON and LSEBYP bits before configuring the LSE ------------------*/
 399:platform/driver/src/stm32f4xx_rcc.c ****   /* Reset LSEON bit */
 400:platform/driver/src/stm32f4xx_rcc.c ****   *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
 204              		.loc 1 400 3 view .LVU46
 205              		.loc 1 400 34 is_stmt 0 view .LVU47
 206 0000 0A4B     		ldr	r3, .L17
 207 0002 0022     		movs	r2, #0
 208 0004 83F87020 		strb	r2, [r3, #112]
 401:platform/driver/src/stm32f4xx_rcc.c **** 
 402:platform/driver/src/stm32f4xx_rcc.c ****   /* Reset LSEBYP bit */
 403:platform/driver/src/stm32f4xx_rcc.c ****   *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
 209              		.loc 1 403 3 is_stmt 1 view .LVU48
 210              		.loc 1 403 34 is_stmt 0 view .LVU49
 211 0008 83F87020 		strb	r2, [r3, #112]
 404:platform/driver/src/stm32f4xx_rcc.c **** 
 405:platform/driver/src/stm32f4xx_rcc.c ****   /* Configure LSE (RCC_LSE_OFF is already covered by the code section above) */
 406:platform/driver/src/stm32f4xx_rcc.c ****   switch (RCC_LSE)
 212              		.loc 1 406 3 is_stmt 1 view .LVU50
 213 000c 0128     		cmp	r0, #1
 214 000e 02D0     		beq	.L14
 215 0010 0428     		cmp	r0, #4
 216 0012 05D0     		beq	.L15
 217 0014 7047     		bx	lr
 218              	.L14:
 407:platform/driver/src/stm32f4xx_rcc.c ****   {
 408:platform/driver/src/stm32f4xx_rcc.c ****     case RCC_LSE_ON:
 409:platform/driver/src/stm32f4xx_rcc.c ****       /* Set LSEON bit */
 410:platform/driver/src/stm32f4xx_rcc.c ****       *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_ON;
 219              		.loc 1 410 7 view .LVU51
 220              		.loc 1 410 38 is_stmt 0 view .LVU52
 221 0016 054B     		ldr	r3, .L17
 222 0018 0122     		movs	r2, #1
 223 001a 83F87020 		strb	r2, [r3, #112]
 411:platform/driver/src/stm32f4xx_rcc.c ****       break;
 224              		.loc 1 411 7 is_stmt 1 view .LVU53
 225 001e 7047     		bx	lr
ARM GAS  /tmp/ccOp399b.s 			page 12


 226              	.L15:
 412:platform/driver/src/stm32f4xx_rcc.c ****     case RCC_LSE_Bypass:
 413:platform/driver/src/stm32f4xx_rcc.c ****       /* Set LSEBYP and LSEON bits */
 414:platform/driver/src/stm32f4xx_rcc.c ****       *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_Bypass | RCC_LSE_ON;
 227              		.loc 1 414 7 view .LVU54
 228              		.loc 1 414 38 is_stmt 0 view .LVU55
 229 0020 024B     		ldr	r3, .L17
 230 0022 0522     		movs	r2, #5
 231 0024 83F87020 		strb	r2, [r3, #112]
 415:platform/driver/src/stm32f4xx_rcc.c ****       break;
 232              		.loc 1 415 7 is_stmt 1 view .LVU56
 416:platform/driver/src/stm32f4xx_rcc.c ****     default:
 417:platform/driver/src/stm32f4xx_rcc.c ****       break;
 418:platform/driver/src/stm32f4xx_rcc.c ****   }
 419:platform/driver/src/stm32f4xx_rcc.c **** }
 233              		.loc 1 419 1 is_stmt 0 view .LVU57
 234 0028 7047     		bx	lr
 235              	.L18:
 236 002a 00BF     		.align	2
 237              	.L17:
 238 002c 00380240 		.word	1073887232
 239              		.cfi_endproc
 240              	.LFE128:
 242              		.section	.text.RCC_LSICmd,"ax",%progbits
 243              		.align	1
 244              		.global	RCC_LSICmd
 245              		.syntax unified
 246              		.thumb
 247              		.thumb_func
 249              	RCC_LSICmd:
 250              	.LVL7:
 251              	.LFB129:
 420:platform/driver/src/stm32f4xx_rcc.c **** 
 421:platform/driver/src/stm32f4xx_rcc.c **** /**
 422:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the Internal Low Speed oscillator (LSI).
 423:platform/driver/src/stm32f4xx_rcc.c ****   * @note   After enabling the LSI, the application software should wait on 
 424:platform/driver/src/stm32f4xx_rcc.c ****   *         LSIRDY flag to be set indicating that LSI clock is stable and can
 425:platform/driver/src/stm32f4xx_rcc.c ****   *         be used to clock the IWDG and/or the RTC.
 426:platform/driver/src/stm32f4xx_rcc.c ****   * @note   LSI can not be disabled if the IWDG is running.  
 427:platform/driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the LSI.
 428:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
 429:platform/driver/src/stm32f4xx_rcc.c ****   * @note   When the LSI is stopped, LSIRDY flag goes low after 6 LSI oscillator
 430:platform/driver/src/stm32f4xx_rcc.c ****   *         clock cycles. 
 431:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
 432:platform/driver/src/stm32f4xx_rcc.c ****   */
 433:platform/driver/src/stm32f4xx_rcc.c **** void RCC_LSICmd(FunctionalState NewState)
 434:platform/driver/src/stm32f4xx_rcc.c **** {
 252              		.loc 1 434 1 is_stmt 1 view -0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 0
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 256              		@ link register save eliminated.
 435:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 436:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 257              		.loc 1 436 3 view .LVU59
 437:platform/driver/src/stm32f4xx_rcc.c **** 
 438:platform/driver/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) CSR_LSION_BB = (uint32_t)NewState;
ARM GAS  /tmp/ccOp399b.s 			page 13


 258              		.loc 1 438 3 view .LVU60
 259              		.loc 1 438 35 is_stmt 0 view .LVU61
 260 0000 014B     		ldr	r3, .L20
 261 0002 C3F8800E 		str	r0, [r3, #3712]
 439:platform/driver/src/stm32f4xx_rcc.c **** }
 262              		.loc 1 439 1 view .LVU62
 263 0006 7047     		bx	lr
 264              	.L21:
 265              		.align	2
 266              	.L20:
 267 0008 00004742 		.word	1111949312
 268              		.cfi_endproc
 269              	.LFE129:
 271              		.section	.text.RCC_PLLConfig,"ax",%progbits
 272              		.align	1
 273              		.global	RCC_PLLConfig
 274              		.syntax unified
 275              		.thumb
 276              		.thumb_func
 278              	RCC_PLLConfig:
 279              	.LVL8:
 280              	.LFB130:
 440:platform/driver/src/stm32f4xx_rcc.c **** 
 441:platform/driver/src/stm32f4xx_rcc.c **** #if defined(STM32F410xx) || defined(STM32F412xG) || defined(STM32F413_423xx) || defined(STM32F446xx
 442:platform/driver/src/stm32f4xx_rcc.c **** /**
 443:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the main PLL clock source, multiplication and division factors.
 444:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This function must be used only when the main PLL is disabled.
 445:platform/driver/src/stm32f4xx_rcc.c ****   *  
 446:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_PLLSource: specifies the PLL entry clock source.
 447:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
 448:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_PLLSource_HSI: HSI oscillator clock selected as PLL clock entry
 449:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_PLLSource_HSE: HSE oscillator clock selected as PLL clock entry
 450:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This clock source (RCC_PLLSource) is common for the main PLL and PLLI2S.  
 451:platform/driver/src/stm32f4xx_rcc.c ****   *  
 452:platform/driver/src/stm32f4xx_rcc.c ****   * @param  PLLM: specifies the division factor for PLL VCO input clock
 453:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 0 and 63.
 454:platform/driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLM parameter correctly to ensure that the VCO input
 455:platform/driver/src/stm32f4xx_rcc.c ****   *         frequency ranges from 1 to 2 MHz. It is recommended to select a frequency
 456:platform/driver/src/stm32f4xx_rcc.c ****   *         of 2 MHz to limit PLL jitter.
 457:platform/driver/src/stm32f4xx_rcc.c ****   *  
 458:platform/driver/src/stm32f4xx_rcc.c ****   * @param  PLLN: specifies the multiplication factor for PLL VCO output clock
 459:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 50 and 432.
 460:platform/driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLN parameter correctly to ensure that the VCO
 461:platform/driver/src/stm32f4xx_rcc.c ****   *         output frequency is between 100 and 432 MHz.
 462:platform/driver/src/stm32f4xx_rcc.c ****   *   
 463:platform/driver/src/stm32f4xx_rcc.c ****   * @param  PLLP: specifies the division factor for main system clock (SYSCLK)
 464:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number in the range {2, 4, 6, or 8}.
 465:platform/driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLP parameter correctly to not exceed 168 MHz on
 466:platform/driver/src/stm32f4xx_rcc.c ****   *         the System clock frequency.
 467:platform/driver/src/stm32f4xx_rcc.c ****   *  
 468:platform/driver/src/stm32f4xx_rcc.c ****   * @param  PLLQ: specifies the division factor for OTG FS, SDIO and RNG clocks
 469:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 4 and 15.
 470:platform/driver/src/stm32f4xx_rcc.c ****   *
 471:platform/driver/src/stm32f4xx_rcc.c ****   * @param  PLLR: specifies the division factor for I2S, SAI, SYSTEM, SPDIF in STM32F446xx devices
 472:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 2 and 7.
 473:platform/driver/src/stm32f4xx_rcc.c ****   *
 474:platform/driver/src/stm32f4xx_rcc.c ****   * @note   If the USB OTG FS is used in your application, you have to set the
ARM GAS  /tmp/ccOp399b.s 			page 14


 475:platform/driver/src/stm32f4xx_rcc.c ****   *         PLLQ parameter correctly to have 48 MHz clock for the USB. However,
 476:platform/driver/src/stm32f4xx_rcc.c ****   *         the SDIO and RNG need a frequency lower than or equal to 48 MHz to work
 477:platform/driver/src/stm32f4xx_rcc.c ****   *         correctly.
 478:platform/driver/src/stm32f4xx_rcc.c ****   *   
 479:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
 480:platform/driver/src/stm32f4xx_rcc.c ****   */
 481:platform/driver/src/stm32f4xx_rcc.c **** void RCC_PLLConfig(uint32_t RCC_PLLSource, uint32_t PLLM, uint32_t PLLN, uint32_t PLLP, uint32_t PL
 482:platform/driver/src/stm32f4xx_rcc.c **** {
 483:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 484:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLL_SOURCE(RCC_PLLSource));
 485:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLM_VALUE(PLLM));
 486:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLN_VALUE(PLLN));
 487:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLP_VALUE(PLLP));
 488:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLQ_VALUE(PLLQ));
 489:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLR_VALUE(PLLR));
 490:platform/driver/src/stm32f4xx_rcc.c ****   
 491:platform/driver/src/stm32f4xx_rcc.c ****   RCC->PLLCFGR = PLLM | (PLLN << 6) | (((PLLP >> 1) -1) << 16) | (RCC_PLLSource) |
 492:platform/driver/src/stm32f4xx_rcc.c ****                  (PLLQ << 24) | (PLLR << 28);
 493:platform/driver/src/stm32f4xx_rcc.c **** }
 494:platform/driver/src/stm32f4xx_rcc.c **** #endif /* STM32F410xx || STM32F412xG || STM32F413_423xx || STM32F446xx || STM32F469_479xx */
 495:platform/driver/src/stm32f4xx_rcc.c **** 
 496:platform/driver/src/stm32f4xx_rcc.c **** #if defined(STM32F40_41xxx) || defined(STM32F427_437xx) || defined(STM32F429_439xx) || defined(STM3
 497:platform/driver/src/stm32f4xx_rcc.c **** /**
 498:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the main PLL clock source, multiplication and division factors.
 499:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This function must be used only when the main PLL is disabled.
 500:platform/driver/src/stm32f4xx_rcc.c ****   *  
 501:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_PLLSource: specifies the PLL entry clock source.
 502:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
 503:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_PLLSource_HSI: HSI oscillator clock selected as PLL clock entry
 504:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_PLLSource_HSE: HSE oscillator clock selected as PLL clock entry
 505:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This clock source (RCC_PLLSource) is common for the main PLL and PLLI2S.  
 506:platform/driver/src/stm32f4xx_rcc.c ****   *  
 507:platform/driver/src/stm32f4xx_rcc.c ****   * @param  PLLM: specifies the division factor for PLL VCO input clock
 508:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 0 and 63.
 509:platform/driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLM parameter correctly to ensure that the VCO input
 510:platform/driver/src/stm32f4xx_rcc.c ****   *         frequency ranges from 1 to 2 MHz. It is recommended to select a frequency
 511:platform/driver/src/stm32f4xx_rcc.c ****   *         of 2 MHz to limit PLL jitter.
 512:platform/driver/src/stm32f4xx_rcc.c ****   *  
 513:platform/driver/src/stm32f4xx_rcc.c ****   * @param  PLLN: specifies the multiplication factor for PLL VCO output clock
 514:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 50 and 432.
 515:platform/driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLN parameter correctly to ensure that the VCO
 516:platform/driver/src/stm32f4xx_rcc.c ****   *         output frequency is between 100 and 432 MHz.
 517:platform/driver/src/stm32f4xx_rcc.c ****   *   
 518:platform/driver/src/stm32f4xx_rcc.c ****   * @param  PLLP: specifies the division factor for main system clock (SYSCLK)
 519:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number in the range {2, 4, 6, or 8}.
 520:platform/driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLP parameter correctly to not exceed 168 MHz on
 521:platform/driver/src/stm32f4xx_rcc.c ****   *         the System clock frequency.
 522:platform/driver/src/stm32f4xx_rcc.c ****   *  
 523:platform/driver/src/stm32f4xx_rcc.c ****   * @param  PLLQ: specifies the division factor for OTG FS, SDIO and RNG clocks
 524:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 4 and 15.
 525:platform/driver/src/stm32f4xx_rcc.c ****   * @note   If the USB OTG FS is used in your application, you have to set the
 526:platform/driver/src/stm32f4xx_rcc.c ****   *         PLLQ parameter correctly to have 48 MHz clock for the USB. However,
 527:platform/driver/src/stm32f4xx_rcc.c ****   *         the SDIO and RNG need a frequency lower than or equal to 48 MHz to work
 528:platform/driver/src/stm32f4xx_rcc.c ****   *         correctly.
 529:platform/driver/src/stm32f4xx_rcc.c ****   *   
 530:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
 531:platform/driver/src/stm32f4xx_rcc.c ****   */
ARM GAS  /tmp/ccOp399b.s 			page 15


 532:platform/driver/src/stm32f4xx_rcc.c **** void RCC_PLLConfig(uint32_t RCC_PLLSource, uint32_t PLLM, uint32_t PLLN, uint32_t PLLP, uint32_t PL
 533:platform/driver/src/stm32f4xx_rcc.c **** {
 281              		.loc 1 533 1 is_stmt 1 view -0
 282              		.cfi_startproc
 283              		@ args = 4, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		@ link register save eliminated.
 534:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 535:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLL_SOURCE(RCC_PLLSource));
 286              		.loc 1 535 3 view .LVU64
 536:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLM_VALUE(PLLM));
 287              		.loc 1 536 3 view .LVU65
 537:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLN_VALUE(PLLN));
 288              		.loc 1 537 3 view .LVU66
 538:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLP_VALUE(PLLP));
 289              		.loc 1 538 3 view .LVU67
 539:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLQ_VALUE(PLLQ));
 290              		.loc 1 539 3 view .LVU68
 540:platform/driver/src/stm32f4xx_rcc.c **** 
 541:platform/driver/src/stm32f4xx_rcc.c ****   RCC->PLLCFGR = PLLM | (PLLN << 6) | (((PLLP >> 1) -1) << 16) | (RCC_PLLSource) |
 291              		.loc 1 541 3 view .LVU69
 292              		.loc 1 541 23 is_stmt 0 view .LVU70
 293 0000 41EA8211 		orr	r1, r1, r2, lsl #6
 294              	.LVL9:
 295              		.loc 1 541 47 view .LVU71
 296 0004 5B08     		lsrs	r3, r3, #1
 297              	.LVL10:
 298              		.loc 1 541 53 view .LVU72
 299 0006 013B     		subs	r3, r3, #1
 300              		.loc 1 541 37 view .LVU73
 301 0008 41EA0341 		orr	r1, r1, r3, lsl #16
 302              		.loc 1 541 64 view .LVU74
 303 000c 0143     		orrs	r1, r1, r0
 304              		.loc 1 541 82 view .LVU75
 305 000e 0098     		ldr	r0, [sp]
 306              	.LVL11:
 307              		.loc 1 541 82 view .LVU76
 308 0010 41EA0061 		orr	r1, r1, r0, lsl #24
 309              		.loc 1 541 16 view .LVU77
 310 0014 014B     		ldr	r3, .L23
 311 0016 5960     		str	r1, [r3, #4]
 312              	.LVL12:
 542:platform/driver/src/stm32f4xx_rcc.c ****                  (PLLQ << 24);
 543:platform/driver/src/stm32f4xx_rcc.c **** }
 313              		.loc 1 543 1 view .LVU78
 314 0018 7047     		bx	lr
 315              	.L24:
 316 001a 00BF     		.align	2
 317              	.L23:
 318 001c 00380240 		.word	1073887232
 319              		.cfi_endproc
 320              	.LFE130:
 322              		.section	.text.RCC_PLLCmd,"ax",%progbits
 323              		.align	1
 324              		.global	RCC_PLLCmd
 325              		.syntax unified
 326              		.thumb
ARM GAS  /tmp/ccOp399b.s 			page 16


 327              		.thumb_func
 329              	RCC_PLLCmd:
 330              	.LVL13:
 331              	.LFB131:
 544:platform/driver/src/stm32f4xx_rcc.c **** #endif /* STM32F40_41xxx || STM32F427_437xx || STM32F429_439xx || STM32F401xx || STM32F411xE */
 545:platform/driver/src/stm32f4xx_rcc.c **** 
 546:platform/driver/src/stm32f4xx_rcc.c **** /**
 547:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the main PLL.
 548:platform/driver/src/stm32f4xx_rcc.c ****   * @note   After enabling the main PLL, the application software should wait on 
 549:platform/driver/src/stm32f4xx_rcc.c ****   *         PLLRDY flag to be set indicating that PLL clock is stable and can
 550:platform/driver/src/stm32f4xx_rcc.c ****   *         be used as system clock source.
 551:platform/driver/src/stm32f4xx_rcc.c ****   * @note   The main PLL can not be disabled if it is used as system clock source
 552:platform/driver/src/stm32f4xx_rcc.c ****   * @note   The main PLL is disabled by hardware when entering STOP and STANDBY modes.
 553:platform/driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the main PLL. This parameter can be: ENABLE or DISABLE.
 554:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
 555:platform/driver/src/stm32f4xx_rcc.c ****   */
 556:platform/driver/src/stm32f4xx_rcc.c **** void RCC_PLLCmd(FunctionalState NewState)
 557:platform/driver/src/stm32f4xx_rcc.c **** {
 332              		.loc 1 557 1 is_stmt 1 view -0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 0
 335              		@ frame_needed = 0, uses_anonymous_args = 0
 336              		@ link register save eliminated.
 558:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 559:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 337              		.loc 1 559 3 view .LVU80
 560:platform/driver/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) CR_PLLON_BB = (uint32_t)NewState;
 338              		.loc 1 560 3 view .LVU81
 339              		.loc 1 560 34 is_stmt 0 view .LVU82
 340 0000 014B     		ldr	r3, .L26
 341 0002 1866     		str	r0, [r3, #96]
 561:platform/driver/src/stm32f4xx_rcc.c **** }
 342              		.loc 1 561 1 view .LVU83
 343 0004 7047     		bx	lr
 344              	.L27:
 345 0006 00BF     		.align	2
 346              	.L26:
 347 0008 00004742 		.word	1111949312
 348              		.cfi_endproc
 349              	.LFE131:
 351              		.section	.text.RCC_PLLI2SConfig,"ax",%progbits
 352              		.align	1
 353              		.global	RCC_PLLI2SConfig
 354              		.syntax unified
 355              		.thumb
 356              		.thumb_func
 358              	RCC_PLLI2SConfig:
 359              	.LVL14:
 360              	.LFB132:
 562:platform/driver/src/stm32f4xx_rcc.c **** 
 563:platform/driver/src/stm32f4xx_rcc.c **** #if defined(STM32F40_41xxx) || defined(STM32F401xx)
 564:platform/driver/src/stm32f4xx_rcc.c **** /**
 565:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the PLLI2S clock multiplication and division factors.
 566:platform/driver/src/stm32f4xx_rcc.c ****   *  
 567:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F405xx/407xx, STM32F415xx/417xx 
 568:platform/driver/src/stm32f4xx_rcc.c ****   *         or STM32F401xx devices. 
 569:platform/driver/src/stm32f4xx_rcc.c ****   *    
ARM GAS  /tmp/ccOp399b.s 			page 17


 570:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This function must be used only when the PLLI2S is disabled.
 571:platform/driver/src/stm32f4xx_rcc.c ****   * @note   PLLI2S clock source is common with the main PLL (configured in 
 572:platform/driver/src/stm32f4xx_rcc.c ****   *         RCC_PLLConfig function )  
 573:platform/driver/src/stm32f4xx_rcc.c ****   *             
 574:platform/driver/src/stm32f4xx_rcc.c ****   * @param  PLLI2SN: specifies the multiplication factor for PLLI2S VCO output clock
 575:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 50 and 432.
 576:platform/driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLI2SN parameter correctly to ensure that the VCO 
 577:platform/driver/src/stm32f4xx_rcc.c ****   *         output frequency is between 100 and 432 MHz.
 578:platform/driver/src/stm32f4xx_rcc.c ****   *    
 579:platform/driver/src/stm32f4xx_rcc.c ****   * @param  PLLI2SR: specifies the division factor for I2S clock
 580:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 2 and 7.
 581:platform/driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLI2SR parameter correctly to not exceed 192 MHz
 582:platform/driver/src/stm32f4xx_rcc.c ****   *         on the I2S clock frequency.
 583:platform/driver/src/stm32f4xx_rcc.c ****   *   
 584:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
 585:platform/driver/src/stm32f4xx_rcc.c ****   */
 586:platform/driver/src/stm32f4xx_rcc.c **** void RCC_PLLI2SConfig(uint32_t PLLI2SN, uint32_t PLLI2SR)
 587:platform/driver/src/stm32f4xx_rcc.c **** {
 361              		.loc 1 587 1 is_stmt 1 view -0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 0
 364              		@ frame_needed = 0, uses_anonymous_args = 0
 365              		@ link register save eliminated.
 588:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 589:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SN_VALUE(PLLI2SN));
 366              		.loc 1 589 3 view .LVU85
 590:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SR_VALUE(PLLI2SR));
 367              		.loc 1 590 3 view .LVU86
 591:platform/driver/src/stm32f4xx_rcc.c **** 
 592:platform/driver/src/stm32f4xx_rcc.c ****   RCC->PLLI2SCFGR = (PLLI2SN << 6) | (PLLI2SR << 28);
 368              		.loc 1 592 3 view .LVU87
 369              		.loc 1 592 47 is_stmt 0 view .LVU88
 370 0000 0907     		lsls	r1, r1, #28
 371              	.LVL15:
 372              		.loc 1 592 36 view .LVU89
 373 0002 41EA8011 		orr	r1, r1, r0, lsl #6
 374              		.loc 1 592 19 view .LVU90
 375 0006 024B     		ldr	r3, .L29
 376 0008 C3F88410 		str	r1, [r3, #132]
 593:platform/driver/src/stm32f4xx_rcc.c **** }
 377              		.loc 1 593 1 view .LVU91
 378 000c 7047     		bx	lr
 379              	.L30:
 380 000e 00BF     		.align	2
 381              	.L29:
 382 0010 00380240 		.word	1073887232
 383              		.cfi_endproc
 384              	.LFE132:
 386              		.section	.text.RCC_PLLI2SCmd,"ax",%progbits
 387              		.align	1
 388              		.global	RCC_PLLI2SCmd
 389              		.syntax unified
 390              		.thumb
 391              		.thumb_func
 393              	RCC_PLLI2SCmd:
 394              	.LVL16:
 395              	.LFB133:
ARM GAS  /tmp/ccOp399b.s 			page 18


 594:platform/driver/src/stm32f4xx_rcc.c **** #endif /* STM32F40_41xxx || STM32F401xx */
 595:platform/driver/src/stm32f4xx_rcc.c **** 
 596:platform/driver/src/stm32f4xx_rcc.c **** #if defined(STM32F411xE)
 597:platform/driver/src/stm32f4xx_rcc.c **** /**
 598:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the PLLI2S clock multiplication and division factors.
 599:platform/driver/src/stm32f4xx_rcc.c ****   *  
 600:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F411xE devices. 
 601:platform/driver/src/stm32f4xx_rcc.c ****   *    
 602:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This function must be used only when the PLLI2S is disabled.
 603:platform/driver/src/stm32f4xx_rcc.c ****   * @note   PLLI2S clock source is common with the main PLL (configured in 
 604:platform/driver/src/stm32f4xx_rcc.c ****   *         RCC_PLLConfig function )  
 605:platform/driver/src/stm32f4xx_rcc.c ****   *
 606:platform/driver/src/stm32f4xx_rcc.c ****   * @param  PLLI2SM: specifies the division factor for PLLI2S VCO input clock
 607:platform/driver/src/stm32f4xx_rcc.c ****   *         This parameter must be a number between Min_Data = 2 and Max_Data = 63.
 608:platform/driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLI2SM parameter correctly to ensure that the VCO input
 609:platform/driver/src/stm32f4xx_rcc.c ****   *         frequency ranges from 1 to 2 MHz. It is recommended to select a frequency
 610:platform/driver/src/stm32f4xx_rcc.c ****   *         of 2 MHz to limit PLLI2S jitter.
 611:platform/driver/src/stm32f4xx_rcc.c ****   *
 612:platform/driver/src/stm32f4xx_rcc.c ****   * @param  PLLI2SN: specifies the multiplication factor for PLLI2S VCO output clock
 613:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 50 and 432.
 614:platform/driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLI2SN parameter correctly to ensure that the VCO 
 615:platform/driver/src/stm32f4xx_rcc.c ****   *         output frequency is between 100 and 432 MHz.
 616:platform/driver/src/stm32f4xx_rcc.c ****   *    
 617:platform/driver/src/stm32f4xx_rcc.c ****   * @param  PLLI2SR: specifies the division factor for I2S clock
 618:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 2 and 7.
 619:platform/driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLI2SR parameter correctly to not exceed 192 MHz
 620:platform/driver/src/stm32f4xx_rcc.c ****   *         on the I2S clock frequency.
 621:platform/driver/src/stm32f4xx_rcc.c ****   *   
 622:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
 623:platform/driver/src/stm32f4xx_rcc.c ****   */
 624:platform/driver/src/stm32f4xx_rcc.c **** void RCC_PLLI2SConfig(uint32_t PLLI2SN, uint32_t PLLI2SR, uint32_t PLLI2SM)
 625:platform/driver/src/stm32f4xx_rcc.c **** {
 626:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 627:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SN_VALUE(PLLI2SN));
 628:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SM_VALUE(PLLI2SM));
 629:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SR_VALUE(PLLI2SR));
 630:platform/driver/src/stm32f4xx_rcc.c **** 
 631:platform/driver/src/stm32f4xx_rcc.c ****   RCC->PLLI2SCFGR = (PLLI2SN << 6) | (PLLI2SR << 28) | PLLI2SM;
 632:platform/driver/src/stm32f4xx_rcc.c **** }
 633:platform/driver/src/stm32f4xx_rcc.c **** #endif /* STM32F411xE */
 634:platform/driver/src/stm32f4xx_rcc.c **** 
 635:platform/driver/src/stm32f4xx_rcc.c **** #if defined(STM32F427_437xx) || defined(STM32F429_439xx) || defined(STM32F469_479xx)
 636:platform/driver/src/stm32f4xx_rcc.c **** /**
 637:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the PLLI2S clock multiplication and division factors.
 638:platform/driver/src/stm32f4xx_rcc.c ****   * 
 639:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F42xxx/43xxx devices 
 640:platform/driver/src/stm32f4xx_rcc.c ****   *         
 641:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This function must be used only when the PLLI2S is disabled.
 642:platform/driver/src/stm32f4xx_rcc.c ****   * @note   PLLI2S clock source is common with the main PLL (configured in 
 643:platform/driver/src/stm32f4xx_rcc.c ****   *         RCC_PLLConfig function )  
 644:platform/driver/src/stm32f4xx_rcc.c ****   *             
 645:platform/driver/src/stm32f4xx_rcc.c ****   * @param  PLLI2SN: specifies the multiplication factor for PLLI2S VCO output clock
 646:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 50 and 432.
 647:platform/driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLI2SN parameter correctly to ensure that the VCO 
 648:platform/driver/src/stm32f4xx_rcc.c ****   *         output frequency is between 100 and 432 MHz.
 649:platform/driver/src/stm32f4xx_rcc.c ****   * 
 650:platform/driver/src/stm32f4xx_rcc.c ****   * @param  PLLI2SQ: specifies the division factor for SAI1 clock
ARM GAS  /tmp/ccOp399b.s 			page 19


 651:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 2 and 15.
 652:platform/driver/src/stm32f4xx_rcc.c ****   *                 
 653:platform/driver/src/stm32f4xx_rcc.c ****   * @param  PLLI2SR: specifies the division factor for I2S clock
 654:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 2 and 7.
 655:platform/driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLI2SR parameter correctly to not exceed 192 MHz
 656:platform/driver/src/stm32f4xx_rcc.c ****   *         on the I2S clock frequency.
 657:platform/driver/src/stm32f4xx_rcc.c ****   *   
 658:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
 659:platform/driver/src/stm32f4xx_rcc.c ****   */
 660:platform/driver/src/stm32f4xx_rcc.c **** void RCC_PLLI2SConfig(uint32_t PLLI2SN, uint32_t PLLI2SQ, uint32_t PLLI2SR)
 661:platform/driver/src/stm32f4xx_rcc.c **** {
 662:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 663:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SN_VALUE(PLLI2SN));
 664:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SQ_VALUE(PLLI2SQ));
 665:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SR_VALUE(PLLI2SR));
 666:platform/driver/src/stm32f4xx_rcc.c **** 
 667:platform/driver/src/stm32f4xx_rcc.c ****   RCC->PLLI2SCFGR = (PLLI2SN << 6) | (PLLI2SQ << 24) | (PLLI2SR << 28);
 668:platform/driver/src/stm32f4xx_rcc.c **** }
 669:platform/driver/src/stm32f4xx_rcc.c **** #endif /* STM32F427_437xx || STM32F429_439xx || STM32F469_479xx */
 670:platform/driver/src/stm32f4xx_rcc.c **** 
 671:platform/driver/src/stm32f4xx_rcc.c **** #if defined(STM32F412xG ) || defined(STM32F413_423xx) || defined(STM32F446xx)
 672:platform/driver/src/stm32f4xx_rcc.c **** /**
 673:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the PLLI2S clock multiplication and division factors.
 674:platform/driver/src/stm32f4xx_rcc.c ****   * 
 675:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F446xx devices 
 676:platform/driver/src/stm32f4xx_rcc.c ****   *         
 677:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This function must be used only when the PLLI2S is disabled.
 678:platform/driver/src/stm32f4xx_rcc.c ****   * @note   PLLI2S clock source is common with the main PLL (configured in 
 679:platform/driver/src/stm32f4xx_rcc.c ****   *         RCC_PLLConfig function )  
 680:platform/driver/src/stm32f4xx_rcc.c ****   * 
 681:platform/driver/src/stm32f4xx_rcc.c ****   * @param  PLLI2SM: specifies the division factor for PLLI2S VCO input clock
 682:platform/driver/src/stm32f4xx_rcc.c ****   *         This parameter must be a number between Min_Data = 2 and Max_Data = 63.
 683:platform/driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLI2SM parameter correctly to ensure that the VCO input
 684:platform/driver/src/stm32f4xx_rcc.c ****   *         frequency ranges from 1 to 2 MHz. It is recommended to select a frequency
 685:platform/driver/src/stm32f4xx_rcc.c ****   *         of 2 MHz to limit PLLI2S jitter.
 686:platform/driver/src/stm32f4xx_rcc.c ****   *
 687:platform/driver/src/stm32f4xx_rcc.c ****   * @param  PLLI2SN: specifies the multiplication factor for PLLI2S VCO output clock
 688:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 50 and 432.
 689:platform/driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLI2SN parameter correctly to ensure that the VCO 
 690:platform/driver/src/stm32f4xx_rcc.c ****   *         output frequency is between 100 and 432 MHz.
 691:platform/driver/src/stm32f4xx_rcc.c ****   *
 692:platform/driver/src/stm32f4xx_rcc.c ****   * @param  PLLI2SP: specifies the division factor for PLL 48Mhz clock output
 693:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number in the range {2, 4, 6, or 8}.
 694:platform/driver/src/stm32f4xx_rcc.c ****   *
 695:platform/driver/src/stm32f4xx_rcc.c ****   * @param  PLLI2SQ: specifies the division factor for SAI1 clock
 696:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 2 and 15.
 697:platform/driver/src/stm32f4xx_rcc.c ****   *                 
 698:platform/driver/src/stm32f4xx_rcc.c ****   * @param  PLLI2SR: specifies the division factor for I2S clock
 699:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 2 and 7.
 700:platform/driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLI2SR parameter correctly to not exceed 192 MHz
 701:platform/driver/src/stm32f4xx_rcc.c ****   *         on the I2S clock frequency.
 702:platform/driver/src/stm32f4xx_rcc.c ****   * @note   the PLLI2SR parameter is only available with STM32F42xxx/43xxx devices.  
 703:platform/driver/src/stm32f4xx_rcc.c ****   *   
 704:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
 705:platform/driver/src/stm32f4xx_rcc.c ****   */
 706:platform/driver/src/stm32f4xx_rcc.c **** void RCC_PLLI2SConfig(uint32_t PLLI2SM, uint32_t PLLI2SN, uint32_t PLLI2SP, uint32_t PLLI2SQ, uint3
 707:platform/driver/src/stm32f4xx_rcc.c **** {
ARM GAS  /tmp/ccOp399b.s 			page 20


 708:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 709:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SM_VALUE(PLLI2SM));
 710:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SN_VALUE(PLLI2SN));
 711:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SP_VALUE(PLLI2SP));
 712:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SQ_VALUE(PLLI2SQ));
 713:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SR_VALUE(PLLI2SR));
 714:platform/driver/src/stm32f4xx_rcc.c **** 
 715:platform/driver/src/stm32f4xx_rcc.c ****   RCC->PLLI2SCFGR =  PLLI2SM | (PLLI2SN << 6) | (((PLLI2SP >> 1) -1) << 16) | (PLLI2SQ << 24) | (PL
 716:platform/driver/src/stm32f4xx_rcc.c **** }
 717:platform/driver/src/stm32f4xx_rcc.c **** #endif /* STM32F412xG || STM32F413_423xx || STM32F446xx */
 718:platform/driver/src/stm32f4xx_rcc.c **** 
 719:platform/driver/src/stm32f4xx_rcc.c **** /**
 720:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the PLLI2S. 
 721:platform/driver/src/stm32f4xx_rcc.c ****   * @note   The PLLI2S is disabled by hardware when entering STOP and STANDBY modes.  
 722:platform/driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the PLLI2S. This parameter can be: ENABLE or DISABLE.
 723:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
 724:platform/driver/src/stm32f4xx_rcc.c ****   */
 725:platform/driver/src/stm32f4xx_rcc.c **** void RCC_PLLI2SCmd(FunctionalState NewState)
 726:platform/driver/src/stm32f4xx_rcc.c **** {
 396              		.loc 1 726 1 is_stmt 1 view -0
 397              		.cfi_startproc
 398              		@ args = 0, pretend = 0, frame = 0
 399              		@ frame_needed = 0, uses_anonymous_args = 0
 400              		@ link register save eliminated.
 727:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 728:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 401              		.loc 1 728 3 view .LVU93
 729:platform/driver/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) CR_PLLI2SON_BB = (uint32_t)NewState;
 402              		.loc 1 729 3 view .LVU94
 403              		.loc 1 729 37 is_stmt 0 view .LVU95
 404 0000 014B     		ldr	r3, .L32
 405 0002 9866     		str	r0, [r3, #104]
 730:platform/driver/src/stm32f4xx_rcc.c **** }
 406              		.loc 1 730 1 view .LVU96
 407 0004 7047     		bx	lr
 408              	.L33:
 409 0006 00BF     		.align	2
 410              	.L32:
 411 0008 00004742 		.word	1111949312
 412              		.cfi_endproc
 413              	.LFE133:
 415              		.section	.text.RCC_PLLSAIConfig,"ax",%progbits
 416              		.align	1
 417              		.global	RCC_PLLSAIConfig
 418              		.syntax unified
 419              		.thumb
 420              		.thumb_func
 422              	RCC_PLLSAIConfig:
 423              	.LVL17:
 424              	.LFB134:
 731:platform/driver/src/stm32f4xx_rcc.c **** 
 732:platform/driver/src/stm32f4xx_rcc.c **** #if defined(STM32F469_479xx)
 733:platform/driver/src/stm32f4xx_rcc.c **** /**
 734:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the PLLSAI clock multiplication and division factors.
 735:platform/driver/src/stm32f4xx_rcc.c ****   *
 736:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F469_479xx devices 
 737:platform/driver/src/stm32f4xx_rcc.c ****   *        
ARM GAS  /tmp/ccOp399b.s 			page 21


 738:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This function must be used only when the PLLSAI is disabled.
 739:platform/driver/src/stm32f4xx_rcc.c ****   * @note   PLLSAI clock source is common with the main PLL (configured in 
 740:platform/driver/src/stm32f4xx_rcc.c ****   *         RCC_PLLConfig function )  
 741:platform/driver/src/stm32f4xx_rcc.c ****   *
 742:platform/driver/src/stm32f4xx_rcc.c ****   * @param  PLLSAIN: specifies the multiplication factor for PLLSAI VCO output clock
 743:platform/driver/src/stm32f4xx_rcc.c ****   *         This parameter must be a number between 50 and 432.
 744:platform/driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLSAIN parameter correctly to ensure that the VCO 
 745:platform/driver/src/stm32f4xx_rcc.c ****   *         output frequency is between 100 and 432 MHz.
 746:platform/driver/src/stm32f4xx_rcc.c ****   *
 747:platform/driver/src/stm32f4xx_rcc.c ****   * @param  PLLSAIP: specifies the division factor for PLL 48Mhz clock output
 748:platform/driver/src/stm32f4xx_rcc.c ****   *         This parameter must be a number in the range {2, 4, 6, or 8}..
 749:platform/driver/src/stm32f4xx_rcc.c ****   *           
 750:platform/driver/src/stm32f4xx_rcc.c ****   * @param  PLLSAIQ: specifies the division factor for SAI1 clock
 751:platform/driver/src/stm32f4xx_rcc.c ****   *         This parameter must be a number between 2 and 15.
 752:platform/driver/src/stm32f4xx_rcc.c ****   *            
 753:platform/driver/src/stm32f4xx_rcc.c ****   * @param  PLLSAIR: specifies the division factor for LTDC clock
 754:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 2 and 7.
 755:platform/driver/src/stm32f4xx_rcc.c ****   *   
 756:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
 757:platform/driver/src/stm32f4xx_rcc.c ****   */
 758:platform/driver/src/stm32f4xx_rcc.c **** void RCC_PLLSAIConfig(uint32_t PLLSAIN, uint32_t PLLSAIP, uint32_t PLLSAIQ, uint32_t PLLSAIR)
 759:platform/driver/src/stm32f4xx_rcc.c **** {
 760:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 761:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAIN_VALUE(PLLSAIN));
 762:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAIP_VALUE(PLLSAIP));
 763:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAIQ_VALUE(PLLSAIQ));
 764:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAIR_VALUE(PLLSAIR));
 765:platform/driver/src/stm32f4xx_rcc.c **** 
 766:platform/driver/src/stm32f4xx_rcc.c ****   RCC->PLLSAICFGR = (PLLSAIN << 6) | (((PLLSAIP >> 1) -1) << 16) | (PLLSAIQ << 24) | (PLLSAIR << 28
 767:platform/driver/src/stm32f4xx_rcc.c **** }
 768:platform/driver/src/stm32f4xx_rcc.c **** #endif /* STM32F469_479xx */
 769:platform/driver/src/stm32f4xx_rcc.c **** 
 770:platform/driver/src/stm32f4xx_rcc.c **** #if defined(STM32F446xx)
 771:platform/driver/src/stm32f4xx_rcc.c **** /**
 772:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the PLLSAI clock multiplication and division factors.
 773:platform/driver/src/stm32f4xx_rcc.c ****   *
 774:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F446xx devices 
 775:platform/driver/src/stm32f4xx_rcc.c ****   *        
 776:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This function must be used only when the PLLSAI is disabled.
 777:platform/driver/src/stm32f4xx_rcc.c ****   * @note   PLLSAI clock source is common with the main PLL (configured in 
 778:platform/driver/src/stm32f4xx_rcc.c ****   *         RCC_PLLConfig function )  
 779:platform/driver/src/stm32f4xx_rcc.c ****   * 
 780:platform/driver/src/stm32f4xx_rcc.c ****   * @param  PLLSAIM: specifies the division factor for PLLSAI VCO input clock
 781:platform/driver/src/stm32f4xx_rcc.c ****   *         This parameter must be a number between Min_Data = 2 and Max_Data = 63.
 782:platform/driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLSAIM parameter correctly to ensure that the VCO input
 783:platform/driver/src/stm32f4xx_rcc.c ****   *         frequency ranges from 1 to 2 MHz. It is recommended to select a frequency
 784:platform/driver/src/stm32f4xx_rcc.c ****   *         of 2 MHz to limit PLLSAI jitter.
 785:platform/driver/src/stm32f4xx_rcc.c ****   *
 786:platform/driver/src/stm32f4xx_rcc.c ****   * @param  PLLSAIN: specifies the multiplication factor for PLLSAI VCO output clock
 787:platform/driver/src/stm32f4xx_rcc.c ****   *         This parameter must be a number between 50 and 432.
 788:platform/driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLSAIN parameter correctly to ensure that the VCO 
 789:platform/driver/src/stm32f4xx_rcc.c ****   *         output frequency is between 100 and 432 MHz.
 790:platform/driver/src/stm32f4xx_rcc.c ****   * 
 791:platform/driver/src/stm32f4xx_rcc.c ****   * @param  PLLSAIP: specifies the division factor for PLL 48Mhz clock output
 792:platform/driver/src/stm32f4xx_rcc.c ****   *         This parameter must be a number in the range {2, 4, 6, or 8}.
 793:platform/driver/src/stm32f4xx_rcc.c ****   *
 794:platform/driver/src/stm32f4xx_rcc.c ****   * @param  PLLSAIQ: specifies the division factor for SAI1 clock
ARM GAS  /tmp/ccOp399b.s 			page 22


 795:platform/driver/src/stm32f4xx_rcc.c ****   *         This parameter must be a number between 2 and 15.
 796:platform/driver/src/stm32f4xx_rcc.c ****   *   
 797:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
 798:platform/driver/src/stm32f4xx_rcc.c ****   */
 799:platform/driver/src/stm32f4xx_rcc.c **** void RCC_PLLSAIConfig(uint32_t PLLSAIM, uint32_t PLLSAIN, uint32_t PLLSAIP, uint32_t PLLSAIQ)
 800:platform/driver/src/stm32f4xx_rcc.c **** {
 801:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 802:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAIM_VALUE(PLLSAIM));
 803:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAIN_VALUE(PLLSAIN));
 804:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAIP_VALUE(PLLSAIP));
 805:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAIQ_VALUE(PLLSAIQ));
 806:platform/driver/src/stm32f4xx_rcc.c **** 
 807:platform/driver/src/stm32f4xx_rcc.c ****   RCC->PLLSAICFGR = PLLSAIM | (PLLSAIN << 6) | (((PLLSAIP >> 1) -1) << 16)  | (PLLSAIQ << 24);
 808:platform/driver/src/stm32f4xx_rcc.c **** }
 809:platform/driver/src/stm32f4xx_rcc.c **** #endif /* STM32F446xx */
 810:platform/driver/src/stm32f4xx_rcc.c **** 
 811:platform/driver/src/stm32f4xx_rcc.c **** #if defined(STM32F40_41xxx) || defined(STM32F427_437xx) || defined(STM32F429_439xx) || defined(STM3
 812:platform/driver/src/stm32f4xx_rcc.c **** /**
 813:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the PLLSAI clock multiplication and division factors.
 814:platform/driver/src/stm32f4xx_rcc.c ****   *
 815:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F42xxx/43xxx devices 
 816:platform/driver/src/stm32f4xx_rcc.c ****   *        
 817:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This function must be used only when the PLLSAI is disabled.
 818:platform/driver/src/stm32f4xx_rcc.c ****   * @note   PLLSAI clock source is common with the main PLL (configured in 
 819:platform/driver/src/stm32f4xx_rcc.c ****   *         RCC_PLLConfig function )  
 820:platform/driver/src/stm32f4xx_rcc.c ****   *             
 821:platform/driver/src/stm32f4xx_rcc.c ****   * @param  PLLSAIN: specifies the multiplication factor for PLLSAI VCO output clock
 822:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 50 and 432.
 823:platform/driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLSAIN parameter correctly to ensure that the VCO 
 824:platform/driver/src/stm32f4xx_rcc.c ****   *         output frequency is between 100 and 432 MHz.
 825:platform/driver/src/stm32f4xx_rcc.c ****   *           
 826:platform/driver/src/stm32f4xx_rcc.c ****   * @param  PLLSAIQ: specifies the division factor for SAI1 clock
 827:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 2 and 15.
 828:platform/driver/src/stm32f4xx_rcc.c ****   *            
 829:platform/driver/src/stm32f4xx_rcc.c ****   * @param  PLLSAIR: specifies the division factor for LTDC clock
 830:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 2 and 7.
 831:platform/driver/src/stm32f4xx_rcc.c ****   *   
 832:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
 833:platform/driver/src/stm32f4xx_rcc.c ****   */
 834:platform/driver/src/stm32f4xx_rcc.c **** void RCC_PLLSAIConfig(uint32_t PLLSAIN, uint32_t PLLSAIQ, uint32_t PLLSAIR)
 835:platform/driver/src/stm32f4xx_rcc.c **** {
 425              		.loc 1 835 1 is_stmt 1 view -0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 0
 428              		@ frame_needed = 0, uses_anonymous_args = 0
 429              		@ link register save eliminated.
 836:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 837:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAIN_VALUE(PLLSAIN));
 430              		.loc 1 837 3 view .LVU98
 838:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAIR_VALUE(PLLSAIR));
 431              		.loc 1 838 3 view .LVU99
 839:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAIQ_VALUE(PLLSAIQ));
 432              		.loc 1 839 3 view .LVU100
 840:platform/driver/src/stm32f4xx_rcc.c ****   
 841:platform/driver/src/stm32f4xx_rcc.c ****   RCC->PLLSAICFGR = (PLLSAIN << 6) | (PLLSAIQ << 24) | (PLLSAIR << 28);
 433              		.loc 1 841 3 view .LVU101
 434              		.loc 1 841 47 is_stmt 0 view .LVU102
ARM GAS  /tmp/ccOp399b.s 			page 23


 435 0000 0906     		lsls	r1, r1, #24
 436              	.LVL18:
 437              		.loc 1 841 36 view .LVU103
 438 0002 41EA8011 		orr	r1, r1, r0, lsl #6
 439              		.loc 1 841 54 view .LVU104
 440 0006 41EA0271 		orr	r1, r1, r2, lsl #28
 441              		.loc 1 841 19 view .LVU105
 442 000a 024B     		ldr	r3, .L35
 443 000c C3F88810 		str	r1, [r3, #136]
 842:platform/driver/src/stm32f4xx_rcc.c **** }
 444              		.loc 1 842 1 view .LVU106
 445 0010 7047     		bx	lr
 446              	.L36:
 447 0012 00BF     		.align	2
 448              	.L35:
 449 0014 00380240 		.word	1073887232
 450              		.cfi_endproc
 451              	.LFE134:
 453              		.section	.text.RCC_PLLSAICmd,"ax",%progbits
 454              		.align	1
 455              		.global	RCC_PLLSAICmd
 456              		.syntax unified
 457              		.thumb
 458              		.thumb_func
 460              	RCC_PLLSAICmd:
 461              	.LVL19:
 462              	.LFB135:
 843:platform/driver/src/stm32f4xx_rcc.c **** #endif /* STM32F40_41xxx || STM32F427_437xx || STM32F429_439xx || STM32F401xx || STM32F411xE */
 844:platform/driver/src/stm32f4xx_rcc.c **** 
 845:platform/driver/src/stm32f4xx_rcc.c **** /**
 846:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the PLLSAI. 
 847:platform/driver/src/stm32f4xx_rcc.c ****   * 
 848:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F42xxx/43xxx/446xx/469xx/479xx devices 
 849:platform/driver/src/stm32f4xx_rcc.c ****   *       
 850:platform/driver/src/stm32f4xx_rcc.c ****   * @note   The PLLSAI is disabled by hardware when entering STOP and STANDBY modes.  
 851:platform/driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the PLLSAI. This parameter can be: ENABLE or DISABLE.
 852:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
 853:platform/driver/src/stm32f4xx_rcc.c ****   */
 854:platform/driver/src/stm32f4xx_rcc.c **** void RCC_PLLSAICmd(FunctionalState NewState)
 855:platform/driver/src/stm32f4xx_rcc.c **** {
 463              		.loc 1 855 1 is_stmt 1 view -0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 0
 466              		@ frame_needed = 0, uses_anonymous_args = 0
 467              		@ link register save eliminated.
 856:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 857:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 468              		.loc 1 857 3 view .LVU108
 858:platform/driver/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) CR_PLLSAION_BB = (uint32_t)NewState;
 469              		.loc 1 858 3 view .LVU109
 470              		.loc 1 858 37 is_stmt 0 view .LVU110
 471 0000 014B     		ldr	r3, .L38
 472 0002 1867     		str	r0, [r3, #112]
 859:platform/driver/src/stm32f4xx_rcc.c **** }
 473              		.loc 1 859 1 view .LVU111
 474 0004 7047     		bx	lr
 475              	.L39:
ARM GAS  /tmp/ccOp399b.s 			page 24


 476 0006 00BF     		.align	2
 477              	.L38:
 478 0008 00004742 		.word	1111949312
 479              		.cfi_endproc
 480              	.LFE135:
 482              		.section	.text.RCC_ClockSecuritySystemCmd,"ax",%progbits
 483              		.align	1
 484              		.global	RCC_ClockSecuritySystemCmd
 485              		.syntax unified
 486              		.thumb
 487              		.thumb_func
 489              	RCC_ClockSecuritySystemCmd:
 490              	.LVL20:
 491              	.LFB136:
 860:platform/driver/src/stm32f4xx_rcc.c **** 
 861:platform/driver/src/stm32f4xx_rcc.c **** /**
 862:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the Clock Security System.
 863:platform/driver/src/stm32f4xx_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
 864:platform/driver/src/stm32f4xx_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
 865:platform/driver/src/stm32f4xx_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
 866:platform/driver/src/stm32f4xx_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to 
 867:platform/driver/src/stm32f4xx_rcc.c ****   *         the Cortex-M4 NMI (Non-Maskable Interrupt) exception vector.  
 868:platform/driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the Clock Security System.
 869:platform/driver/src/stm32f4xx_rcc.c ****   *         This parameter can be: ENABLE or DISABLE.
 870:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
 871:platform/driver/src/stm32f4xx_rcc.c ****   */
 872:platform/driver/src/stm32f4xx_rcc.c **** void RCC_ClockSecuritySystemCmd(FunctionalState NewState)
 873:platform/driver/src/stm32f4xx_rcc.c **** {
 492              		.loc 1 873 1 is_stmt 1 view -0
 493              		.cfi_startproc
 494              		@ args = 0, pretend = 0, frame = 0
 495              		@ frame_needed = 0, uses_anonymous_args = 0
 496              		@ link register save eliminated.
 874:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 875:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 497              		.loc 1 875 3 view .LVU113
 876:platform/driver/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) CR_CSSON_BB = (uint32_t)NewState;
 498              		.loc 1 876 3 view .LVU114
 499              		.loc 1 876 34 is_stmt 0 view .LVU115
 500 0000 014B     		ldr	r3, .L41
 501 0002 D864     		str	r0, [r3, #76]
 877:platform/driver/src/stm32f4xx_rcc.c **** }
 502              		.loc 1 877 1 view .LVU116
 503 0004 7047     		bx	lr
 504              	.L42:
 505 0006 00BF     		.align	2
 506              	.L41:
 507 0008 00004742 		.word	1111949312
 508              		.cfi_endproc
 509              	.LFE136:
 511              		.section	.text.RCC_MCO1Config,"ax",%progbits
 512              		.align	1
 513              		.global	RCC_MCO1Config
 514              		.syntax unified
 515              		.thumb
 516              		.thumb_func
 518              	RCC_MCO1Config:
ARM GAS  /tmp/ccOp399b.s 			page 25


 519              	.LVL21:
 520              	.LFB137:
 878:platform/driver/src/stm32f4xx_rcc.c **** 
 879:platform/driver/src/stm32f4xx_rcc.c **** /**
 880:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Selects the clock source to output on MCO1 pin(PA8).
 881:platform/driver/src/stm32f4xx_rcc.c ****   * @note   PA8 should be configured in alternate function mode.
 882:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_MCO1Source: specifies the clock source to output.
 883:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
 884:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO1Source_HSI: HSI clock selected as MCO1 source
 885:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO1Source_LSE: LSE clock selected as MCO1 source
 886:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO1Source_HSE: HSE clock selected as MCO1 source
 887:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO1Source_PLLCLK: main PLL clock selected as MCO1 source
 888:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_MCO1Div: specifies the MCO1 prescaler.
 889:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
 890:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO1Div_1: no division applied to MCO1 clock
 891:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO1Div_2: division by 2 applied to MCO1 clock
 892:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO1Div_3: division by 3 applied to MCO1 clock
 893:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO1Div_4: division by 4 applied to MCO1 clock
 894:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO1Div_5: division by 5 applied to MCO1 clock
 895:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
 896:platform/driver/src/stm32f4xx_rcc.c ****   */
 897:platform/driver/src/stm32f4xx_rcc.c **** void RCC_MCO1Config(uint32_t RCC_MCO1Source, uint32_t RCC_MCO1Div)
 898:platform/driver/src/stm32f4xx_rcc.c **** {
 521              		.loc 1 898 1 is_stmt 1 view -0
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 0
 524              		@ frame_needed = 0, uses_anonymous_args = 0
 525              		@ link register save eliminated.
 899:platform/driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 526              		.loc 1 899 3 view .LVU118
 900:platform/driver/src/stm32f4xx_rcc.c ****   
 901:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 902:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_MCO1SOURCE(RCC_MCO1Source));
 527              		.loc 1 902 3 view .LVU119
 903:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_MCO1DIV(RCC_MCO1Div));  
 528              		.loc 1 903 3 view .LVU120
 904:platform/driver/src/stm32f4xx_rcc.c **** 
 905:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->CFGR;
 529              		.loc 1 905 3 view .LVU121
 530              		.loc 1 905 10 is_stmt 0 view .LVU122
 531 0000 034A     		ldr	r2, .L44
 532 0002 9368     		ldr	r3, [r2, #8]
 533              	.LVL22:
 906:platform/driver/src/stm32f4xx_rcc.c **** 
 907:platform/driver/src/stm32f4xx_rcc.c ****   /* Clear MCO1[1:0] and MCO1PRE[2:0] bits */
 908:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg &= CFGR_MCO1_RESET_MASK;
 534              		.loc 1 908 3 is_stmt 1 view .LVU123
 535              		.loc 1 908 10 is_stmt 0 view .LVU124
 536 0004 23F0EC63 		bic	r3, r3, #123731968
 537              	.LVL23:
 909:platform/driver/src/stm32f4xx_rcc.c **** 
 910:platform/driver/src/stm32f4xx_rcc.c ****   /* Select MCO1 clock source and prescaler */
 911:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_MCO1Source | RCC_MCO1Div;
 538              		.loc 1 911 3 is_stmt 1 view .LVU125
 539              		.loc 1 911 28 is_stmt 0 view .LVU126
 540 0008 0843     		orrs	r0, r0, r1
 541              	.LVL24:
ARM GAS  /tmp/ccOp399b.s 			page 26


 542              		.loc 1 911 10 view .LVU127
 543 000a 1843     		orrs	r0, r0, r3
 544              	.LVL25:
 912:platform/driver/src/stm32f4xx_rcc.c ****   
 913:platform/driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
 914:platform/driver/src/stm32f4xx_rcc.c ****   RCC->CFGR = tmpreg;
 545              		.loc 1 914 3 is_stmt 1 view .LVU128
 546              		.loc 1 914 13 is_stmt 0 view .LVU129
 547 000c 9060     		str	r0, [r2, #8]
 915:platform/driver/src/stm32f4xx_rcc.c **** 
 916:platform/driver/src/stm32f4xx_rcc.c **** #if defined(STM32F410xx)
 917:platform/driver/src/stm32f4xx_rcc.c ****   RCC_MCO1Cmd(ENABLE);
 918:platform/driver/src/stm32f4xx_rcc.c **** #endif /* STM32F410xx */   
 919:platform/driver/src/stm32f4xx_rcc.c **** }
 548              		.loc 1 919 1 view .LVU130
 549 000e 7047     		bx	lr
 550              	.L45:
 551              		.align	2
 552              	.L44:
 553 0010 00380240 		.word	1073887232
 554              		.cfi_endproc
 555              	.LFE137:
 557              		.section	.text.RCC_MCO2Config,"ax",%progbits
 558              		.align	1
 559              		.global	RCC_MCO2Config
 560              		.syntax unified
 561              		.thumb
 562              		.thumb_func
 564              	RCC_MCO2Config:
 565              	.LVL26:
 566              	.LFB138:
 920:platform/driver/src/stm32f4xx_rcc.c **** 
 921:platform/driver/src/stm32f4xx_rcc.c **** /**
 922:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Selects the clock source to output on MCO2 pin(PC9).
 923:platform/driver/src/stm32f4xx_rcc.c ****   * @note   PC9 should be configured in alternate function mode.
 924:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_MCO2Source: specifies the clock source to output.
 925:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
 926:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO2Source_SYSCLK: System clock (SYSCLK) selected as MCO2 source
 927:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO2SOURCE_PLLI2SCLK: PLLI2S clock selected as MCO2 source, available for a
 928:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO2SOURCE_I2SCLK: I2SCLK clock selected as MCO2 source, available only for
 929:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO2Source_HSE: HSE clock selected as MCO2 source
 930:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO2Source_PLLCLK: main PLL clock selected as MCO2 source
 931:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_MCO2Div: specifies the MCO2 prescaler.
 932:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
 933:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO2Div_1: no division applied to MCO2 clock
 934:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO2Div_2: division by 2 applied to MCO2 clock
 935:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO2Div_3: division by 3 applied to MCO2 clock
 936:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO2Div_4: division by 4 applied to MCO2 clock
 937:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO2Div_5: division by 5 applied to MCO2 clock
 938:platform/driver/src/stm32f4xx_rcc.c ****   * @note  For STM32F410xx devices to output I2SCLK clock on MCO2 you should have
 939:platform/driver/src/stm32f4xx_rcc.c ****   *        at last one of the SPI clocks enabled (SPI1, SPI2 or SPI5).
 940:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
 941:platform/driver/src/stm32f4xx_rcc.c ****   */
 942:platform/driver/src/stm32f4xx_rcc.c **** void RCC_MCO2Config(uint32_t RCC_MCO2Source, uint32_t RCC_MCO2Div)
 943:platform/driver/src/stm32f4xx_rcc.c **** {
 567              		.loc 1 943 1 is_stmt 1 view -0
 568              		.cfi_startproc
ARM GAS  /tmp/ccOp399b.s 			page 27


 569              		@ args = 0, pretend = 0, frame = 0
 570              		@ frame_needed = 0, uses_anonymous_args = 0
 571              		@ link register save eliminated.
 944:platform/driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 572              		.loc 1 944 3 view .LVU132
 945:platform/driver/src/stm32f4xx_rcc.c ****   
 946:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 947:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_MCO2SOURCE(RCC_MCO2Source));
 573              		.loc 1 947 3 view .LVU133
 948:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_MCO2DIV(RCC_MCO2Div));
 574              		.loc 1 948 3 view .LVU134
 949:platform/driver/src/stm32f4xx_rcc.c ****   
 950:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->CFGR;
 575              		.loc 1 950 3 view .LVU135
 576              		.loc 1 950 10 is_stmt 0 view .LVU136
 577 0000 034A     		ldr	r2, .L47
 578 0002 9368     		ldr	r3, [r2, #8]
 579              	.LVL27:
 951:platform/driver/src/stm32f4xx_rcc.c ****   
 952:platform/driver/src/stm32f4xx_rcc.c ****   /* Clear MCO2 and MCO2PRE[2:0] bits */
 953:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg &= CFGR_MCO2_RESET_MASK;
 580              		.loc 1 953 3 is_stmt 1 view .LVU137
 581              		.loc 1 953 10 is_stmt 0 view .LVU138
 582 0004 23F07843 		bic	r3, r3, #-134217728
 583              	.LVL28:
 954:platform/driver/src/stm32f4xx_rcc.c **** 
 955:platform/driver/src/stm32f4xx_rcc.c ****   /* Select MCO2 clock source and prescaler */
 956:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_MCO2Source | RCC_MCO2Div;
 584              		.loc 1 956 3 is_stmt 1 view .LVU139
 585              		.loc 1 956 28 is_stmt 0 view .LVU140
 586 0008 0843     		orrs	r0, r0, r1
 587              	.LVL29:
 588              		.loc 1 956 10 view .LVU141
 589 000a 1843     		orrs	r0, r0, r3
 590              	.LVL30:
 957:platform/driver/src/stm32f4xx_rcc.c ****   
 958:platform/driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
 959:platform/driver/src/stm32f4xx_rcc.c ****   RCC->CFGR = tmpreg;
 591              		.loc 1 959 3 is_stmt 1 view .LVU142
 592              		.loc 1 959 13 is_stmt 0 view .LVU143
 593 000c 9060     		str	r0, [r2, #8]
 960:platform/driver/src/stm32f4xx_rcc.c **** 
 961:platform/driver/src/stm32f4xx_rcc.c **** #if defined(STM32F410xx)
 962:platform/driver/src/stm32f4xx_rcc.c ****   RCC_MCO2Cmd(ENABLE);
 963:platform/driver/src/stm32f4xx_rcc.c **** #endif /* STM32F410xx */   
 964:platform/driver/src/stm32f4xx_rcc.c **** }
 594              		.loc 1 964 1 view .LVU144
 595 000e 7047     		bx	lr
 596              	.L48:
 597              		.align	2
 598              	.L47:
 599 0010 00380240 		.word	1073887232
 600              		.cfi_endproc
 601              	.LFE138:
 603              		.section	.text.RCC_SYSCLKConfig,"ax",%progbits
 604              		.align	1
 605              		.global	RCC_SYSCLKConfig
ARM GAS  /tmp/ccOp399b.s 			page 28


 606              		.syntax unified
 607              		.thumb
 608              		.thumb_func
 610              	RCC_SYSCLKConfig:
 611              	.LVL31:
 612              	.LFB139:
 965:platform/driver/src/stm32f4xx_rcc.c **** 
 966:platform/driver/src/stm32f4xx_rcc.c **** /**
 967:platform/driver/src/stm32f4xx_rcc.c ****   * @}
 968:platform/driver/src/stm32f4xx_rcc.c ****   */
 969:platform/driver/src/stm32f4xx_rcc.c **** 
 970:platform/driver/src/stm32f4xx_rcc.c **** /** @defgroup RCC_Group2 System AHB and APB busses clocks configuration functions
 971:platform/driver/src/stm32f4xx_rcc.c ****  *  @brief   System, AHB and APB busses clocks configuration functions
 972:platform/driver/src/stm32f4xx_rcc.c ****  *
 973:platform/driver/src/stm32f4xx_rcc.c **** @verbatim   
 974:platform/driver/src/stm32f4xx_rcc.c ****  ===============================================================================
 975:platform/driver/src/stm32f4xx_rcc.c ****       ##### System, AHB and APB busses clocks configuration functions #####
 976:platform/driver/src/stm32f4xx_rcc.c ****  ===============================================================================  
 977:platform/driver/src/stm32f4xx_rcc.c ****     [..]
 978:platform/driver/src/stm32f4xx_rcc.c ****       This section provide functions allowing to configure the System, AHB, APB1 and 
 979:platform/driver/src/stm32f4xx_rcc.c ****       APB2 busses clocks.
 980:platform/driver/src/stm32f4xx_rcc.c ****   
 981:platform/driver/src/stm32f4xx_rcc.c ****       (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 982:platform/driver/src/stm32f4xx_rcc.c ****           HSE and PLL.
 983:platform/driver/src/stm32f4xx_rcc.c ****           The AHB clock (HCLK) is derived from System clock through configurable 
 984:platform/driver/src/stm32f4xx_rcc.c ****           prescaler and used to clock the CPU, memory and peripherals mapped 
 985:platform/driver/src/stm32f4xx_rcc.c ****           on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived 
 986:platform/driver/src/stm32f4xx_rcc.c ****           from AHB clock through configurable prescalers and used to clock 
 987:platform/driver/src/stm32f4xx_rcc.c ****           the peripherals mapped on these busses. You can use 
 988:platform/driver/src/stm32f4xx_rcc.c ****           "RCC_GetClocksFreq()" function to retrieve the frequencies of these clocks.  
 989:platform/driver/src/stm32f4xx_rcc.c **** 
 990:platform/driver/src/stm32f4xx_rcc.c ****       -@- All the peripheral clocks are derived from the System clock (SYSCLK) except:
 991:platform/driver/src/stm32f4xx_rcc.c ****         (+@) I2S: the I2S clock can be derived either from a specific PLL (PLLI2S) or
 992:platform/driver/src/stm32f4xx_rcc.c ****              from an external clock mapped on the I2S_CKIN pin. 
 993:platform/driver/src/stm32f4xx_rcc.c ****              You have to use RCC_I2SCLKConfig() function to configure this clock. 
 994:platform/driver/src/stm32f4xx_rcc.c ****         (+@) RTC: the RTC clock can be derived either from the LSI, LSE or HSE clock
 995:platform/driver/src/stm32f4xx_rcc.c ****              divided by 2 to 31. You have to use RCC_RTCCLKConfig() and RCC_RTCCLKCmd()
 996:platform/driver/src/stm32f4xx_rcc.c ****              functions to configure this clock. 
 997:platform/driver/src/stm32f4xx_rcc.c ****         (+@) USB OTG FS, SDIO and RTC: USB OTG FS require a frequency equal to 48 MHz
 998:platform/driver/src/stm32f4xx_rcc.c ****              to work correctly, while the SDIO require a frequency equal or lower than
 999:platform/driver/src/stm32f4xx_rcc.c ****              to 48. This clock is derived of the main PLL through PLLQ divider.
1000:platform/driver/src/stm32f4xx_rcc.c ****         (+@) IWDG clock which is always the LSI clock.
1001:platform/driver/src/stm32f4xx_rcc.c ****        
1002:platform/driver/src/stm32f4xx_rcc.c ****       (#) For STM32F405xx/407xx and STM32F415xx/417xx devices, the maximum frequency 
1003:platform/driver/src/stm32f4xx_rcc.c ****          of the SYSCLK and HCLK is 168 MHz, PCLK2 84 MHz and PCLK1 42 MHz. Depending 
1004:platform/driver/src/stm32f4xx_rcc.c ****          on the device voltage range, the maximum frequency should be adapted accordingly:
1005:platform/driver/src/stm32f4xx_rcc.c ****  +-------------------------------------------------------------------------------------+
1006:platform/driver/src/stm32f4xx_rcc.c ****  | Latency       |                HCLK clock frequency (MHz)                           |
1007:platform/driver/src/stm32f4xx_rcc.c ****  |               |---------------------------------------------------------------------|
1008:platform/driver/src/stm32f4xx_rcc.c ****  |               | voltage range  | voltage range  | voltage range   | voltage range   |
1009:platform/driver/src/stm32f4xx_rcc.c ****  |               | 2.7 V - 3.6 V  | 2.4 V - 2.7 V  | 2.1 V - 2.4 V   | 1.8 V - 2.1 V   |
1010:platform/driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1011:platform/driver/src/stm32f4xx_rcc.c ****  |0WS(1CPU cycle)|0 < HCLK <= 30  |0 < HCLK <= 24  |0 < HCLK <= 22   |0 < HCLK <= 20   |
1012:platform/driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1013:platform/driver/src/stm32f4xx_rcc.c ****  |1WS(2CPU cycle)|30 < HCLK <= 60 |24 < HCLK <= 48 |22 < HCLK <= 44  |20 < HCLK <= 40  |
1014:platform/driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1015:platform/driver/src/stm32f4xx_rcc.c ****  |2WS(3CPU cycle)|60 < HCLK <= 90 |48 < HCLK <= 72 |44 < HCLK <= 66  |40 < HCLK <= 60  |
ARM GAS  /tmp/ccOp399b.s 			page 29


1016:platform/driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1017:platform/driver/src/stm32f4xx_rcc.c ****  |3WS(4CPU cycle)|90 < HCLK <= 120|72 < HCLK <= 96 |66 < HCLK <= 88  |60 < HCLK <= 80  |
1018:platform/driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1019:platform/driver/src/stm32f4xx_rcc.c ****  |4WS(5CPU cycle)|120< HCLK <= 150|96 < HCLK <= 120|88 < HCLK <= 110 |80 < HCLK <= 100 |
1020:platform/driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1021:platform/driver/src/stm32f4xx_rcc.c ****  |5WS(6CPU cycle)|150< HCLK <= 168|120< HCLK <= 144|110 < HCLK <= 132|100 < HCLK <= 120|
1022:platform/driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1023:platform/driver/src/stm32f4xx_rcc.c ****  |6WS(7CPU cycle)|      NA        |144< HCLK <= 168|132 < HCLK <= 154|120 < HCLK <= 140|
1024:platform/driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1025:platform/driver/src/stm32f4xx_rcc.c ****  |7WS(8CPU cycle)|      NA        |      NA        |154 < HCLK <= 168|140 < HCLK <= 160|
1026:platform/driver/src/stm32f4xx_rcc.c ****  +---------------|----------------|----------------|-----------------|-----------------+
1027:platform/driver/src/stm32f4xx_rcc.c ****       (#) For STM32F42xxx/43xxx/469xx/479xx devices, the maximum frequency of the SYSCLK and HCLK i
1028:platform/driver/src/stm32f4xx_rcc.c ****           PCLK2 90 MHz and PCLK1 45 MHz. Depending on the device voltage range, the maximum 
1029:platform/driver/src/stm32f4xx_rcc.c ****           frequency should be adapted accordingly:
1030:platform/driver/src/stm32f4xx_rcc.c ****  +-------------------------------------------------------------------------------------+
1031:platform/driver/src/stm32f4xx_rcc.c ****  | Latency       |                HCLK clock frequency (MHz)                           |
1032:platform/driver/src/stm32f4xx_rcc.c ****  |               |---------------------------------------------------------------------|
1033:platform/driver/src/stm32f4xx_rcc.c ****  |               | voltage range  | voltage range  | voltage range   | voltage range   |
1034:platform/driver/src/stm32f4xx_rcc.c ****  |               | 2.7 V - 3.6 V  | 2.4 V - 2.7 V  | 2.1 V - 2.4 V   | 1.8 V - 2.1 V   |
1035:platform/driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1036:platform/driver/src/stm32f4xx_rcc.c ****  |0WS(1CPU cycle)|0 < HCLK <= 30  |0 < HCLK <= 24  |0 < HCLK <= 22   |0 < HCLK <= 20   |
1037:platform/driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1038:platform/driver/src/stm32f4xx_rcc.c ****  |1WS(2CPU cycle)|30 < HCLK <= 60 |24 < HCLK <= 48 |22 < HCLK <= 44  |20 < HCLK <= 40  |
1039:platform/driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1040:platform/driver/src/stm32f4xx_rcc.c ****  |2WS(3CPU cycle)|60 < HCLK <= 90 |48 < HCLK <= 72 |44 < HCLK <= 66  |40 < HCLK <= 60  |
1041:platform/driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1042:platform/driver/src/stm32f4xx_rcc.c ****  |3WS(4CPU cycle)|90 < HCLK <= 120|72 < HCLK <= 96 |66 < HCLK <= 88  |60 < HCLK <= 80  |
1043:platform/driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1044:platform/driver/src/stm32f4xx_rcc.c ****  |4WS(5CPU cycle)|120< HCLK <= 150|96 < HCLK <= 120|88 < HCLK <= 110 |80 < HCLK <= 100 |
1045:platform/driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1046:platform/driver/src/stm32f4xx_rcc.c ****  |5WS(6CPU cycle)|120< HCLK <= 180|120< HCLK <= 144|110 < HCLK <= 132|100 < HCLK <= 120|
1047:platform/driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1048:platform/driver/src/stm32f4xx_rcc.c ****  |6WS(7CPU cycle)|      NA        |144< HCLK <= 168|132 < HCLK <= 154|120 < HCLK <= 140|
1049:platform/driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1050:platform/driver/src/stm32f4xx_rcc.c ****  |7WS(8CPU cycle)|      NA        |168< HCLK <= 180|154 < HCLK <= 176|140 < HCLK <= 160|
1051:platform/driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1052:platform/driver/src/stm32f4xx_rcc.c ****  |8WS(9CPU cycle)|      NA        |      NA        |176 < HCLK <= 180|160 < HCLK <= 168|
1053:platform/driver/src/stm32f4xx_rcc.c ****  +-------------------------------------------------------------------------------------+
1054:platform/driver/src/stm32f4xx_rcc.c ****    
1055:platform/driver/src/stm32f4xx_rcc.c ****       (#) For STM32F401xx devices, the maximum frequency of the SYSCLK and HCLK is 84 MHz, 
1056:platform/driver/src/stm32f4xx_rcc.c ****           PCLK2 84 MHz and PCLK1 42 MHz. Depending on the device voltage range, the maximum 
1057:platform/driver/src/stm32f4xx_rcc.c ****           frequency should be adapted accordingly:
1058:platform/driver/src/stm32f4xx_rcc.c ****  +-------------------------------------------------------------------------------------+
1059:platform/driver/src/stm32f4xx_rcc.c ****  | Latency       |                HCLK clock frequency (MHz)                           |
1060:platform/driver/src/stm32f4xx_rcc.c ****  |               |---------------------------------------------------------------------|
1061:platform/driver/src/stm32f4xx_rcc.c ****  |               | voltage range  | voltage range  | voltage range   | voltage range   |
1062:platform/driver/src/stm32f4xx_rcc.c ****  |               | 2.7 V - 3.6 V  | 2.4 V - 2.7 V  | 2.1 V - 2.4 V   | 1.8 V - 2.1 V   |
1063:platform/driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1064:platform/driver/src/stm32f4xx_rcc.c ****  |0WS(1CPU cycle)|0 < HCLK <= 30  |0 < HCLK <= 24  |0 < HCLK <= 22   |0 < HCLK <= 20   |
1065:platform/driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1066:platform/driver/src/stm32f4xx_rcc.c ****  |1WS(2CPU cycle)|30 < HCLK <= 60 |24 < HCLK <= 48 |22 < HCLK <= 44  |20 < HCLK <= 40  |
1067:platform/driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1068:platform/driver/src/stm32f4xx_rcc.c ****  |2WS(3CPU cycle)|60 < HCLK <= 84 |48 < HCLK <= 72 |44 < HCLK <= 66  |40 < HCLK <= 60  |
1069:platform/driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1070:platform/driver/src/stm32f4xx_rcc.c ****  |3WS(4CPU cycle)|      NA        |72 < HCLK <= 84 |66 < HCLK <= 84  |60 < HCLK <= 80  |
1071:platform/driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1072:platform/driver/src/stm32f4xx_rcc.c ****  |4WS(5CPU cycle)|      NA        |      NA        |      NA         |80 < HCLK <= 84  |
ARM GAS  /tmp/ccOp399b.s 			page 30


1073:platform/driver/src/stm32f4xx_rcc.c ****  +-------------------------------------------------------------------------------------+
1074:platform/driver/src/stm32f4xx_rcc.c **** 
1075:platform/driver/src/stm32f4xx_rcc.c ****       (#) For STM32F410xx/STM32F411xE devices, the maximum frequency of the SYSCLK and HCLK is 100 
1076:platform/driver/src/stm32f4xx_rcc.c ****           PCLK2 100 MHz and PCLK1 50 MHz. Depending on the device voltage range, the maximum 
1077:platform/driver/src/stm32f4xx_rcc.c ****           frequency should be adapted accordingly:
1078:platform/driver/src/stm32f4xx_rcc.c ****  +-------------------------------------------------------------------------------------+
1079:platform/driver/src/stm32f4xx_rcc.c ****  | Latency       |                HCLK clock frequency (MHz)                           |
1080:platform/driver/src/stm32f4xx_rcc.c ****  |               |---------------------------------------------------------------------|
1081:platform/driver/src/stm32f4xx_rcc.c ****  |               | voltage range  | voltage range  | voltage range   | voltage range   |
1082:platform/driver/src/stm32f4xx_rcc.c ****  |               | 2.7 V - 3.6 V  | 2.4 V - 2.7 V  | 2.1 V - 2.4 V   | 1.8 V - 2.1 V   |
1083:platform/driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1084:platform/driver/src/stm32f4xx_rcc.c ****  |0WS(1CPU cycle)|0 < HCLK <= 30  |0 < HCLK <= 24  |0 < HCLK <= 18   |0 < HCLK <= 16   |
1085:platform/driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1086:platform/driver/src/stm32f4xx_rcc.c ****  |1WS(2CPU cycle)|30 < HCLK <= 64 |24 < HCLK <= 48 |18 < HCLK <= 36  |16 < HCLK <= 32  |
1087:platform/driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1088:platform/driver/src/stm32f4xx_rcc.c ****  |2WS(3CPU cycle)|64 < HCLK <= 90 |48 < HCLK <= 72 |36 < HCLK <= 54  |32 < HCLK <= 48  |
1089:platform/driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1090:platform/driver/src/stm32f4xx_rcc.c ****  |3WS(4CPU cycle)|90 < HCLK <= 100|72 < HCLK <= 96 |54 < HCLK <= 72  |48 < HCLK <= 64  |
1091:platform/driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1092:platform/driver/src/stm32f4xx_rcc.c ****  |4WS(5CPU cycle)|      NA        |96 < HCLK <= 100|72 < HCLK <= 90  |64 < HCLK <= 80  |
1093:platform/driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1094:platform/driver/src/stm32f4xx_rcc.c ****  |5WS(6CPU cycle)|      NA        |       NA       |90 < HCLK <= 100 |80 < HCLK <= 96  |
1095:platform/driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1096:platform/driver/src/stm32f4xx_rcc.c ****  |6WS(7CPU cycle)|      NA        |       NA       |        NA       |96 < HCLK <= 100 |
1097:platform/driver/src/stm32f4xx_rcc.c ****  +-------------------------------------------------------------------------------------+
1098:platform/driver/src/stm32f4xx_rcc.c ****   
1099:platform/driver/src/stm32f4xx_rcc.c ****       -@- On STM32F405xx/407xx and STM32F415xx/417xx devices: 
1100:platform/driver/src/stm32f4xx_rcc.c ****            (++) when VOS = '0', the maximum value of fHCLK = 144MHz. 
1101:platform/driver/src/stm32f4xx_rcc.c ****            (++) when VOS = '1', the maximum value of fHCLK = 168MHz. 
1102:platform/driver/src/stm32f4xx_rcc.c ****           [..] 
1103:platform/driver/src/stm32f4xx_rcc.c ****           On STM32F42xxx/43xxx/469xx/479xx devices:
1104:platform/driver/src/stm32f4xx_rcc.c ****            (++) when VOS[1:0] = '0x01', the maximum value of fHCLK is 120MHz.
1105:platform/driver/src/stm32f4xx_rcc.c ****            (++) when VOS[1:0] = '0x10', the maximum value of fHCLK is 144MHz.
1106:platform/driver/src/stm32f4xx_rcc.c ****            (++) when VOS[1:0] = '0x11', the maximum value of f  is 168MHz 
1107:platform/driver/src/stm32f4xx_rcc.c ****           [..]  
1108:platform/driver/src/stm32f4xx_rcc.c ****           On STM32F401x devices:
1109:platform/driver/src/stm32f4xx_rcc.c ****            (++) when VOS[1:0] = '0x01', the maximum value of fHCLK is 64MHz.
1110:platform/driver/src/stm32f4xx_rcc.c ****            (++) when VOS[1:0] = '0x10', the maximum value of fHCLK is 84MHz.
1111:platform/driver/src/stm32f4xx_rcc.c ****           On STM32F410xx/STM32F411xE devices:
1112:platform/driver/src/stm32f4xx_rcc.c ****            (++) when VOS[1:0] = '0x01' the maximum value of fHCLK is 64MHz.
1113:platform/driver/src/stm32f4xx_rcc.c ****            (++) when VOS[1:0] = '0x10' the maximum value of fHCLK is 84MHz.
1114:platform/driver/src/stm32f4xx_rcc.c ****            (++) when VOS[1:0] = '0x11' the maximum value of fHCLK is 100MHz.
1115:platform/driver/src/stm32f4xx_rcc.c **** 
1116:platform/driver/src/stm32f4xx_rcc.c ****        You can use PWR_MainRegulatorModeConfig() function to control VOS bits.
1117:platform/driver/src/stm32f4xx_rcc.c **** 
1118:platform/driver/src/stm32f4xx_rcc.c **** @endverbatim
1119:platform/driver/src/stm32f4xx_rcc.c ****   * @{
1120:platform/driver/src/stm32f4xx_rcc.c ****   */
1121:platform/driver/src/stm32f4xx_rcc.c **** 
1122:platform/driver/src/stm32f4xx_rcc.c **** /**
1123:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the system clock (SYSCLK).
1124:platform/driver/src/stm32f4xx_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
1125:platform/driver/src/stm32f4xx_rcc.c ****   *         startup from Reset, wake-up from STOP and STANDBY mode, or in case
1126:platform/driver/src/stm32f4xx_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
1127:platform/driver/src/stm32f4xx_rcc.c ****   *         (if the Clock Security System CSS is enabled).
1128:platform/driver/src/stm32f4xx_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
1129:platform/driver/src/stm32f4xx_rcc.c ****   *         clock source is ready (clock stable after startup delay or PLL locked). 
ARM GAS  /tmp/ccOp399b.s 			page 31


1130:platform/driver/src/stm32f4xx_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
1131:platform/driver/src/stm32f4xx_rcc.c ****   *         occur when the clock source will be ready. 
1132:platform/driver/src/stm32f4xx_rcc.c ****   *         You can use RCC_GetSYSCLKSource() function to know which clock is
1133:platform/driver/src/stm32f4xx_rcc.c ****   *         currently used as system clock source. 
1134:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_SYSCLKSource: specifies the clock source used as system clock.
1135:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1136:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLKSource_HSI: HSI selected as system clock source
1137:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLKSource_HSE: HSE selected as system clock source
1138:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLKSource_PLLCLK: PLL selected as system clock source (RCC_SYSCLKSource_
1139:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLKSource_PLLRCLK: PLL R selected as system clock source only for STM32F
1140:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
1141:platform/driver/src/stm32f4xx_rcc.c ****   */
1142:platform/driver/src/stm32f4xx_rcc.c **** void RCC_SYSCLKConfig(uint32_t RCC_SYSCLKSource)
1143:platform/driver/src/stm32f4xx_rcc.c **** {
 613              		.loc 1 1143 1 is_stmt 1 view -0
 614              		.cfi_startproc
 615              		@ args = 0, pretend = 0, frame = 0
 616              		@ frame_needed = 0, uses_anonymous_args = 0
 617              		@ link register save eliminated.
1144:platform/driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 618              		.loc 1 1144 3 view .LVU146
1145:platform/driver/src/stm32f4xx_rcc.c **** 
1146:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1147:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_SYSCLK_SOURCE(RCC_SYSCLKSource));
 619              		.loc 1 1147 3 view .LVU147
1148:platform/driver/src/stm32f4xx_rcc.c **** 
1149:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->CFGR;
 620              		.loc 1 1149 3 view .LVU148
 621              		.loc 1 1149 10 is_stmt 0 view .LVU149
 622 0000 034A     		ldr	r2, .L50
 623 0002 9368     		ldr	r3, [r2, #8]
 624              	.LVL32:
1150:platform/driver/src/stm32f4xx_rcc.c **** 
1151:platform/driver/src/stm32f4xx_rcc.c ****   /* Clear SW[1:0] bits */
1152:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_CFGR_SW;
 625              		.loc 1 1152 3 is_stmt 1 view .LVU150
 626              		.loc 1 1152 10 is_stmt 0 view .LVU151
 627 0004 23F00303 		bic	r3, r3, #3
 628              	.LVL33:
1153:platform/driver/src/stm32f4xx_rcc.c **** 
1154:platform/driver/src/stm32f4xx_rcc.c ****   /* Set SW[1:0] bits according to RCC_SYSCLKSource value */
1155:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_SYSCLKSource;
 629              		.loc 1 1155 3 is_stmt 1 view .LVU152
 630              		.loc 1 1155 10 is_stmt 0 view .LVU153
 631 0008 0343     		orrs	r3, r3, r0
 632              	.LVL34:
1156:platform/driver/src/stm32f4xx_rcc.c **** 
1157:platform/driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
1158:platform/driver/src/stm32f4xx_rcc.c ****   RCC->CFGR = tmpreg;
 633              		.loc 1 1158 3 is_stmt 1 view .LVU154
 634              		.loc 1 1158 13 is_stmt 0 view .LVU155
 635 000a 9360     		str	r3, [r2, #8]
1159:platform/driver/src/stm32f4xx_rcc.c **** }
 636              		.loc 1 1159 1 view .LVU156
 637 000c 7047     		bx	lr
 638              	.L51:
 639 000e 00BF     		.align	2
ARM GAS  /tmp/ccOp399b.s 			page 32


 640              	.L50:
 641 0010 00380240 		.word	1073887232
 642              		.cfi_endproc
 643              	.LFE139:
 645              		.section	.text.RCC_GetSYSCLKSource,"ax",%progbits
 646              		.align	1
 647              		.global	RCC_GetSYSCLKSource
 648              		.syntax unified
 649              		.thumb
 650              		.thumb_func
 652              	RCC_GetSYSCLKSource:
 653              	.LFB140:
1160:platform/driver/src/stm32f4xx_rcc.c **** 
1161:platform/driver/src/stm32f4xx_rcc.c **** /**
1162:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Returns the clock source used as system clock.
1163:platform/driver/src/stm32f4xx_rcc.c ****   * @param  None
1164:platform/driver/src/stm32f4xx_rcc.c ****   * @retval The clock source used as system clock. The returned value can be one
1165:platform/driver/src/stm32f4xx_rcc.c ****   *         of the following:
1166:platform/driver/src/stm32f4xx_rcc.c ****   *              - 0x00: HSI used as system clock
1167:platform/driver/src/stm32f4xx_rcc.c ****   *              - 0x04: HSE used as system clock
1168:platform/driver/src/stm32f4xx_rcc.c ****   *              - 0x08: PLL used as system clock (PLL P for STM32F446xx devices)
1169:platform/driver/src/stm32f4xx_rcc.c ****   *              - 0x0C: PLL R used as system clock (only for STM32F412xG, STM32F413_423xx and STM3
1170:platform/driver/src/stm32f4xx_rcc.c ****   */
1171:platform/driver/src/stm32f4xx_rcc.c **** uint8_t RCC_GetSYSCLKSource(void)
1172:platform/driver/src/stm32f4xx_rcc.c **** {
 654              		.loc 1 1172 1 is_stmt 1 view -0
 655              		.cfi_startproc
 656              		@ args = 0, pretend = 0, frame = 0
 657              		@ frame_needed = 0, uses_anonymous_args = 0
 658              		@ link register save eliminated.
1173:platform/driver/src/stm32f4xx_rcc.c ****   return ((uint8_t)(RCC->CFGR & RCC_CFGR_SWS));
 659              		.loc 1 1173 3 view .LVU158
 660              		.loc 1 1173 24 is_stmt 0 view .LVU159
 661 0000 024B     		ldr	r3, .L53
 662 0002 9868     		ldr	r0, [r3, #8]
1174:platform/driver/src/stm32f4xx_rcc.c **** }
 663              		.loc 1 1174 1 view .LVU160
 664 0004 00F00C00 		and	r0, r0, #12
 665 0008 7047     		bx	lr
 666              	.L54:
 667 000a 00BF     		.align	2
 668              	.L53:
 669 000c 00380240 		.word	1073887232
 670              		.cfi_endproc
 671              	.LFE140:
 673              		.section	.text.RCC_HCLKConfig,"ax",%progbits
 674              		.align	1
 675              		.global	RCC_HCLKConfig
 676              		.syntax unified
 677              		.thumb
 678              		.thumb_func
 680              	RCC_HCLKConfig:
 681              	.LVL35:
 682              	.LFB141:
1175:platform/driver/src/stm32f4xx_rcc.c **** 
1176:platform/driver/src/stm32f4xx_rcc.c **** /**
1177:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the AHB clock (HCLK).
ARM GAS  /tmp/ccOp399b.s 			page 33


1178:platform/driver/src/stm32f4xx_rcc.c ****   * @note   Depending on the device voltage range, the software has to set correctly
1179:platform/driver/src/stm32f4xx_rcc.c ****   *         these bits to ensure that HCLK not exceed the maximum allowed frequency
1180:platform/driver/src/stm32f4xx_rcc.c ****   *         (for more details refer to section above
1181:platform/driver/src/stm32f4xx_rcc.c ****   *           "CPU, AHB and APB busses clocks configuration functions")
1182:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_SYSCLK: defines the AHB clock divider. This clock is derived from 
1183:platform/driver/src/stm32f4xx_rcc.c ****   *         the system clock (SYSCLK).
1184:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1185:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLK_Div1: AHB clock = SYSCLK
1186:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLK_Div2: AHB clock = SYSCLK/2
1187:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLK_Div4: AHB clock = SYSCLK/4
1188:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLK_Div8: AHB clock = SYSCLK/8
1189:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLK_Div16: AHB clock = SYSCLK/16
1190:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLK_Div64: AHB clock = SYSCLK/64
1191:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLK_Div128: AHB clock = SYSCLK/128
1192:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLK_Div256: AHB clock = SYSCLK/256
1193:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLK_Div512: AHB clock = SYSCLK/512
1194:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
1195:platform/driver/src/stm32f4xx_rcc.c ****   */
1196:platform/driver/src/stm32f4xx_rcc.c **** void RCC_HCLKConfig(uint32_t RCC_SYSCLK)
1197:platform/driver/src/stm32f4xx_rcc.c **** {
 683              		.loc 1 1197 1 is_stmt 1 view -0
 684              		.cfi_startproc
 685              		@ args = 0, pretend = 0, frame = 0
 686              		@ frame_needed = 0, uses_anonymous_args = 0
 687              		@ link register save eliminated.
1198:platform/driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 688              		.loc 1 1198 3 view .LVU162
1199:platform/driver/src/stm32f4xx_rcc.c ****   
1200:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1201:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_HCLK(RCC_SYSCLK));
 689              		.loc 1 1201 3 view .LVU163
1202:platform/driver/src/stm32f4xx_rcc.c **** 
1203:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->CFGR;
 690              		.loc 1 1203 3 view .LVU164
 691              		.loc 1 1203 10 is_stmt 0 view .LVU165
 692 0000 034A     		ldr	r2, .L56
 693 0002 9368     		ldr	r3, [r2, #8]
 694              	.LVL36:
1204:platform/driver/src/stm32f4xx_rcc.c **** 
1205:platform/driver/src/stm32f4xx_rcc.c ****   /* Clear HPRE[3:0] bits */
1206:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_CFGR_HPRE;
 695              		.loc 1 1206 3 is_stmt 1 view .LVU166
 696              		.loc 1 1206 10 is_stmt 0 view .LVU167
 697 0004 23F0F003 		bic	r3, r3, #240
 698              	.LVL37:
1207:platform/driver/src/stm32f4xx_rcc.c **** 
1208:platform/driver/src/stm32f4xx_rcc.c ****   /* Set HPRE[3:0] bits according to RCC_SYSCLK value */
1209:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_SYSCLK;
 699              		.loc 1 1209 3 is_stmt 1 view .LVU168
 700              		.loc 1 1209 10 is_stmt 0 view .LVU169
 701 0008 0343     		orrs	r3, r3, r0
 702              	.LVL38:
1210:platform/driver/src/stm32f4xx_rcc.c **** 
1211:platform/driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
1212:platform/driver/src/stm32f4xx_rcc.c ****   RCC->CFGR = tmpreg;
 703              		.loc 1 1212 3 is_stmt 1 view .LVU170
 704              		.loc 1 1212 13 is_stmt 0 view .LVU171
ARM GAS  /tmp/ccOp399b.s 			page 34


 705 000a 9360     		str	r3, [r2, #8]
1213:platform/driver/src/stm32f4xx_rcc.c **** }
 706              		.loc 1 1213 1 view .LVU172
 707 000c 7047     		bx	lr
 708              	.L57:
 709 000e 00BF     		.align	2
 710              	.L56:
 711 0010 00380240 		.word	1073887232
 712              		.cfi_endproc
 713              	.LFE141:
 715              		.section	.text.RCC_PCLK1Config,"ax",%progbits
 716              		.align	1
 717              		.global	RCC_PCLK1Config
 718              		.syntax unified
 719              		.thumb
 720              		.thumb_func
 722              	RCC_PCLK1Config:
 723              	.LVL39:
 724              	.LFB142:
1214:platform/driver/src/stm32f4xx_rcc.c **** 
1215:platform/driver/src/stm32f4xx_rcc.c **** /**
1216:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the Low Speed APB clock (PCLK1).
1217:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_HCLK: defines the APB1 clock divider. This clock is derived from 
1218:platform/driver/src/stm32f4xx_rcc.c ****   *         the AHB clock (HCLK).
1219:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1220:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_HCLK_Div1:  APB1 clock = HCLK
1221:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_HCLK_Div2:  APB1 clock = HCLK/2
1222:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_HCLK_Div4:  APB1 clock = HCLK/4
1223:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_HCLK_Div8:  APB1 clock = HCLK/8
1224:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_HCLK_Div16: APB1 clock = HCLK/16
1225:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
1226:platform/driver/src/stm32f4xx_rcc.c ****   */
1227:platform/driver/src/stm32f4xx_rcc.c **** void RCC_PCLK1Config(uint32_t RCC_HCLK)
1228:platform/driver/src/stm32f4xx_rcc.c **** {
 725              		.loc 1 1228 1 is_stmt 1 view -0
 726              		.cfi_startproc
 727              		@ args = 0, pretend = 0, frame = 0
 728              		@ frame_needed = 0, uses_anonymous_args = 0
 729              		@ link register save eliminated.
1229:platform/driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 730              		.loc 1 1229 3 view .LVU174
1230:platform/driver/src/stm32f4xx_rcc.c **** 
1231:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1232:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PCLK(RCC_HCLK));
 731              		.loc 1 1232 3 view .LVU175
1233:platform/driver/src/stm32f4xx_rcc.c **** 
1234:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->CFGR;
 732              		.loc 1 1234 3 view .LVU176
 733              		.loc 1 1234 10 is_stmt 0 view .LVU177
 734 0000 034A     		ldr	r2, .L59
 735 0002 9368     		ldr	r3, [r2, #8]
 736              	.LVL40:
1235:platform/driver/src/stm32f4xx_rcc.c **** 
1236:platform/driver/src/stm32f4xx_rcc.c ****   /* Clear PPRE1[2:0] bits */
1237:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_CFGR_PPRE1;
 737              		.loc 1 1237 3 is_stmt 1 view .LVU178
 738              		.loc 1 1237 10 is_stmt 0 view .LVU179
ARM GAS  /tmp/ccOp399b.s 			page 35


 739 0004 23F4E053 		bic	r3, r3, #7168
 740              	.LVL41:
1238:platform/driver/src/stm32f4xx_rcc.c **** 
1239:platform/driver/src/stm32f4xx_rcc.c ****   /* Set PPRE1[2:0] bits according to RCC_HCLK value */
1240:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_HCLK;
 741              		.loc 1 1240 3 is_stmt 1 view .LVU180
 742              		.loc 1 1240 10 is_stmt 0 view .LVU181
 743 0008 0343     		orrs	r3, r3, r0
 744              	.LVL42:
1241:platform/driver/src/stm32f4xx_rcc.c **** 
1242:platform/driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
1243:platform/driver/src/stm32f4xx_rcc.c ****   RCC->CFGR = tmpreg;
 745              		.loc 1 1243 3 is_stmt 1 view .LVU182
 746              		.loc 1 1243 13 is_stmt 0 view .LVU183
 747 000a 9360     		str	r3, [r2, #8]
1244:platform/driver/src/stm32f4xx_rcc.c **** }
 748              		.loc 1 1244 1 view .LVU184
 749 000c 7047     		bx	lr
 750              	.L60:
 751 000e 00BF     		.align	2
 752              	.L59:
 753 0010 00380240 		.word	1073887232
 754              		.cfi_endproc
 755              	.LFE142:
 757              		.section	.text.RCC_PCLK2Config,"ax",%progbits
 758              		.align	1
 759              		.global	RCC_PCLK2Config
 760              		.syntax unified
 761              		.thumb
 762              		.thumb_func
 764              	RCC_PCLK2Config:
 765              	.LVL43:
 766              	.LFB143:
1245:platform/driver/src/stm32f4xx_rcc.c **** 
1246:platform/driver/src/stm32f4xx_rcc.c **** /**
1247:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the High Speed APB clock (PCLK2).
1248:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_HCLK: defines the APB2 clock divider. This clock is derived from 
1249:platform/driver/src/stm32f4xx_rcc.c ****   *         the AHB clock (HCLK).
1250:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1251:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_HCLK_Div1:  APB2 clock = HCLK
1252:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_HCLK_Div2:  APB2 clock = HCLK/2
1253:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_HCLK_Div4:  APB2 clock = HCLK/4
1254:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_HCLK_Div8:  APB2 clock = HCLK/8
1255:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_HCLK_Div16: APB2 clock = HCLK/16
1256:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
1257:platform/driver/src/stm32f4xx_rcc.c ****   */
1258:platform/driver/src/stm32f4xx_rcc.c **** void RCC_PCLK2Config(uint32_t RCC_HCLK)
1259:platform/driver/src/stm32f4xx_rcc.c **** {
 767              		.loc 1 1259 1 is_stmt 1 view -0
 768              		.cfi_startproc
 769              		@ args = 0, pretend = 0, frame = 0
 770              		@ frame_needed = 0, uses_anonymous_args = 0
 771              		@ link register save eliminated.
1260:platform/driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 772              		.loc 1 1260 3 view .LVU186
1261:platform/driver/src/stm32f4xx_rcc.c **** 
1262:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
ARM GAS  /tmp/ccOp399b.s 			page 36


1263:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PCLK(RCC_HCLK));
 773              		.loc 1 1263 3 view .LVU187
1264:platform/driver/src/stm32f4xx_rcc.c **** 
1265:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->CFGR;
 774              		.loc 1 1265 3 view .LVU188
 775              		.loc 1 1265 10 is_stmt 0 view .LVU189
 776 0000 034A     		ldr	r2, .L62
 777 0002 9368     		ldr	r3, [r2, #8]
 778              	.LVL44:
1266:platform/driver/src/stm32f4xx_rcc.c **** 
1267:platform/driver/src/stm32f4xx_rcc.c ****   /* Clear PPRE2[2:0] bits */
1268:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_CFGR_PPRE2;
 779              		.loc 1 1268 3 is_stmt 1 view .LVU190
 780              		.loc 1 1268 10 is_stmt 0 view .LVU191
 781 0004 23F46043 		bic	r3, r3, #57344
 782              	.LVL45:
1269:platform/driver/src/stm32f4xx_rcc.c **** 
1270:platform/driver/src/stm32f4xx_rcc.c ****   /* Set PPRE2[2:0] bits according to RCC_HCLK value */
1271:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_HCLK << 3;
 783              		.loc 1 1271 3 is_stmt 1 view .LVU192
 784              		.loc 1 1271 10 is_stmt 0 view .LVU193
 785 0008 43EAC003 		orr	r3, r3, r0, lsl #3
 786              	.LVL46:
1272:platform/driver/src/stm32f4xx_rcc.c **** 
1273:platform/driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
1274:platform/driver/src/stm32f4xx_rcc.c ****   RCC->CFGR = tmpreg;
 787              		.loc 1 1274 3 is_stmt 1 view .LVU194
 788              		.loc 1 1274 13 is_stmt 0 view .LVU195
 789 000c 9360     		str	r3, [r2, #8]
1275:platform/driver/src/stm32f4xx_rcc.c **** }
 790              		.loc 1 1275 1 view .LVU196
 791 000e 7047     		bx	lr
 792              	.L63:
 793              		.align	2
 794              	.L62:
 795 0010 00380240 		.word	1073887232
 796              		.cfi_endproc
 797              	.LFE143:
 799              		.section	.text.RCC_GetClocksFreq,"ax",%progbits
 800              		.align	1
 801              		.global	RCC_GetClocksFreq
 802              		.syntax unified
 803              		.thumb
 804              		.thumb_func
 806              	RCC_GetClocksFreq:
 807              	.LVL47:
 808              	.LFB144:
1276:platform/driver/src/stm32f4xx_rcc.c **** 
1277:platform/driver/src/stm32f4xx_rcc.c **** /**
1278:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Returns the frequencies of different on chip clocks; SYSCLK, HCLK, 
1279:platform/driver/src/stm32f4xx_rcc.c ****   *         PCLK1 and PCLK2.
1280:platform/driver/src/stm32f4xx_rcc.c ****   * 
1281:platform/driver/src/stm32f4xx_rcc.c ****   * @note   The system frequency computed by this function is not the real 
1282:platform/driver/src/stm32f4xx_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined 
1283:platform/driver/src/stm32f4xx_rcc.c ****   *         constant and the selected clock source:
1284:platform/driver/src/stm32f4xx_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
1285:platform/driver/src/stm32f4xx_rcc.c ****   * @note     If SYSCLK source is HSE, function returns values based on HSE_VALUE(**)
ARM GAS  /tmp/ccOp399b.s 			page 37


1286:platform/driver/src/stm32f4xx_rcc.c ****   * @note     If SYSCLK source is PLL, function returns values based on HSE_VALUE(**) 
1287:platform/driver/src/stm32f4xx_rcc.c ****   *           or HSI_VALUE(*) multiplied/divided by the PLL factors.         
1288:platform/driver/src/stm32f4xx_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f4xx.h file (default value
1289:platform/driver/src/stm32f4xx_rcc.c ****   *               16 MHz) but the real value may vary depending on the variations
1290:platform/driver/src/stm32f4xx_rcc.c ****   *               in voltage and temperature.
1291:platform/driver/src/stm32f4xx_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f4xx.h file (default value
1292:platform/driver/src/stm32f4xx_rcc.c ****   *                25 MHz), user has to ensure that HSE_VALUE is same as the real
1293:platform/driver/src/stm32f4xx_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
1294:platform/driver/src/stm32f4xx_rcc.c ****   *                have wrong result.
1295:platform/driver/src/stm32f4xx_rcc.c ****   *                
1296:platform/driver/src/stm32f4xx_rcc.c ****   * @note   The result of this function could be not correct when using fractional
1297:platform/driver/src/stm32f4xx_rcc.c ****   *         value for HSE crystal.
1298:platform/driver/src/stm32f4xx_rcc.c ****   *   
1299:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_Clocks: pointer to a RCC_ClocksTypeDef structure which will hold
1300:platform/driver/src/stm32f4xx_rcc.c ****   *          the clocks frequencies.
1301:platform/driver/src/stm32f4xx_rcc.c ****   *     
1302:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used by the user application to compute the 
1303:platform/driver/src/stm32f4xx_rcc.c ****   *         baudrate for the communication peripherals or configure other parameters.
1304:platform/driver/src/stm32f4xx_rcc.c ****   * @note   Each time SYSCLK, HCLK, PCLK1 and/or PCLK2 clock changes, this function
1305:platform/driver/src/stm32f4xx_rcc.c ****   *         must be called to update the structure's field. Otherwise, any
1306:platform/driver/src/stm32f4xx_rcc.c ****   *         configuration based on this function will be incorrect.
1307:platform/driver/src/stm32f4xx_rcc.c ****   *    
1308:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
1309:platform/driver/src/stm32f4xx_rcc.c ****   */
1310:platform/driver/src/stm32f4xx_rcc.c **** void RCC_GetClocksFreq(RCC_ClocksTypeDef* RCC_Clocks)
1311:platform/driver/src/stm32f4xx_rcc.c **** {
 809              		.loc 1 1311 1 is_stmt 1 view -0
 810              		.cfi_startproc
 811              		@ args = 0, pretend = 0, frame = 0
 812              		@ frame_needed = 0, uses_anonymous_args = 0
 813              		@ link register save eliminated.
 814              		.loc 1 1311 1 is_stmt 0 view .LVU198
 815 0000 10B4     		push	{r4}
 816              	.LCFI0:
 817              		.cfi_def_cfa_offset 4
 818              		.cfi_offset 4, -4
1312:platform/driver/src/stm32f4xx_rcc.c ****   uint32_t tmp = 0, presc = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 819              		.loc 1 1312 3 is_stmt 1 view .LVU199
 820              	.LVL48:
1313:platform/driver/src/stm32f4xx_rcc.c **** #if defined(STM32F412xG) || defined(STM32F413_423xx) || defined(STM32F446xx)  
1314:platform/driver/src/stm32f4xx_rcc.c ****   uint32_t pllr = 2;
1315:platform/driver/src/stm32f4xx_rcc.c **** #endif /* STM32F412xG || STM32F413_423xx || STM32F446xx */
1316:platform/driver/src/stm32f4xx_rcc.c ****   
1317:platform/driver/src/stm32f4xx_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
1318:platform/driver/src/stm32f4xx_rcc.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 821              		.loc 1 1318 3 view .LVU200
 822              		.loc 1 1318 12 is_stmt 0 view .LVU201
 823 0002 294B     		ldr	r3, .L73
 824 0004 9B68     		ldr	r3, [r3, #8]
 825              		.loc 1 1318 7 view .LVU202
 826 0006 03F00C03 		and	r3, r3, #12
 827              	.LVL49:
1319:platform/driver/src/stm32f4xx_rcc.c ****   
1320:platform/driver/src/stm32f4xx_rcc.c ****   switch (tmp)
 828              		.loc 1 1320 3 is_stmt 1 view .LVU203
 829 000a 042B     		cmp	r3, #4
 830 000c 23D0     		beq	.L65
ARM GAS  /tmp/ccOp399b.s 			page 38


 831 000e 082B     		cmp	r3, #8
 832 0010 24D0     		beq	.L66
 833 0012 13B1     		cbz	r3, .L72
1321:platform/driver/src/stm32f4xx_rcc.c ****   {
1322:platform/driver/src/stm32f4xx_rcc.c ****   case 0x00:  /* HSI used as system clock source */
1323:platform/driver/src/stm32f4xx_rcc.c ****     RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
1324:platform/driver/src/stm32f4xx_rcc.c ****     break;
1325:platform/driver/src/stm32f4xx_rcc.c ****   case 0x04:  /* HSE used as system clock  source */
1326:platform/driver/src/stm32f4xx_rcc.c ****     RCC_Clocks->SYSCLK_Frequency = HSE_VALUE;
1327:platform/driver/src/stm32f4xx_rcc.c ****     break;
1328:platform/driver/src/stm32f4xx_rcc.c ****   case 0x08:  /* PLL P used as system clock  source */
1329:platform/driver/src/stm32f4xx_rcc.c ****     
1330:platform/driver/src/stm32f4xx_rcc.c ****     /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
1331:platform/driver/src/stm32f4xx_rcc.c ****     SYSCLK = PLL_VCO / PLLP
1332:platform/driver/src/stm32f4xx_rcc.c ****     */    
1333:platform/driver/src/stm32f4xx_rcc.c ****     pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
1334:platform/driver/src/stm32f4xx_rcc.c ****     pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
1335:platform/driver/src/stm32f4xx_rcc.c ****     
1336:platform/driver/src/stm32f4xx_rcc.c ****     if (pllsource != 0)
1337:platform/driver/src/stm32f4xx_rcc.c ****     {
1338:platform/driver/src/stm32f4xx_rcc.c ****       /* HSE used as PLL clock source */
1339:platform/driver/src/stm32f4xx_rcc.c ****       pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
1340:platform/driver/src/stm32f4xx_rcc.c ****     }
1341:platform/driver/src/stm32f4xx_rcc.c ****     else
1342:platform/driver/src/stm32f4xx_rcc.c ****     {
1343:platform/driver/src/stm32f4xx_rcc.c ****       /* HSI used as PLL clock source */
1344:platform/driver/src/stm32f4xx_rcc.c ****       pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);      
1345:platform/driver/src/stm32f4xx_rcc.c ****     }
1346:platform/driver/src/stm32f4xx_rcc.c ****     
1347:platform/driver/src/stm32f4xx_rcc.c ****     pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
1348:platform/driver/src/stm32f4xx_rcc.c ****     RCC_Clocks->SYSCLK_Frequency = pllvco/pllp;
1349:platform/driver/src/stm32f4xx_rcc.c ****     break;
1350:platform/driver/src/stm32f4xx_rcc.c **** 
1351:platform/driver/src/stm32f4xx_rcc.c **** #if defined(STM32F412xG) || defined(STM32F413_423xx) || defined(STM32F446xx)
1352:platform/driver/src/stm32f4xx_rcc.c ****   case 0x0C:  /* PLL R used as system clock  source */
1353:platform/driver/src/stm32f4xx_rcc.c ****     /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
1354:platform/driver/src/stm32f4xx_rcc.c ****     SYSCLK = PLL_VCO / PLLR
1355:platform/driver/src/stm32f4xx_rcc.c ****     */    
1356:platform/driver/src/stm32f4xx_rcc.c ****     pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
1357:platform/driver/src/stm32f4xx_rcc.c ****     pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
1358:platform/driver/src/stm32f4xx_rcc.c ****     
1359:platform/driver/src/stm32f4xx_rcc.c ****     if (pllsource != 0)
1360:platform/driver/src/stm32f4xx_rcc.c ****     {
1361:platform/driver/src/stm32f4xx_rcc.c ****       /* HSE used as PLL clock source */
1362:platform/driver/src/stm32f4xx_rcc.c ****       pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
1363:platform/driver/src/stm32f4xx_rcc.c ****     }
1364:platform/driver/src/stm32f4xx_rcc.c ****     else
1365:platform/driver/src/stm32f4xx_rcc.c ****     {
1366:platform/driver/src/stm32f4xx_rcc.c ****       /* HSI used as PLL clock source */
1367:platform/driver/src/stm32f4xx_rcc.c ****       pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);      
1368:platform/driver/src/stm32f4xx_rcc.c ****     }
1369:platform/driver/src/stm32f4xx_rcc.c ****     
1370:platform/driver/src/stm32f4xx_rcc.c ****     pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >>28) + 1 ) *2;
1371:platform/driver/src/stm32f4xx_rcc.c ****     RCC_Clocks->SYSCLK_Frequency = pllvco/pllr;    
1372:platform/driver/src/stm32f4xx_rcc.c ****     break;
1373:platform/driver/src/stm32f4xx_rcc.c **** #endif /* STM32F412xG || STM32F413_423xx || STM32F446xx */
1374:platform/driver/src/stm32f4xx_rcc.c ****     
ARM GAS  /tmp/ccOp399b.s 			page 39


1375:platform/driver/src/stm32f4xx_rcc.c ****   default:
1376:platform/driver/src/stm32f4xx_rcc.c ****     RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 834              		.loc 1 1376 5 view .LVU204
 835              		.loc 1 1376 34 is_stmt 0 view .LVU205
 836 0014 254B     		ldr	r3, .L73+4
 837              	.LVL50:
 838              		.loc 1 1376 34 view .LVU206
 839 0016 0360     		str	r3, [r0]
1377:platform/driver/src/stm32f4xx_rcc.c ****     break;
 840              		.loc 1 1377 5 is_stmt 1 view .LVU207
 841 0018 01E0     		b	.L68
 842              	.LVL51:
 843              	.L72:
1323:platform/driver/src/stm32f4xx_rcc.c ****     break;
 844              		.loc 1 1323 5 view .LVU208
1323:platform/driver/src/stm32f4xx_rcc.c ****     break;
 845              		.loc 1 1323 34 is_stmt 0 view .LVU209
 846 001a 244B     		ldr	r3, .L73+4
 847              	.LVL52:
1323:platform/driver/src/stm32f4xx_rcc.c ****     break;
 848              		.loc 1 1323 34 view .LVU210
 849 001c 0360     		str	r3, [r0]
1324:platform/driver/src/stm32f4xx_rcc.c ****   case 0x04:  /* HSE used as system clock  source */
 850              		.loc 1 1324 5 is_stmt 1 view .LVU211
 851              	.LVL53:
 852              	.L68:
1378:platform/driver/src/stm32f4xx_rcc.c ****   }
1379:platform/driver/src/stm32f4xx_rcc.c ****   /* Compute HCLK, PCLK1 and PCLK2 clocks frequencies ------------------------*/
1380:platform/driver/src/stm32f4xx_rcc.c ****   
1381:platform/driver/src/stm32f4xx_rcc.c ****   /* Get HCLK prescaler */
1382:platform/driver/src/stm32f4xx_rcc.c ****   tmp = RCC->CFGR & RCC_CFGR_HPRE;
 853              		.loc 1 1382 3 view .LVU212
 854              		.loc 1 1382 12 is_stmt 0 view .LVU213
 855 001e 224C     		ldr	r4, .L73
 856 0020 A368     		ldr	r3, [r4, #8]
 857              	.LVL54:
1383:platform/driver/src/stm32f4xx_rcc.c ****   tmp = tmp >> 4;
 858              		.loc 1 1383 3 is_stmt 1 view .LVU214
 859              		.loc 1 1383 7 is_stmt 0 view .LVU215
 860 0022 C3F30313 		ubfx	r3, r3, #4, #4
 861              	.LVL55:
1384:platform/driver/src/stm32f4xx_rcc.c ****   presc = APBAHBPrescTable[tmp];
 862              		.loc 1 1384 3 is_stmt 1 view .LVU216
 863              		.loc 1 1384 27 is_stmt 0 view .LVU217
 864 0026 2249     		ldr	r1, .L73+8
 865 0028 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 866              	.LVL56:
 867              		.loc 1 1384 27 view .LVU218
 868 002a DAB2     		uxtb	r2, r3
 869              	.LVL57:
1385:platform/driver/src/stm32f4xx_rcc.c ****   /* HCLK clock frequency */
1386:platform/driver/src/stm32f4xx_rcc.c ****   RCC_Clocks->HCLK_Frequency = RCC_Clocks->SYSCLK_Frequency >> presc;
 870              		.loc 1 1386 3 is_stmt 1 view .LVU219
 871              		.loc 1 1386 42 is_stmt 0 view .LVU220
 872 002c 0368     		ldr	r3, [r0]
 873              		.loc 1 1386 61 view .LVU221
 874 002e D340     		lsrs	r3, r3, r2
ARM GAS  /tmp/ccOp399b.s 			page 40


 875              		.loc 1 1386 30 view .LVU222
 876 0030 4360     		str	r3, [r0, #4]
1387:platform/driver/src/stm32f4xx_rcc.c **** 
1388:platform/driver/src/stm32f4xx_rcc.c ****   /* Get PCLK1 prescaler */
1389:platform/driver/src/stm32f4xx_rcc.c ****   tmp = RCC->CFGR & RCC_CFGR_PPRE1;
 877              		.loc 1 1389 3 is_stmt 1 view .LVU223
 878              		.loc 1 1389 12 is_stmt 0 view .LVU224
 879 0032 A268     		ldr	r2, [r4, #8]
 880              	.LVL58:
1390:platform/driver/src/stm32f4xx_rcc.c ****   tmp = tmp >> 10;
 881              		.loc 1 1390 3 is_stmt 1 view .LVU225
 882              		.loc 1 1390 7 is_stmt 0 view .LVU226
 883 0034 C2F38222 		ubfx	r2, r2, #10, #3
 884              	.LVL59:
1391:platform/driver/src/stm32f4xx_rcc.c ****   presc = APBAHBPrescTable[tmp];
 885              		.loc 1 1391 3 is_stmt 1 view .LVU227
 886              		.loc 1 1391 27 is_stmt 0 view .LVU228
 887 0038 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 888              	.LVL60:
 889              		.loc 1 1391 27 view .LVU229
 890 003a D2B2     		uxtb	r2, r2
 891              	.LVL61:
1392:platform/driver/src/stm32f4xx_rcc.c ****   /* PCLK1 clock frequency */
1393:platform/driver/src/stm32f4xx_rcc.c ****   RCC_Clocks->PCLK1_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 892              		.loc 1 1393 3 is_stmt 1 view .LVU230
 893              		.loc 1 1393 60 is_stmt 0 view .LVU231
 894 003c 23FA02F2 		lsr	r2, r3, r2
 895              	.LVL62:
 896              		.loc 1 1393 31 view .LVU232
 897 0040 8260     		str	r2, [r0, #8]
1394:platform/driver/src/stm32f4xx_rcc.c **** 
1395:platform/driver/src/stm32f4xx_rcc.c ****   /* Get PCLK2 prescaler */
1396:platform/driver/src/stm32f4xx_rcc.c ****   tmp = RCC->CFGR & RCC_CFGR_PPRE2;
 898              		.loc 1 1396 3 is_stmt 1 view .LVU233
 899              		.loc 1 1396 12 is_stmt 0 view .LVU234
 900 0042 A268     		ldr	r2, [r4, #8]
 901              	.LVL63:
1397:platform/driver/src/stm32f4xx_rcc.c ****   tmp = tmp >> 13;
 902              		.loc 1 1397 3 is_stmt 1 view .LVU235
 903              		.loc 1 1397 7 is_stmt 0 view .LVU236
 904 0044 C2F34232 		ubfx	r2, r2, #13, #3
 905              	.LVL64:
1398:platform/driver/src/stm32f4xx_rcc.c ****   presc = APBAHBPrescTable[tmp];
 906              		.loc 1 1398 3 is_stmt 1 view .LVU237
 907              		.loc 1 1398 27 is_stmt 0 view .LVU238
 908 0048 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 909              	.LVL65:
 910              		.loc 1 1398 27 view .LVU239
 911 004a D2B2     		uxtb	r2, r2
 912              	.LVL66:
1399:platform/driver/src/stm32f4xx_rcc.c ****   /* PCLK2 clock frequency */
1400:platform/driver/src/stm32f4xx_rcc.c ****   RCC_Clocks->PCLK2_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 913              		.loc 1 1400 3 is_stmt 1 view .LVU240
 914              		.loc 1 1400 60 is_stmt 0 view .LVU241
 915 004c D340     		lsrs	r3, r3, r2
 916              		.loc 1 1400 31 view .LVU242
 917 004e C360     		str	r3, [r0, #12]
ARM GAS  /tmp/ccOp399b.s 			page 41


1401:platform/driver/src/stm32f4xx_rcc.c **** }
 918              		.loc 1 1401 1 view .LVU243
 919 0050 5DF8044B 		ldr	r4, [sp], #4
 920              	.LCFI1:
 921              		.cfi_remember_state
 922              		.cfi_restore 4
 923              		.cfi_def_cfa_offset 0
 924 0054 7047     		bx	lr
 925              	.LVL67:
 926              	.L65:
 927              	.LCFI2:
 928              		.cfi_restore_state
1326:platform/driver/src/stm32f4xx_rcc.c ****     break;
 929              		.loc 1 1326 5 is_stmt 1 view .LVU244
1326:platform/driver/src/stm32f4xx_rcc.c ****     break;
 930              		.loc 1 1326 34 is_stmt 0 view .LVU245
 931 0056 174B     		ldr	r3, .L73+12
 932              	.LVL68:
1326:platform/driver/src/stm32f4xx_rcc.c ****     break;
 933              		.loc 1 1326 34 view .LVU246
 934 0058 0360     		str	r3, [r0]
1327:platform/driver/src/stm32f4xx_rcc.c ****   case 0x08:  /* PLL P used as system clock  source */
 935              		.loc 1 1327 5 is_stmt 1 view .LVU247
 936 005a E0E7     		b	.L68
 937              	.LVL69:
 938              	.L66:
1333:platform/driver/src/stm32f4xx_rcc.c ****     pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 939              		.loc 1 1333 5 view .LVU248
1333:platform/driver/src/stm32f4xx_rcc.c ****     pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 940              		.loc 1 1333 21 is_stmt 0 view .LVU249
 941 005c 124B     		ldr	r3, .L73
 942              	.LVL70:
1333:platform/driver/src/stm32f4xx_rcc.c ****     pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 943              		.loc 1 1333 21 view .LVU250
 944 005e 5968     		ldr	r1, [r3, #4]
 945              	.LVL71:
1334:platform/driver/src/stm32f4xx_rcc.c ****     
 946              		.loc 1 1334 5 is_stmt 1 view .LVU251
1334:platform/driver/src/stm32f4xx_rcc.c ****     
 947              		.loc 1 1334 15 is_stmt 0 view .LVU252
 948 0060 5A68     		ldr	r2, [r3, #4]
1334:platform/driver/src/stm32f4xx_rcc.c ****     
 949              		.loc 1 1334 10 view .LVU253
 950 0062 02F03F02 		and	r2, r2, #63
 951              	.LVL72:
1336:platform/driver/src/stm32f4xx_rcc.c ****     {
 952              		.loc 1 1336 5 is_stmt 1 view .LVU254
1336:platform/driver/src/stm32f4xx_rcc.c ****     {
 953              		.loc 1 1336 8 is_stmt 0 view .LVU255
 954 0066 11F4800F 		tst	r1, #4194304
 955 006a 12D0     		beq	.L69
1339:platform/driver/src/stm32f4xx_rcc.c ****     }
 956              		.loc 1 1339 7 is_stmt 1 view .LVU256
1339:platform/driver/src/stm32f4xx_rcc.c ****     }
 957              		.loc 1 1339 27 is_stmt 0 view .LVU257
 958 006c 114B     		ldr	r3, .L73+12
 959 006e B3FBF2F3 		udiv	r3, r3, r2
ARM GAS  /tmp/ccOp399b.s 			page 42


1339:platform/driver/src/stm32f4xx_rcc.c ****     }
 960              		.loc 1 1339 42 view .LVU258
 961 0072 0D4A     		ldr	r2, .L73
 962              	.LVL73:
1339:platform/driver/src/stm32f4xx_rcc.c ****     }
 963              		.loc 1 1339 42 view .LVU259
 964 0074 5268     		ldr	r2, [r2, #4]
1339:platform/driver/src/stm32f4xx_rcc.c ****     }
 965              		.loc 1 1339 72 view .LVU260
 966 0076 C2F38812 		ubfx	r2, r2, #6, #9
1339:platform/driver/src/stm32f4xx_rcc.c ****     }
 967              		.loc 1 1339 14 view .LVU261
 968 007a 02FB03F3 		mul	r3, r2, r3
 969              	.LVL74:
 970              	.L70:
1347:platform/driver/src/stm32f4xx_rcc.c ****     RCC_Clocks->SYSCLK_Frequency = pllvco/pllp;
 971              		.loc 1 1347 5 is_stmt 1 view .LVU262
1347:platform/driver/src/stm32f4xx_rcc.c ****     RCC_Clocks->SYSCLK_Frequency = pllvco/pllp;
 972              		.loc 1 1347 18 is_stmt 0 view .LVU263
 973 007e 0A4A     		ldr	r2, .L73
 974 0080 5268     		ldr	r2, [r2, #4]
1347:platform/driver/src/stm32f4xx_rcc.c ****     RCC_Clocks->SYSCLK_Frequency = pllvco/pllp;
 975              		.loc 1 1347 48 view .LVU264
 976 0082 C2F30142 		ubfx	r2, r2, #16, #2
1347:platform/driver/src/stm32f4xx_rcc.c ****     RCC_Clocks->SYSCLK_Frequency = pllvco/pllp;
 977              		.loc 1 1347 54 view .LVU265
 978 0086 0132     		adds	r2, r2, #1
1347:platform/driver/src/stm32f4xx_rcc.c ****     RCC_Clocks->SYSCLK_Frequency = pllvco/pllp;
 979              		.loc 1 1347 10 view .LVU266
 980 0088 5200     		lsls	r2, r2, #1
 981              	.LVL75:
1348:platform/driver/src/stm32f4xx_rcc.c ****     break;
 982              		.loc 1 1348 5 is_stmt 1 view .LVU267
1348:platform/driver/src/stm32f4xx_rcc.c ****     break;
 983              		.loc 1 1348 42 is_stmt 0 view .LVU268
 984 008a B3FBF2F3 		udiv	r3, r3, r2
 985              	.LVL76:
1348:platform/driver/src/stm32f4xx_rcc.c ****     break;
 986              		.loc 1 1348 34 view .LVU269
 987 008e 0360     		str	r3, [r0]
1349:platform/driver/src/stm32f4xx_rcc.c **** 
 988              		.loc 1 1349 5 is_stmt 1 view .LVU270
 989 0090 C5E7     		b	.L68
 990              	.LVL77:
 991              	.L69:
1344:platform/driver/src/stm32f4xx_rcc.c ****     }
 992              		.loc 1 1344 7 view .LVU271
1344:platform/driver/src/stm32f4xx_rcc.c ****     }
 993              		.loc 1 1344 27 is_stmt 0 view .LVU272
 994 0092 064B     		ldr	r3, .L73+4
 995 0094 B3FBF2F3 		udiv	r3, r3, r2
1344:platform/driver/src/stm32f4xx_rcc.c ****     }
 996              		.loc 1 1344 42 view .LVU273
 997 0098 034A     		ldr	r2, .L73
 998              	.LVL78:
1344:platform/driver/src/stm32f4xx_rcc.c ****     }
 999              		.loc 1 1344 42 view .LVU274
ARM GAS  /tmp/ccOp399b.s 			page 43


 1000 009a 5268     		ldr	r2, [r2, #4]
1344:platform/driver/src/stm32f4xx_rcc.c ****     }
 1001              		.loc 1 1344 72 view .LVU275
 1002 009c C2F38812 		ubfx	r2, r2, #6, #9
1344:platform/driver/src/stm32f4xx_rcc.c ****     }
 1003              		.loc 1 1344 14 view .LVU276
 1004 00a0 02FB03F3 		mul	r3, r2, r3
 1005              	.LVL79:
1344:platform/driver/src/stm32f4xx_rcc.c ****     }
 1006              		.loc 1 1344 14 view .LVU277
 1007 00a4 EBE7     		b	.L70
 1008              	.L74:
 1009 00a6 00BF     		.align	2
 1010              	.L73:
 1011 00a8 00380240 		.word	1073887232
 1012 00ac 0024F400 		.word	16000000
 1013 00b0 00000000 		.word	.LANCHOR0
 1014 00b4 40787D01 		.word	25000000
 1015              		.cfi_endproc
 1016              	.LFE144:
 1018              		.section	.text.RCC_RTCCLKConfig,"ax",%progbits
 1019              		.align	1
 1020              		.global	RCC_RTCCLKConfig
 1021              		.syntax unified
 1022              		.thumb
 1023              		.thumb_func
 1025              	RCC_RTCCLKConfig:
 1026              	.LVL80:
 1027              	.LFB145:
1402:platform/driver/src/stm32f4xx_rcc.c **** 
1403:platform/driver/src/stm32f4xx_rcc.c **** /**
1404:platform/driver/src/stm32f4xx_rcc.c ****   * @}
1405:platform/driver/src/stm32f4xx_rcc.c ****   */
1406:platform/driver/src/stm32f4xx_rcc.c **** 
1407:platform/driver/src/stm32f4xx_rcc.c **** /** @defgroup RCC_Group3 Peripheral clocks configuration functions
1408:platform/driver/src/stm32f4xx_rcc.c ****  *  @brief   Peripheral clocks configuration functions 
1409:platform/driver/src/stm32f4xx_rcc.c ****  *
1410:platform/driver/src/stm32f4xx_rcc.c **** @verbatim   
1411:platform/driver/src/stm32f4xx_rcc.c ****  ===============================================================================
1412:platform/driver/src/stm32f4xx_rcc.c ****               ##### Peripheral clocks configuration functions #####
1413:platform/driver/src/stm32f4xx_rcc.c ****  ===============================================================================  
1414:platform/driver/src/stm32f4xx_rcc.c ****     [..] This section provide functions allowing to configure the Peripheral clocks. 
1415:platform/driver/src/stm32f4xx_rcc.c ****   
1416:platform/driver/src/stm32f4xx_rcc.c ****       (#) The RTC clock which is derived from the LSI, LSE or HSE clock divided 
1417:platform/driver/src/stm32f4xx_rcc.c ****           by 2 to 31.
1418:platform/driver/src/stm32f4xx_rcc.c ****      
1419:platform/driver/src/stm32f4xx_rcc.c ****       (#) After restart from Reset or wakeup from STANDBY, all peripherals are off
1420:platform/driver/src/stm32f4xx_rcc.c ****           except internal SRAM, Flash and JTAG. Before to start using a peripheral 
1421:platform/driver/src/stm32f4xx_rcc.c ****           you have to enable its interface clock. You can do this using 
1422:platform/driver/src/stm32f4xx_rcc.c ****           RCC_AHBPeriphClockCmd(), RCC_APB2PeriphClockCmd() and RCC_APB1PeriphClockCmd() functions.
1423:platform/driver/src/stm32f4xx_rcc.c **** 
1424:platform/driver/src/stm32f4xx_rcc.c ****       (#) To reset the peripherals configuration (to the default state after device reset)
1425:platform/driver/src/stm32f4xx_rcc.c ****           you can use RCC_AHBPeriphResetCmd(), RCC_APB2PeriphResetCmd() and 
1426:platform/driver/src/stm32f4xx_rcc.c ****           RCC_APB1PeriphResetCmd() functions.
1427:platform/driver/src/stm32f4xx_rcc.c ****      
1428:platform/driver/src/stm32f4xx_rcc.c ****       (#) To further reduce power consumption in SLEEP mode the peripheral clocks 
1429:platform/driver/src/stm32f4xx_rcc.c ****           can be disabled prior to executing the WFI or WFE instructions. 
ARM GAS  /tmp/ccOp399b.s 			page 44


1430:platform/driver/src/stm32f4xx_rcc.c ****           You can do this using RCC_AHBPeriphClockLPModeCmd(), 
1431:platform/driver/src/stm32f4xx_rcc.c ****           RCC_APB2PeriphClockLPModeCmd() and RCC_APB1PeriphClockLPModeCmd() functions.  
1432:platform/driver/src/stm32f4xx_rcc.c **** 
1433:platform/driver/src/stm32f4xx_rcc.c **** @endverbatim
1434:platform/driver/src/stm32f4xx_rcc.c ****   * @{
1435:platform/driver/src/stm32f4xx_rcc.c ****   */
1436:platform/driver/src/stm32f4xx_rcc.c **** 
1437:platform/driver/src/stm32f4xx_rcc.c **** /**
1438:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the RTC clock (RTCCLK).
1439:platform/driver/src/stm32f4xx_rcc.c ****   * @note   As the RTC clock configuration bits are in the Backup domain and write
1440:platform/driver/src/stm32f4xx_rcc.c ****   *         access is denied to this domain after reset, you have to enable write
1441:platform/driver/src/stm32f4xx_rcc.c ****   *         access using PWR_BackupAccessCmd(ENABLE) function before to configure
1442:platform/driver/src/stm32f4xx_rcc.c ****   *         the RTC clock source (to be done once after reset).    
1443:platform/driver/src/stm32f4xx_rcc.c ****   * @note   Once the RTC clock is configured it can't be changed unless the  
1444:platform/driver/src/stm32f4xx_rcc.c ****   *         Backup domain is reset using RCC_BackupResetCmd() function, or by
1445:platform/driver/src/stm32f4xx_rcc.c ****   *         a Power On Reset (POR).
1446:platform/driver/src/stm32f4xx_rcc.c ****   *    
1447:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_RTCCLKSource: specifies the RTC clock source.
1448:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1449:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_RTCCLKSource_LSE: LSE selected as RTC clock
1450:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_RTCCLKSource_LSI: LSI selected as RTC clock
1451:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_RTCCLKSource_HSE_Divx: HSE clock divided by x selected
1452:platform/driver/src/stm32f4xx_rcc.c ****   *                                            as RTC clock, where x:[2,31]
1453:platform/driver/src/stm32f4xx_rcc.c ****   *  
1454:platform/driver/src/stm32f4xx_rcc.c ****   * @note   If the LSE or LSI is used as RTC clock source, the RTC continues to
1455:platform/driver/src/stm32f4xx_rcc.c ****   *         work in STOP and STANDBY modes, and can be used as wakeup source.
1456:platform/driver/src/stm32f4xx_rcc.c ****   *         However, when the HSE clock is used as RTC clock source, the RTC
1457:platform/driver/src/stm32f4xx_rcc.c ****   *         cannot be used in STOP and STANDBY modes.    
1458:platform/driver/src/stm32f4xx_rcc.c ****   * @note   The maximum input clock frequency for RTC is 1MHz (when using HSE as
1459:platform/driver/src/stm32f4xx_rcc.c ****   *         RTC clock source).
1460:platform/driver/src/stm32f4xx_rcc.c ****   *  
1461:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
1462:platform/driver/src/stm32f4xx_rcc.c ****   */
1463:platform/driver/src/stm32f4xx_rcc.c **** void RCC_RTCCLKConfig(uint32_t RCC_RTCCLKSource)
1464:platform/driver/src/stm32f4xx_rcc.c **** {
 1028              		.loc 1 1464 1 is_stmt 1 view -0
 1029              		.cfi_startproc
 1030              		@ args = 0, pretend = 0, frame = 0
 1031              		@ frame_needed = 0, uses_anonymous_args = 0
 1032              		@ link register save eliminated.
1465:platform/driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 1033              		.loc 1 1465 3 view .LVU279
1466:platform/driver/src/stm32f4xx_rcc.c **** 
1467:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1468:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_RTCCLK_SOURCE(RCC_RTCCLKSource));
 1034              		.loc 1 1468 3 view .LVU280
1469:platform/driver/src/stm32f4xx_rcc.c **** 
1470:platform/driver/src/stm32f4xx_rcc.c ****   if ((RCC_RTCCLKSource & 0x00000300) == 0x00000300)
 1035              		.loc 1 1470 3 view .LVU281
 1036              		.loc 1 1470 25 is_stmt 0 view .LVU282
 1037 0000 00F44073 		and	r3, r0, #768
 1038              		.loc 1 1470 6 view .LVU283
 1039 0004 B3F5407F 		cmp	r3, #768
 1040 0008 06D0     		beq	.L77
 1041              	.LVL81:
 1042              	.L76:
1471:platform/driver/src/stm32f4xx_rcc.c ****   { /* If HSE is selected as RTC clock source, configure HSE division factor for RTC clock */
ARM GAS  /tmp/ccOp399b.s 			page 45


1472:platform/driver/src/stm32f4xx_rcc.c ****     tmpreg = RCC->CFGR;
1473:platform/driver/src/stm32f4xx_rcc.c **** 
1474:platform/driver/src/stm32f4xx_rcc.c ****     /* Clear RTCPRE[4:0] bits */
1475:platform/driver/src/stm32f4xx_rcc.c ****     tmpreg &= ~RCC_CFGR_RTCPRE;
1476:platform/driver/src/stm32f4xx_rcc.c **** 
1477:platform/driver/src/stm32f4xx_rcc.c ****     /* Configure HSE division factor for RTC clock */
1478:platform/driver/src/stm32f4xx_rcc.c ****     tmpreg |= (RCC_RTCCLKSource & 0xFFFFCFF);
1479:platform/driver/src/stm32f4xx_rcc.c **** 
1480:platform/driver/src/stm32f4xx_rcc.c ****     /* Store the new value */
1481:platform/driver/src/stm32f4xx_rcc.c ****     RCC->CFGR = tmpreg;
1482:platform/driver/src/stm32f4xx_rcc.c ****   }
1483:platform/driver/src/stm32f4xx_rcc.c ****     
1484:platform/driver/src/stm32f4xx_rcc.c ****   /* Select the RTC clock source */
1485:platform/driver/src/stm32f4xx_rcc.c ****   RCC->BDCR |= (RCC_RTCCLKSource & 0x00000FFF);
 1043              		.loc 1 1485 3 is_stmt 1 view .LVU284
 1044              		.loc 1 1485 13 is_stmt 0 view .LVU285
 1045 000a 094A     		ldr	r2, .L78
 1046 000c 136F     		ldr	r3, [r2, #112]
 1047              		.loc 1 1485 34 view .LVU286
 1048 000e C0F30B00 		ubfx	r0, r0, #0, #12
 1049              	.LVL82:
 1050              		.loc 1 1485 13 view .LVU287
 1051 0012 1843     		orrs	r0, r0, r3
 1052 0014 1067     		str	r0, [r2, #112]
1486:platform/driver/src/stm32f4xx_rcc.c **** }
 1053              		.loc 1 1486 1 view .LVU288
 1054 0016 7047     		bx	lr
 1055              	.LVL83:
 1056              	.L77:
1472:platform/driver/src/stm32f4xx_rcc.c **** 
 1057              		.loc 1 1472 5 is_stmt 1 view .LVU289
1472:platform/driver/src/stm32f4xx_rcc.c **** 
 1058              		.loc 1 1472 12 is_stmt 0 view .LVU290
 1059 0018 0549     		ldr	r1, .L78
 1060 001a 8A68     		ldr	r2, [r1, #8]
 1061              	.LVL84:
1475:platform/driver/src/stm32f4xx_rcc.c **** 
 1062              		.loc 1 1475 5 is_stmt 1 view .LVU291
1475:platform/driver/src/stm32f4xx_rcc.c **** 
 1063              		.loc 1 1475 12 is_stmt 0 view .LVU292
 1064 001c 22F4F812 		bic	r2, r2, #2031616
 1065              	.LVL85:
1478:platform/driver/src/stm32f4xx_rcc.c **** 
 1066              		.loc 1 1478 5 is_stmt 1 view .LVU293
1478:platform/driver/src/stm32f4xx_rcc.c **** 
 1067              		.loc 1 1478 33 is_stmt 0 view .LVU294
 1068 0020 20F07043 		bic	r3, r0, #-268435456
 1069 0024 23F44073 		bic	r3, r3, #768
1478:platform/driver/src/stm32f4xx_rcc.c **** 
 1070              		.loc 1 1478 12 view .LVU295
 1071 0028 1343     		orrs	r3, r3, r2
 1072              	.LVL86:
1481:platform/driver/src/stm32f4xx_rcc.c ****   }
 1073              		.loc 1 1481 5 is_stmt 1 view .LVU296
1481:platform/driver/src/stm32f4xx_rcc.c ****   }
 1074              		.loc 1 1481 15 is_stmt 0 view .LVU297
 1075 002a 8B60     		str	r3, [r1, #8]
ARM GAS  /tmp/ccOp399b.s 			page 46


 1076 002c EDE7     		b	.L76
 1077              	.L79:
 1078 002e 00BF     		.align	2
 1079              	.L78:
 1080 0030 00380240 		.word	1073887232
 1081              		.cfi_endproc
 1082              	.LFE145:
 1084              		.section	.text.RCC_RTCCLKCmd,"ax",%progbits
 1085              		.align	1
 1086              		.global	RCC_RTCCLKCmd
 1087              		.syntax unified
 1088              		.thumb
 1089              		.thumb_func
 1091              	RCC_RTCCLKCmd:
 1092              	.LVL87:
 1093              	.LFB146:
1487:platform/driver/src/stm32f4xx_rcc.c **** 
1488:platform/driver/src/stm32f4xx_rcc.c **** /**
1489:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the RTC clock.
1490:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This function must be used only after the RTC clock source was selected
1491:platform/driver/src/stm32f4xx_rcc.c ****   *         using the RCC_RTCCLKConfig function.
1492:platform/driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the RTC clock. This parameter can be: ENABLE or DISABLE.
1493:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
1494:platform/driver/src/stm32f4xx_rcc.c ****   */
1495:platform/driver/src/stm32f4xx_rcc.c **** void RCC_RTCCLKCmd(FunctionalState NewState)
1496:platform/driver/src/stm32f4xx_rcc.c **** {
 1094              		.loc 1 1496 1 is_stmt 1 view -0
 1095              		.cfi_startproc
 1096              		@ args = 0, pretend = 0, frame = 0
 1097              		@ frame_needed = 0, uses_anonymous_args = 0
 1098              		@ link register save eliminated.
1497:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1498:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1099              		.loc 1 1498 3 view .LVU299
1499:platform/driver/src/stm32f4xx_rcc.c **** 
1500:platform/driver/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) BDCR_RTCEN_BB = (uint32_t)NewState;
 1100              		.loc 1 1500 3 view .LVU300
 1101              		.loc 1 1500 36 is_stmt 0 view .LVU301
 1102 0000 014B     		ldr	r3, .L81
 1103 0002 C3F83C0E 		str	r0, [r3, #3644]
1501:platform/driver/src/stm32f4xx_rcc.c **** }
 1104              		.loc 1 1501 1 view .LVU302
 1105 0006 7047     		bx	lr
 1106              	.L82:
 1107              		.align	2
 1108              	.L81:
 1109 0008 00004742 		.word	1111949312
 1110              		.cfi_endproc
 1111              	.LFE146:
 1113              		.section	.text.RCC_BackupResetCmd,"ax",%progbits
 1114              		.align	1
 1115              		.global	RCC_BackupResetCmd
 1116              		.syntax unified
 1117              		.thumb
 1118              		.thumb_func
 1120              	RCC_BackupResetCmd:
 1121              	.LVL88:
ARM GAS  /tmp/ccOp399b.s 			page 47


 1122              	.LFB147:
1502:platform/driver/src/stm32f4xx_rcc.c **** 
1503:platform/driver/src/stm32f4xx_rcc.c **** /**
1504:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Forces or releases the Backup domain reset.
1505:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This function resets the RTC peripheral (including the backup registers)
1506:platform/driver/src/stm32f4xx_rcc.c ****   *         and the RTC clock source selection in RCC_CSR register.
1507:platform/driver/src/stm32f4xx_rcc.c ****   * @note   The BKPSRAM is not affected by this reset.    
1508:platform/driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the Backup domain reset.
1509:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
1510:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
1511:platform/driver/src/stm32f4xx_rcc.c ****   */
1512:platform/driver/src/stm32f4xx_rcc.c **** void RCC_BackupResetCmd(FunctionalState NewState)
1513:platform/driver/src/stm32f4xx_rcc.c **** {
 1123              		.loc 1 1513 1 is_stmt 1 view -0
 1124              		.cfi_startproc
 1125              		@ args = 0, pretend = 0, frame = 0
 1126              		@ frame_needed = 0, uses_anonymous_args = 0
 1127              		@ link register save eliminated.
1514:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1515:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1128              		.loc 1 1515 3 view .LVU304
1516:platform/driver/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) BDCR_BDRST_BB = (uint32_t)NewState;
 1129              		.loc 1 1516 3 view .LVU305
 1130              		.loc 1 1516 36 is_stmt 0 view .LVU306
 1131 0000 014B     		ldr	r3, .L84
 1132 0002 C3F8400E 		str	r0, [r3, #3648]
1517:platform/driver/src/stm32f4xx_rcc.c **** }
 1133              		.loc 1 1517 1 view .LVU307
 1134 0006 7047     		bx	lr
 1135              	.L85:
 1136              		.align	2
 1137              	.L84:
 1138 0008 00004742 		.word	1111949312
 1139              		.cfi_endproc
 1140              	.LFE147:
 1142              		.section	.text.RCC_I2SCLKConfig,"ax",%progbits
 1143              		.align	1
 1144              		.global	RCC_I2SCLKConfig
 1145              		.syntax unified
 1146              		.thumb
 1147              		.thumb_func
 1149              	RCC_I2SCLKConfig:
 1150              	.LVL89:
 1151              	.LFB148:
1518:platform/driver/src/stm32f4xx_rcc.c **** 
1519:platform/driver/src/stm32f4xx_rcc.c **** #if defined (STM32F412xG) || defined(STM32F413_423xx) || defined(STM32F446xx)
1520:platform/driver/src/stm32f4xx_rcc.c **** /**
1521:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the I2S clock source (I2SCLK).
1522:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling the I2S APB clock.
1523:platform/driver/src/stm32f4xx_rcc.c ****   *
1524:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_I2SAPBx: specifies the APBx I2S clock source.
1525:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1526:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_I2SBus_APB1: I2S peripheral instance is on APB1 Bus
1527:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_I2SBus_APB2: I2S peripheral instance is on APB2 Bus
1528:platform/driver/src/stm32f4xx_rcc.c ****   *
1529:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_I2SCLKSource: specifies the I2S clock source.
1530:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
ARM GAS  /tmp/ccOp399b.s 			page 48


1531:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_I2SCLKSource_PLLI2S: PLLI2S clock used as I2S clock source
1532:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_I2SCLKSource_Ext: External clock mapped on the I2S_CKIN pin
1533:platform/driver/src/stm32f4xx_rcc.c ****   *                                        used as I2S clock source
1534:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_I2SCLKSource_PLL: PLL clock used as I2S clock source
1535:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_I2SCLKSource_HSI_HSE: HSI or HSE depends on PLLSRC used as I2S clock source
1536:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
1537:platform/driver/src/stm32f4xx_rcc.c ****   */
1538:platform/driver/src/stm32f4xx_rcc.c **** void RCC_I2SCLKConfig(uint32_t RCC_I2SAPBx, uint32_t RCC_I2SCLKSource)
1539:platform/driver/src/stm32f4xx_rcc.c **** {
1540:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1541:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_I2SCLK_SOURCE(RCC_I2SCLKSource));
1542:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_I2S_APBx(RCC_I2SAPBx));
1543:platform/driver/src/stm32f4xx_rcc.c ****   
1544:platform/driver/src/stm32f4xx_rcc.c ****   if(RCC_I2SAPBx == RCC_I2SBus_APB1)
1545:platform/driver/src/stm32f4xx_rcc.c ****   {
1546:platform/driver/src/stm32f4xx_rcc.c ****     /* Clear APB1 I2Sx clock source selection bits */
1547:platform/driver/src/stm32f4xx_rcc.c ****     RCC->DCKCFGR &= ~RCC_DCKCFGR_I2S1SRC;
1548:platform/driver/src/stm32f4xx_rcc.c ****     /* Set new APB1 I2Sx clock source*/
1549:platform/driver/src/stm32f4xx_rcc.c ****     RCC->DCKCFGR |= RCC_I2SCLKSource;
1550:platform/driver/src/stm32f4xx_rcc.c ****   }
1551:platform/driver/src/stm32f4xx_rcc.c ****   else
1552:platform/driver/src/stm32f4xx_rcc.c ****   {
1553:platform/driver/src/stm32f4xx_rcc.c ****     /* Clear APB2 I2Sx clock source selection  bits */
1554:platform/driver/src/stm32f4xx_rcc.c ****     RCC->DCKCFGR &= ~RCC_DCKCFGR_I2S2SRC;
1555:platform/driver/src/stm32f4xx_rcc.c ****     /* Set new APB2 I2Sx clock source */
1556:platform/driver/src/stm32f4xx_rcc.c ****     RCC->DCKCFGR |= (RCC_I2SCLKSource << 2);
1557:platform/driver/src/stm32f4xx_rcc.c ****   }
1558:platform/driver/src/stm32f4xx_rcc.c **** }
1559:platform/driver/src/stm32f4xx_rcc.c **** #if defined(STM32F446xx)
1560:platform/driver/src/stm32f4xx_rcc.c **** /**
1561:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the SAIx clock source (SAIxCLK).
1562:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling the SAIx APB clock.
1563:platform/driver/src/stm32f4xx_rcc.c ****   *
1564:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_SAIInstance: specifies the SAIx clock source.
1565:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1566:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIInstance_SAI1: SAI1 clock source selection
1567:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIInstance_SAI2: SAI2 clock source selections
1568:platform/driver/src/stm32f4xx_rcc.c ****   *
1569:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_SAICLKSource: specifies the SAI clock source.
1570:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1571:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAICLKSource_PLLSAI: PLLSAI clock used as SAI clock source
1572:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAICLKSource_PLLI2S: PLLI2S clock used as SAI clock source
1573:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAICLKSource_PLL: PLL clock used as SAI clock source
1574:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAICLKSource_HSI_HSE: HSI or HSE depends on PLLSRC used as SAI clock source
1575:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
1576:platform/driver/src/stm32f4xx_rcc.c ****   */
1577:platform/driver/src/stm32f4xx_rcc.c **** void RCC_SAICLKConfig(uint32_t RCC_SAIInstance, uint32_t RCC_SAICLKSource)
1578:platform/driver/src/stm32f4xx_rcc.c **** {
1579:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1580:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_SAICLK_SOURCE(RCC_SAICLKSource));
1581:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_SAI_INSTANCE(RCC_SAIInstance));
1582:platform/driver/src/stm32f4xx_rcc.c ****   
1583:platform/driver/src/stm32f4xx_rcc.c ****   if(RCC_SAIInstance == RCC_SAIInstance_SAI1)
1584:platform/driver/src/stm32f4xx_rcc.c ****   {
1585:platform/driver/src/stm32f4xx_rcc.c ****     /* Clear SAI1 clock source selection bits */
1586:platform/driver/src/stm32f4xx_rcc.c ****     RCC->DCKCFGR &= ~RCC_DCKCFGR_SAI1SRC;
1587:platform/driver/src/stm32f4xx_rcc.c ****     /* Set new SAI1 clock source */
ARM GAS  /tmp/ccOp399b.s 			page 49


1588:platform/driver/src/stm32f4xx_rcc.c ****     RCC->DCKCFGR |= RCC_SAICLKSource;
1589:platform/driver/src/stm32f4xx_rcc.c ****   }
1590:platform/driver/src/stm32f4xx_rcc.c ****   else
1591:platform/driver/src/stm32f4xx_rcc.c ****   {
1592:platform/driver/src/stm32f4xx_rcc.c ****     /* Clear SAI2 clock source selection bits */
1593:platform/driver/src/stm32f4xx_rcc.c ****     RCC->DCKCFGR &= ~RCC_DCKCFGR_SAI2SRC;
1594:platform/driver/src/stm32f4xx_rcc.c ****     /* Set new SAI2 clock source */
1595:platform/driver/src/stm32f4xx_rcc.c ****     RCC->DCKCFGR |= (RCC_SAICLKSource << 2);
1596:platform/driver/src/stm32f4xx_rcc.c ****   }
1597:platform/driver/src/stm32f4xx_rcc.c **** }
1598:platform/driver/src/stm32f4xx_rcc.c **** #endif /* STM32F446xx */
1599:platform/driver/src/stm32f4xx_rcc.c **** 
1600:platform/driver/src/stm32f4xx_rcc.c **** #if defined(STM32F413_423xx)
1601:platform/driver/src/stm32f4xx_rcc.c **** /**
1602:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Configures SAI1BlockA clock source selection.      
1603:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling PLLSAI, PLLI2S and  
1604:platform/driver/src/stm32f4xx_rcc.c ****   *         the SAI clock.
1605:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_SAIBlockACLKSource: specifies the SAI Block A clock source.
1606:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1607:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIACLKSource_PLLI2SR: PLLI2SR clock used as SAI clock source
1608:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIACLKSource_PLLI2S: PLLI2S clock used as SAI clock source
1609:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIACLKSource_PLL: PLL clock used as SAI clock source
1610:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIACLKSource_HSI_HSE: HSI or HSE depends on PLLSRC used as SAI clock sourc
1611:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
1612:platform/driver/src/stm32f4xx_rcc.c ****   */
1613:platform/driver/src/stm32f4xx_rcc.c **** void RCC_SAIBlockACLKConfig(uint32_t RCC_SAIBlockACLKSource)
1614:platform/driver/src/stm32f4xx_rcc.c **** {
1615:platform/driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
1616:platform/driver/src/stm32f4xx_rcc.c ****   
1617:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1618:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_SAIACLK_SOURCE(RCC_SAIBlockACLKSource));
1619:platform/driver/src/stm32f4xx_rcc.c ****   
1620:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->DCKCFGR;
1621:platform/driver/src/stm32f4xx_rcc.c **** 
1622:platform/driver/src/stm32f4xx_rcc.c ****   /* Clear RCC_DCKCFGR_SAI1ASRC[1:0] bits */
1623:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_DCKCFGR_SAI1ASRC;
1624:platform/driver/src/stm32f4xx_rcc.c **** 
1625:platform/driver/src/stm32f4xx_rcc.c ****   /* Set SAI Block A source selection value */
1626:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_SAIBlockACLKSource;
1627:platform/driver/src/stm32f4xx_rcc.c **** 
1628:platform/driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
1629:platform/driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR = tmpreg;
1630:platform/driver/src/stm32f4xx_rcc.c **** }
1631:platform/driver/src/stm32f4xx_rcc.c **** 
1632:platform/driver/src/stm32f4xx_rcc.c **** /**
1633:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Configures SAI1BlockB clock source selection.      
1634:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling PLLSAI, PLLI2S and  
1635:platform/driver/src/stm32f4xx_rcc.c ****   *         the SAI clock.
1636:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_SAIBlockBCLKSource: specifies the SAI Block B clock source.
1637:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1638:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIBCLKSource_PLLI2SR: PLLI2SR clock used as SAI clock source
1639:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIBCLKSource_PLLI2S: PLLI2S clock used as SAI clock source
1640:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIBCLKSource_PLL: PLL clock used as SAI clock source
1641:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIBCLKSource_HSI_HSE: HSI or HSE depends on PLLSRC used as SAI clock sourc
1642:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
1643:platform/driver/src/stm32f4xx_rcc.c ****   */
1644:platform/driver/src/stm32f4xx_rcc.c **** void RCC_SAIBlockBCLKConfig(uint32_t RCC_SAIBlockBCLKSource)
ARM GAS  /tmp/ccOp399b.s 			page 50


1645:platform/driver/src/stm32f4xx_rcc.c **** {
1646:platform/driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
1647:platform/driver/src/stm32f4xx_rcc.c ****   
1648:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1649:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_SAIBCLK_SOURCE(RCC_SAIBlockBCLKSource));
1650:platform/driver/src/stm32f4xx_rcc.c ****   
1651:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->DCKCFGR;
1652:platform/driver/src/stm32f4xx_rcc.c **** 
1653:platform/driver/src/stm32f4xx_rcc.c ****   /* Clear RCC_DCKCFGR_SAI1ASRC[1:0] bits */
1654:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_DCKCFGR_SAI1BSRC;
1655:platform/driver/src/stm32f4xx_rcc.c **** 
1656:platform/driver/src/stm32f4xx_rcc.c ****   /* Set SAI Block B source selection value */
1657:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_SAIBlockBCLKSource;
1658:platform/driver/src/stm32f4xx_rcc.c **** 
1659:platform/driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
1660:platform/driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR = tmpreg;
1661:platform/driver/src/stm32f4xx_rcc.c **** }
1662:platform/driver/src/stm32f4xx_rcc.c **** #endif /* STM32F413_423xx */
1663:platform/driver/src/stm32f4xx_rcc.c **** #endif /* STM32F412xG || STM32F413_423xx || STM32F446xx */
1664:platform/driver/src/stm32f4xx_rcc.c **** 
1665:platform/driver/src/stm32f4xx_rcc.c **** #if defined(STM32F410xx)
1666:platform/driver/src/stm32f4xx_rcc.c **** /**
1667:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the I2S clock source (I2SCLK).
1668:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling the I2S clock.
1669:platform/driver/src/stm32f4xx_rcc.c ****   *
1670:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_I2SCLKSource: specifies the I2S clock source.
1671:platform/driver/src/stm32f4xx_rcc.c ****   *         This parameter can be one of the following values:
1672:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_I2SAPBCLKSOURCE_PLLR: PLL VCO output clock divided by PLLR.
1673:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_I2SAPBCLKSOURCE_EXT: External clock mapped on the I2S_CKIN pin.
1674:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_I2SAPBCLKSOURCE_PLLSRC: HSI/HSE depends on PLLSRC.
1675:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
1676:platform/driver/src/stm32f4xx_rcc.c ****   */
1677:platform/driver/src/stm32f4xx_rcc.c **** void RCC_I2SCLKConfig(uint32_t RCC_I2SCLKSource)
1678:platform/driver/src/stm32f4xx_rcc.c **** {
1679:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1680:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_I2SCLK_SOURCE(RCC_I2SCLKSource));
1681:platform/driver/src/stm32f4xx_rcc.c ****   
1682:platform/driver/src/stm32f4xx_rcc.c ****   /* Clear I2Sx clock source selection bits */
1683:platform/driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR &= ~RCC_DCKCFGR_I2SSRC;
1684:platform/driver/src/stm32f4xx_rcc.c ****   /* Set new I2Sx clock source*/
1685:platform/driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR |= RCC_I2SCLKSource;
1686:platform/driver/src/stm32f4xx_rcc.c **** }
1687:platform/driver/src/stm32f4xx_rcc.c **** #endif /* STM32F410xx */
1688:platform/driver/src/stm32f4xx_rcc.c **** 
1689:platform/driver/src/stm32f4xx_rcc.c **** #if defined(STM32F40_41xxx) || defined(STM32F427_437xx) || defined(STM32F429_439xx) || defined(STM3
1690:platform/driver/src/stm32f4xx_rcc.c **** /**
1691:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the I2S clock source (I2SCLK).
1692:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling the I2S APB clock.
1693:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_I2SCLKSource: specifies the I2S clock source.
1694:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1695:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_I2S2CLKSource_PLLI2S: PLLI2S clock used as I2S clock source
1696:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_I2S2CLKSource_Ext: External clock mapped on the I2S_CKIN pin
1697:platform/driver/src/stm32f4xx_rcc.c ****   *                                        used as I2S clock source
1698:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
1699:platform/driver/src/stm32f4xx_rcc.c ****   */
1700:platform/driver/src/stm32f4xx_rcc.c **** void RCC_I2SCLKConfig(uint32_t RCC_I2SCLKSource)
1701:platform/driver/src/stm32f4xx_rcc.c **** {
ARM GAS  /tmp/ccOp399b.s 			page 51


 1152              		.loc 1 1701 1 is_stmt 1 view -0
 1153              		.cfi_startproc
 1154              		@ args = 0, pretend = 0, frame = 0
 1155              		@ frame_needed = 0, uses_anonymous_args = 0
 1156              		@ link register save eliminated.
1702:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1703:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_I2SCLK_SOURCE(RCC_I2SCLKSource));
 1157              		.loc 1 1703 3 view .LVU309
1704:platform/driver/src/stm32f4xx_rcc.c **** 
1705:platform/driver/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) CFGR_I2SSRC_BB = RCC_I2SCLKSource;  
 1158              		.loc 1 1705 3 view .LVU310
 1159              		.loc 1 1705 37 is_stmt 0 view .LVU311
 1160 0000 014B     		ldr	r3, .L87
 1161 0002 C3F85C01 		str	r0, [r3, #348]
1706:platform/driver/src/stm32f4xx_rcc.c **** }
 1162              		.loc 1 1706 1 view .LVU312
 1163 0006 7047     		bx	lr
 1164              	.L88:
 1165              		.align	2
 1166              	.L87:
 1167 0008 00004742 		.word	1111949312
 1168              		.cfi_endproc
 1169              	.LFE148:
 1171              		.section	.text.RCC_SAIBlockACLKConfig,"ax",%progbits
 1172              		.align	1
 1173              		.global	RCC_SAIBlockACLKConfig
 1174              		.syntax unified
 1175              		.thumb
 1176              		.thumb_func
 1178              	RCC_SAIBlockACLKConfig:
 1179              	.LVL90:
 1180              	.LFB149:
1707:platform/driver/src/stm32f4xx_rcc.c **** #endif /* STM32F40_41xxx || STM32F427_437xx || STM32F429_439xx || STM32F401xx || STM32F411xE || STM
1708:platform/driver/src/stm32f4xx_rcc.c **** 
1709:platform/driver/src/stm32f4xx_rcc.c **** #if defined(STM32F40_41xxx) || defined(STM32F427_437xx) || defined(STM32F429_439xx) || defined(STM3
1710:platform/driver/src/stm32f4xx_rcc.c **** /**
1711:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Configures SAI1BlockA clock source selection.
1712:platform/driver/src/stm32f4xx_rcc.c ****   * 
1713:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F42xxx/43xxx/469xx/479xx devices.
1714:platform/driver/src/stm32f4xx_rcc.c ****   *       
1715:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling PLLSAI, PLLI2S and  
1716:platform/driver/src/stm32f4xx_rcc.c ****   *         the SAI clock.
1717:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_SAIBlockACLKSource: specifies the SAI Block A clock source.
1718:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1719:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIACLKSource_PLLI2S: PLLI2S_Q clock divided by PLLI2SDIVQ used 
1720:platform/driver/src/stm32f4xx_rcc.c ****   *                                           as SAI1 Block A clock 
1721:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIACLKSource_PLLSAI: PLLISAI_Q clock divided by PLLSAIDIVQ used 
1722:platform/driver/src/stm32f4xx_rcc.c ****   *                                           as SAI1 Block A clock 
1723:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIACLKSource_Ext: External clock mapped on the I2S_CKIN pin
1724:platform/driver/src/stm32f4xx_rcc.c ****   *                                        used as SAI1 Block A clock
1725:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
1726:platform/driver/src/stm32f4xx_rcc.c ****   */
1727:platform/driver/src/stm32f4xx_rcc.c **** void RCC_SAIBlockACLKConfig(uint32_t RCC_SAIBlockACLKSource)
1728:platform/driver/src/stm32f4xx_rcc.c **** {
 1181              		.loc 1 1728 1 is_stmt 1 view -0
 1182              		.cfi_startproc
 1183              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccOp399b.s 			page 52


 1184              		@ frame_needed = 0, uses_anonymous_args = 0
 1185              		@ link register save eliminated.
1729:platform/driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 1186              		.loc 1 1729 3 view .LVU314
1730:platform/driver/src/stm32f4xx_rcc.c ****   
1731:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1732:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_SAIACLK_SOURCE(RCC_SAIBlockACLKSource));
 1187              		.loc 1 1732 3 view .LVU315
1733:platform/driver/src/stm32f4xx_rcc.c ****   
1734:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->DCKCFGR;
 1188              		.loc 1 1734 3 view .LVU316
 1189              		.loc 1 1734 10 is_stmt 0 view .LVU317
 1190 0000 044A     		ldr	r2, .L90
 1191 0002 D2F88C30 		ldr	r3, [r2, #140]
 1192              	.LVL91:
1735:platform/driver/src/stm32f4xx_rcc.c **** 
1736:platform/driver/src/stm32f4xx_rcc.c ****   /* Clear RCC_DCKCFGR_SAI1ASRC[1:0] bits */
1737:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_DCKCFGR_SAI1ASRC;
 1193              		.loc 1 1737 3 is_stmt 1 view .LVU318
 1194              		.loc 1 1737 10 is_stmt 0 view .LVU319
 1195 0006 23F44013 		bic	r3, r3, #3145728
 1196              	.LVL92:
1738:platform/driver/src/stm32f4xx_rcc.c **** 
1739:platform/driver/src/stm32f4xx_rcc.c ****   /* Set SAI Block A source selection value */
1740:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_SAIBlockACLKSource;
 1197              		.loc 1 1740 3 is_stmt 1 view .LVU320
 1198              		.loc 1 1740 10 is_stmt 0 view .LVU321
 1199 000a 0343     		orrs	r3, r3, r0
 1200              	.LVL93:
1741:platform/driver/src/stm32f4xx_rcc.c **** 
1742:platform/driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
1743:platform/driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR = tmpreg;
 1201              		.loc 1 1743 3 is_stmt 1 view .LVU322
 1202              		.loc 1 1743 16 is_stmt 0 view .LVU323
 1203 000c C2F88C30 		str	r3, [r2, #140]
1744:platform/driver/src/stm32f4xx_rcc.c **** }
 1204              		.loc 1 1744 1 view .LVU324
 1205 0010 7047     		bx	lr
 1206              	.L91:
 1207 0012 00BF     		.align	2
 1208              	.L90:
 1209 0014 00380240 		.word	1073887232
 1210              		.cfi_endproc
 1211              	.LFE149:
 1213              		.section	.text.RCC_SAIBlockBCLKConfig,"ax",%progbits
 1214              		.align	1
 1215              		.global	RCC_SAIBlockBCLKConfig
 1216              		.syntax unified
 1217              		.thumb
 1218              		.thumb_func
 1220              	RCC_SAIBlockBCLKConfig:
 1221              	.LVL94:
 1222              	.LFB150:
1745:platform/driver/src/stm32f4xx_rcc.c **** 
1746:platform/driver/src/stm32f4xx_rcc.c **** /**
1747:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Configures SAI1BlockB clock source selection.
1748:platform/driver/src/stm32f4xx_rcc.c ****   * 
ARM GAS  /tmp/ccOp399b.s 			page 53


1749:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F42xxx/43xxx/469xx/479xx devices.
1750:platform/driver/src/stm32f4xx_rcc.c ****   *       
1751:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling PLLSAI, PLLI2S and  
1752:platform/driver/src/stm32f4xx_rcc.c ****   *         the SAI clock.
1753:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_SAIBlockBCLKSource: specifies the SAI Block B clock source.
1754:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1755:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIBCLKSource_PLLI2S: PLLI2S_Q clock divided by PLLI2SDIVQ used 
1756:platform/driver/src/stm32f4xx_rcc.c ****   *                                           as SAI1 Block B clock 
1757:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIBCLKSource_PLLSAI: PLLISAI_Q clock divided by PLLSAIDIVQ used 
1758:platform/driver/src/stm32f4xx_rcc.c ****   *                                           as SAI1 Block B clock 
1759:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIBCLKSource_Ext: External clock mapped on the I2S_CKIN pin
1760:platform/driver/src/stm32f4xx_rcc.c ****   *                                        used as SAI1 Block B clock
1761:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
1762:platform/driver/src/stm32f4xx_rcc.c ****   */
1763:platform/driver/src/stm32f4xx_rcc.c **** void RCC_SAIBlockBCLKConfig(uint32_t RCC_SAIBlockBCLKSource)
1764:platform/driver/src/stm32f4xx_rcc.c **** {
 1223              		.loc 1 1764 1 is_stmt 1 view -0
 1224              		.cfi_startproc
 1225              		@ args = 0, pretend = 0, frame = 0
 1226              		@ frame_needed = 0, uses_anonymous_args = 0
 1227              		@ link register save eliminated.
1765:platform/driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 1228              		.loc 1 1765 3 view .LVU326
1766:platform/driver/src/stm32f4xx_rcc.c ****   
1767:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1768:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_SAIBCLK_SOURCE(RCC_SAIBlockBCLKSource));
 1229              		.loc 1 1768 3 view .LVU327
1769:platform/driver/src/stm32f4xx_rcc.c ****   
1770:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->DCKCFGR;
 1230              		.loc 1 1770 3 view .LVU328
 1231              		.loc 1 1770 10 is_stmt 0 view .LVU329
 1232 0000 044A     		ldr	r2, .L93
 1233 0002 D2F88C30 		ldr	r3, [r2, #140]
 1234              	.LVL95:
1771:platform/driver/src/stm32f4xx_rcc.c **** 
1772:platform/driver/src/stm32f4xx_rcc.c ****   /* Clear RCC_DCKCFGR_SAI1BSRC[1:0] bits */
1773:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_DCKCFGR_SAI1BSRC;
 1235              		.loc 1 1773 3 is_stmt 1 view .LVU330
 1236              		.loc 1 1773 10 is_stmt 0 view .LVU331
 1237 0006 23F44003 		bic	r3, r3, #12582912
 1238              	.LVL96:
1774:platform/driver/src/stm32f4xx_rcc.c **** 
1775:platform/driver/src/stm32f4xx_rcc.c ****   /* Set SAI Block B source selection value */
1776:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_SAIBlockBCLKSource;
 1239              		.loc 1 1776 3 is_stmt 1 view .LVU332
 1240              		.loc 1 1776 10 is_stmt 0 view .LVU333
 1241 000a 0343     		orrs	r3, r3, r0
 1242              	.LVL97:
1777:platform/driver/src/stm32f4xx_rcc.c **** 
1778:platform/driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
1779:platform/driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR = tmpreg;
 1243              		.loc 1 1779 3 is_stmt 1 view .LVU334
 1244              		.loc 1 1779 16 is_stmt 0 view .LVU335
 1245 000c C2F88C30 		str	r3, [r2, #140]
1780:platform/driver/src/stm32f4xx_rcc.c **** }
 1246              		.loc 1 1780 1 view .LVU336
 1247 0010 7047     		bx	lr
ARM GAS  /tmp/ccOp399b.s 			page 54


 1248              	.L94:
 1249 0012 00BF     		.align	2
 1250              	.L93:
 1251 0014 00380240 		.word	1073887232
 1252              		.cfi_endproc
 1253              	.LFE150:
 1255              		.section	.text.RCC_SAIPLLI2SClkDivConfig,"ax",%progbits
 1256              		.align	1
 1257              		.global	RCC_SAIPLLI2SClkDivConfig
 1258              		.syntax unified
 1259              		.thumb
 1260              		.thumb_func
 1262              	RCC_SAIPLLI2SClkDivConfig:
 1263              	.LVL98:
 1264              	.LFB151:
1781:platform/driver/src/stm32f4xx_rcc.c **** #endif /* STM32F40_41xxx || STM32F427_437xx || STM32F429_439xx || STM32F469_479xx */
1782:platform/driver/src/stm32f4xx_rcc.c **** 
1783:platform/driver/src/stm32f4xx_rcc.c **** /**
1784:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the SAI clock Divider coming from PLLI2S.
1785:platform/driver/src/stm32f4xx_rcc.c ****   * 
1786:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F42xxx/43xxx/446xx/469xx/479xx devices.
1787:platform/driver/src/stm32f4xx_rcc.c ****   *   
1788:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling the PLLI2S.
1789:platform/driver/src/stm32f4xx_rcc.c ****   *              
1790:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_PLLI2SDivQ: specifies the PLLI2S division factor for SAI1 clock .
1791:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 1 and 32.
1792:platform/driver/src/stm32f4xx_rcc.c ****   *          SAI1 clock frequency = f(PLLI2S_Q) / RCC_PLLI2SDivQ 
1793:platform/driver/src/stm32f4xx_rcc.c ****   *              
1794:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
1795:platform/driver/src/stm32f4xx_rcc.c ****   */
1796:platform/driver/src/stm32f4xx_rcc.c **** void RCC_SAIPLLI2SClkDivConfig(uint32_t RCC_PLLI2SDivQ)  
1797:platform/driver/src/stm32f4xx_rcc.c **** {
 1265              		.loc 1 1797 1 is_stmt 1 view -0
 1266              		.cfi_startproc
 1267              		@ args = 0, pretend = 0, frame = 0
 1268              		@ frame_needed = 0, uses_anonymous_args = 0
 1269              		@ link register save eliminated.
1798:platform/driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 1270              		.loc 1 1798 3 view .LVU338
1799:platform/driver/src/stm32f4xx_rcc.c ****   
1800:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1801:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2S_DIVQ_VALUE(RCC_PLLI2SDivQ));
 1271              		.loc 1 1801 3 view .LVU339
1802:platform/driver/src/stm32f4xx_rcc.c ****   
1803:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->DCKCFGR;
 1272              		.loc 1 1803 3 view .LVU340
 1273              		.loc 1 1803 10 is_stmt 0 view .LVU341
 1274 0000 044A     		ldr	r2, .L96
 1275 0002 D2F88C30 		ldr	r3, [r2, #140]
 1276              	.LVL99:
1804:platform/driver/src/stm32f4xx_rcc.c **** 
1805:platform/driver/src/stm32f4xx_rcc.c ****   /* Clear PLLI2SDIVQ[4:0] bits */
1806:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg &= ~(RCC_DCKCFGR_PLLI2SDIVQ);
 1277              		.loc 1 1806 3 is_stmt 1 view .LVU342
 1278              		.loc 1 1806 10 is_stmt 0 view .LVU343
 1279 0006 23F01F03 		bic	r3, r3, #31
 1280              	.LVL100:
ARM GAS  /tmp/ccOp399b.s 			page 55


1807:platform/driver/src/stm32f4xx_rcc.c **** 
1808:platform/driver/src/stm32f4xx_rcc.c ****   /* Set PLLI2SDIVQ values */
1809:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg |= (RCC_PLLI2SDivQ - 1);
 1281              		.loc 1 1809 3 is_stmt 1 view .LVU344
 1282              		.loc 1 1809 29 is_stmt 0 view .LVU345
 1283 000a 0138     		subs	r0, r0, #1
 1284              	.LVL101:
 1285              		.loc 1 1809 10 view .LVU346
 1286 000c 1843     		orrs	r0, r0, r3
 1287              	.LVL102:
1810:platform/driver/src/stm32f4xx_rcc.c **** 
1811:platform/driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
1812:platform/driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR = tmpreg;
 1288              		.loc 1 1812 3 is_stmt 1 view .LVU347
 1289              		.loc 1 1812 16 is_stmt 0 view .LVU348
 1290 000e C2F88C00 		str	r0, [r2, #140]
1813:platform/driver/src/stm32f4xx_rcc.c **** }
 1291              		.loc 1 1813 1 view .LVU349
 1292 0012 7047     		bx	lr
 1293              	.L97:
 1294              		.align	2
 1295              	.L96:
 1296 0014 00380240 		.word	1073887232
 1297              		.cfi_endproc
 1298              	.LFE151:
 1300              		.section	.text.RCC_SAIPLLSAIClkDivConfig,"ax",%progbits
 1301              		.align	1
 1302              		.global	RCC_SAIPLLSAIClkDivConfig
 1303              		.syntax unified
 1304              		.thumb
 1305              		.thumb_func
 1307              	RCC_SAIPLLSAIClkDivConfig:
 1308              	.LVL103:
 1309              	.LFB152:
1814:platform/driver/src/stm32f4xx_rcc.c **** 
1815:platform/driver/src/stm32f4xx_rcc.c **** /**
1816:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the SAI clock Divider coming from PLLSAI.
1817:platform/driver/src/stm32f4xx_rcc.c ****   * 
1818:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F42xxx/43xxx/446xx/469xx/479xx devices.
1819:platform/driver/src/stm32f4xx_rcc.c ****   *        
1820:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling the PLLSAI.
1821:platform/driver/src/stm32f4xx_rcc.c ****   *   
1822:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_PLLSAIDivQ: specifies the PLLSAI division factor for SAI1 clock .
1823:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 1 and 32.
1824:platform/driver/src/stm32f4xx_rcc.c ****   *          SAI1 clock frequency = f(PLLSAI_Q) / RCC_PLLSAIDivQ  
1825:platform/driver/src/stm32f4xx_rcc.c ****   *              
1826:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
1827:platform/driver/src/stm32f4xx_rcc.c ****   */
1828:platform/driver/src/stm32f4xx_rcc.c **** void RCC_SAIPLLSAIClkDivConfig(uint32_t RCC_PLLSAIDivQ)  
1829:platform/driver/src/stm32f4xx_rcc.c **** {
 1310              		.loc 1 1829 1 is_stmt 1 view -0
 1311              		.cfi_startproc
 1312              		@ args = 0, pretend = 0, frame = 0
 1313              		@ frame_needed = 0, uses_anonymous_args = 0
 1314              		@ link register save eliminated.
1830:platform/driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 1315              		.loc 1 1830 3 view .LVU351
ARM GAS  /tmp/ccOp399b.s 			page 56


1831:platform/driver/src/stm32f4xx_rcc.c ****   
1832:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1833:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(RCC_PLLSAIDivQ));
 1316              		.loc 1 1833 3 view .LVU352
1834:platform/driver/src/stm32f4xx_rcc.c ****   
1835:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->DCKCFGR;
 1317              		.loc 1 1835 3 view .LVU353
 1318              		.loc 1 1835 10 is_stmt 0 view .LVU354
 1319 0000 054A     		ldr	r2, .L99
 1320 0002 D2F88C30 		ldr	r3, [r2, #140]
 1321              	.LVL104:
1836:platform/driver/src/stm32f4xx_rcc.c **** 
1837:platform/driver/src/stm32f4xx_rcc.c ****   /* Clear PLLI2SDIVQ[4:0] and PLLSAIDIVQ[4:0] bits */
1838:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg &= ~(RCC_DCKCFGR_PLLSAIDIVQ);
 1322              		.loc 1 1838 3 is_stmt 1 view .LVU355
 1323              		.loc 1 1838 10 is_stmt 0 view .LVU356
 1324 0006 23F4F853 		bic	r3, r3, #7936
 1325              	.LVL105:
1839:platform/driver/src/stm32f4xx_rcc.c **** 
1840:platform/driver/src/stm32f4xx_rcc.c ****   /* Set PLLSAIDIVQ values */
1841:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg |= ((RCC_PLLSAIDivQ - 1) << 8);
 1326              		.loc 1 1841 3 is_stmt 1 view .LVU357
 1327              		.loc 1 1841 30 is_stmt 0 view .LVU358
 1328 000a 0138     		subs	r0, r0, #1
 1329              	.LVL106:
 1330              		.loc 1 1841 10 view .LVU359
 1331 000c 43EA0023 		orr	r3, r3, r0, lsl #8
 1332              	.LVL107:
1842:platform/driver/src/stm32f4xx_rcc.c **** 
1843:platform/driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
1844:platform/driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR = tmpreg;
 1333              		.loc 1 1844 3 is_stmt 1 view .LVU360
 1334              		.loc 1 1844 16 is_stmt 0 view .LVU361
 1335 0010 C2F88C30 		str	r3, [r2, #140]
1845:platform/driver/src/stm32f4xx_rcc.c **** }
 1336              		.loc 1 1845 1 view .LVU362
 1337 0014 7047     		bx	lr
 1338              	.L100:
 1339 0016 00BF     		.align	2
 1340              	.L99:
 1341 0018 00380240 		.word	1073887232
 1342              		.cfi_endproc
 1343              	.LFE152:
 1345              		.section	.text.RCC_LTDCCLKDivConfig,"ax",%progbits
 1346              		.align	1
 1347              		.global	RCC_LTDCCLKDivConfig
 1348              		.syntax unified
 1349              		.thumb
 1350              		.thumb_func
 1352              	RCC_LTDCCLKDivConfig:
 1353              	.LVL108:
 1354              	.LFB153:
1846:platform/driver/src/stm32f4xx_rcc.c **** 
1847:platform/driver/src/stm32f4xx_rcc.c **** #if defined(STM32F413_423xx)
1848:platform/driver/src/stm32f4xx_rcc.c **** /**
1849:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the SAI clock Divider coming from PLLI2S.
1850:platform/driver/src/stm32f4xx_rcc.c ****   * 
ARM GAS  /tmp/ccOp399b.s 			page 57


1851:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F413_423xx
1852:platform/driver/src/stm32f4xx_rcc.c ****   *   
1853:platform/driver/src/stm32f4xx_rcc.c ****   * @param   RCC_PLLI2SDivR: specifies the PLLI2S division factor for SAI1 clock.
1854:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 1 and 32.
1855:platform/driver/src/stm32f4xx_rcc.c ****   *          SAI1 clock frequency = f(PLLI2SR) / RCC_PLLI2SDivR 
1856:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
1857:platform/driver/src/stm32f4xx_rcc.c ****   */
1858:platform/driver/src/stm32f4xx_rcc.c **** void RCC_SAIPLLI2SRClkDivConfig(uint32_t RCC_PLLI2SDivR)  
1859:platform/driver/src/stm32f4xx_rcc.c **** {
1860:platform/driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
1861:platform/driver/src/stm32f4xx_rcc.c ****   
1862:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1863:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2S_DIVR_VALUE(RCC_PLLI2SDivR));
1864:platform/driver/src/stm32f4xx_rcc.c ****   
1865:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->DCKCFGR;
1866:platform/driver/src/stm32f4xx_rcc.c **** 
1867:platform/driver/src/stm32f4xx_rcc.c ****   /* Clear PLLI2SDIVR[4:0] bits */
1868:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg &= ~(RCC_DCKCFGR_PLLI2SDIVR);
1869:platform/driver/src/stm32f4xx_rcc.c **** 
1870:platform/driver/src/stm32f4xx_rcc.c ****   /* Set PLLI2SDIVR values */
1871:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg |= (RCC_PLLI2SDivR-1);
1872:platform/driver/src/stm32f4xx_rcc.c **** 
1873:platform/driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
1874:platform/driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR = tmpreg;
1875:platform/driver/src/stm32f4xx_rcc.c **** }
1876:platform/driver/src/stm32f4xx_rcc.c **** 
1877:platform/driver/src/stm32f4xx_rcc.c **** /**
1878:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the SAI clock Divider coming from PLL.
1879:platform/driver/src/stm32f4xx_rcc.c ****   * 
1880:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F413_423xx
1881:platform/driver/src/stm32f4xx_rcc.c ****   *        
1882:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling the PLLSAI.
1883:platform/driver/src/stm32f4xx_rcc.c ****   *   
1884:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_PLLDivR: specifies the PLL division factor for SAI1 clock.
1885:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 1 and 32.
1886:platform/driver/src/stm32f4xx_rcc.c ****   *          SAI1 clock frequency = f(PLLR) / RCC_PLLDivR 
1887:platform/driver/src/stm32f4xx_rcc.c ****   *              
1888:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
1889:platform/driver/src/stm32f4xx_rcc.c ****   */
1890:platform/driver/src/stm32f4xx_rcc.c **** void RCC_SAIPLLRClkDivConfig(uint32_t RCC_PLLDivR)  
1891:platform/driver/src/stm32f4xx_rcc.c **** {
1892:platform/driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
1893:platform/driver/src/stm32f4xx_rcc.c ****   
1894:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1895:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLL_DIVR_VALUE(RCC_PLLDivR));
1896:platform/driver/src/stm32f4xx_rcc.c ****   
1897:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->DCKCFGR;
1898:platform/driver/src/stm32f4xx_rcc.c **** 
1899:platform/driver/src/stm32f4xx_rcc.c ****   /* Clear PLLDIVR[12:8] */
1900:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg &= ~(RCC_DCKCFGR_PLLDIVR);
1901:platform/driver/src/stm32f4xx_rcc.c **** 
1902:platform/driver/src/stm32f4xx_rcc.c ****   /* Set PLLDivR values */
1903:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg |= ((RCC_PLLDivR - 1 ) << 8);
1904:platform/driver/src/stm32f4xx_rcc.c **** 
1905:platform/driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
1906:platform/driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR = tmpreg;
1907:platform/driver/src/stm32f4xx_rcc.c **** }
ARM GAS  /tmp/ccOp399b.s 			page 58


1908:platform/driver/src/stm32f4xx_rcc.c **** #endif /* STM32F413_423xx */
1909:platform/driver/src/stm32f4xx_rcc.c **** 
1910:platform/driver/src/stm32f4xx_rcc.c **** /**
1911:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the LTDC clock Divider coming from PLLSAI.
1912:platform/driver/src/stm32f4xx_rcc.c ****   * 
1913:platform/driver/src/stm32f4xx_rcc.c ****   * @note   The LTDC peripheral is only available with STM32F42xxx/43xxx/446xx/469xx/479xx Devices.
1914:platform/driver/src/stm32f4xx_rcc.c ****   *      
1915:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling the PLLSAI.
1916:platform/driver/src/stm32f4xx_rcc.c ****   *   
1917:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_PLLSAIDivR: specifies the PLLSAI division factor for LTDC clock .
1918:platform/driver/src/stm32f4xx_rcc.c ****   *          LTDC clock frequency = f(PLLSAI_R) / RCC_PLLSAIDivR  
1919:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1920:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_PLLSAIDivR_Div2: LTDC clock = f(PLLSAI_R)/2
1921:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_PLLSAIDivR_Div4: LTDC clock = f(PLLSAI_R)/4
1922:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_PLLSAIDivR_Div8: LTDC clock = f(PLLSAI_R)/8
1923:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_PLLSAIDivR_Div16: LTDC clock = f(PLLSAI_R)/16
1924:platform/driver/src/stm32f4xx_rcc.c ****   *            
1925:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
1926:platform/driver/src/stm32f4xx_rcc.c ****   */
1927:platform/driver/src/stm32f4xx_rcc.c **** void RCC_LTDCCLKDivConfig(uint32_t RCC_PLLSAIDivR)
1928:platform/driver/src/stm32f4xx_rcc.c **** {
 1355              		.loc 1 1928 1 is_stmt 1 view -0
 1356              		.cfi_startproc
 1357              		@ args = 0, pretend = 0, frame = 0
 1358              		@ frame_needed = 0, uses_anonymous_args = 0
 1359              		@ link register save eliminated.
1929:platform/driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 1360              		.loc 1 1929 3 view .LVU364
1930:platform/driver/src/stm32f4xx_rcc.c ****   
1931:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1932:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAI_DIVR_VALUE(RCC_PLLSAIDivR));
 1361              		.loc 1 1932 3 view .LVU365
1933:platform/driver/src/stm32f4xx_rcc.c ****   
1934:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->DCKCFGR;
 1362              		.loc 1 1934 3 view .LVU366
 1363              		.loc 1 1934 10 is_stmt 0 view .LVU367
 1364 0000 044A     		ldr	r2, .L102
 1365 0002 D2F88C30 		ldr	r3, [r2, #140]
 1366              	.LVL109:
1935:platform/driver/src/stm32f4xx_rcc.c **** 
1936:platform/driver/src/stm32f4xx_rcc.c ****   /* Clear PLLSAIDIVR[2:0] bits */
1937:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_DCKCFGR_PLLSAIDIVR;
 1367              		.loc 1 1937 3 is_stmt 1 view .LVU368
 1368              		.loc 1 1937 10 is_stmt 0 view .LVU369
 1369 0006 23F44033 		bic	r3, r3, #196608
 1370              	.LVL110:
1938:platform/driver/src/stm32f4xx_rcc.c **** 
1939:platform/driver/src/stm32f4xx_rcc.c ****   /* Set PLLSAIDIVR values */
1940:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_PLLSAIDivR;
 1371              		.loc 1 1940 3 is_stmt 1 view .LVU370
 1372              		.loc 1 1940 10 is_stmt 0 view .LVU371
 1373 000a 0343     		orrs	r3, r3, r0
 1374              	.LVL111:
1941:platform/driver/src/stm32f4xx_rcc.c **** 
1942:platform/driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
1943:platform/driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR = tmpreg;
 1375              		.loc 1 1943 3 is_stmt 1 view .LVU372
ARM GAS  /tmp/ccOp399b.s 			page 59


 1376              		.loc 1 1943 16 is_stmt 0 view .LVU373
 1377 000c C2F88C30 		str	r3, [r2, #140]
1944:platform/driver/src/stm32f4xx_rcc.c **** }
 1378              		.loc 1 1944 1 view .LVU374
 1379 0010 7047     		bx	lr
 1380              	.L103:
 1381 0012 00BF     		.align	2
 1382              	.L102:
 1383 0014 00380240 		.word	1073887232
 1384              		.cfi_endproc
 1385              	.LFE153:
 1387              		.section	.text.RCC_TIMCLKPresConfig,"ax",%progbits
 1388              		.align	1
 1389              		.global	RCC_TIMCLKPresConfig
 1390              		.syntax unified
 1391              		.thumb
 1392              		.thumb_func
 1394              	RCC_TIMCLKPresConfig:
 1395              	.LVL112:
 1396              	.LFB154:
1945:platform/driver/src/stm32f4xx_rcc.c **** 
1946:platform/driver/src/stm32f4xx_rcc.c **** #if defined(STM32F412xG) || defined(STM32F413_423xx)
1947:platform/driver/src/stm32f4xx_rcc.c **** /**
1948:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the DFSDM clock source (DFSDMCLK).
1949:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling the DFSDM APB clock.
1950:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_DFSDMCLKSource: specifies the DFSDM clock source.
1951:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1952:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_DFSDMCLKSource_APB: APB clock used as DFSDM clock source.
1953:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_DFSDMCLKSource_SYS: System clock used as DFSDM clock source.
1954:platform/driver/src/stm32f4xx_rcc.c ****   *                                        
1955:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
1956:platform/driver/src/stm32f4xx_rcc.c ****   */
1957:platform/driver/src/stm32f4xx_rcc.c **** void RCC_DFSDM1CLKConfig(uint32_t RCC_DFSDMCLKSource)
1958:platform/driver/src/stm32f4xx_rcc.c **** {
1959:platform/driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
1960:platform/driver/src/stm32f4xx_rcc.c ****   
1961:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1962:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_DFSDM1CLK_SOURCE(RCC_DFSDMCLKSource));
1963:platform/driver/src/stm32f4xx_rcc.c ****   
1964:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->DCKCFGR;
1965:platform/driver/src/stm32f4xx_rcc.c **** 
1966:platform/driver/src/stm32f4xx_rcc.c ****   /* Clear CKDFSDM-SEL  bit */
1967:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_DCKCFGR_CKDFSDM1SEL;
1968:platform/driver/src/stm32f4xx_rcc.c **** 
1969:platform/driver/src/stm32f4xx_rcc.c ****   /* Set CKDFSDM-SEL bit according to RCC_DFSDMCLKSource value */
1970:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg |= (RCC_DFSDMCLKSource << 31) ;
1971:platform/driver/src/stm32f4xx_rcc.c **** 
1972:platform/driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
1973:platform/driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR = tmpreg;
1974:platform/driver/src/stm32f4xx_rcc.c **** }
1975:platform/driver/src/stm32f4xx_rcc.c **** 
1976:platform/driver/src/stm32f4xx_rcc.c **** /**
1977:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the DFSDM Audio clock source (DFSDMACLK).
1978:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling the DFSDM APB clock.
1979:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_DFSDM1ACLKSource: specifies the DFSDM clock source.
1980:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1981:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_DFSDM1AUDIOCLKSOURCE_I2SAPB1: APB clock used as DFSDM clock source.
ARM GAS  /tmp/ccOp399b.s 			page 60


1982:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_DFSDM1AUDIOCLKSOURCE_I2SAPB2: System clock used as DFSDM clock source.
1983:platform/driver/src/stm32f4xx_rcc.c ****   *                                        
1984:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
1985:platform/driver/src/stm32f4xx_rcc.c ****   */
1986:platform/driver/src/stm32f4xx_rcc.c **** void RCC_DFSDM1ACLKConfig(uint32_t RCC_DFSDM1ACLKSource)
1987:platform/driver/src/stm32f4xx_rcc.c **** {
1988:platform/driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
1989:platform/driver/src/stm32f4xx_rcc.c ****   
1990:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1991:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_DFSDMACLK_SOURCE(RCC_DFSDM1ACLKSource));
1992:platform/driver/src/stm32f4xx_rcc.c ****   
1993:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->DCKCFGR;
1994:platform/driver/src/stm32f4xx_rcc.c **** 
1995:platform/driver/src/stm32f4xx_rcc.c ****   /* Clear CKDFSDMA SEL  bit */
1996:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_DCKCFGR_CKDFSDM1ASEL;
1997:platform/driver/src/stm32f4xx_rcc.c **** 
1998:platform/driver/src/stm32f4xx_rcc.c ****   /* Set CKDFSDM-SEL   bt according to RCC_DFSDMCLKSource value */
1999:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_DFSDM1ACLKSource;
2000:platform/driver/src/stm32f4xx_rcc.c **** 
2001:platform/driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
2002:platform/driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR = tmpreg;
2003:platform/driver/src/stm32f4xx_rcc.c **** }
2004:platform/driver/src/stm32f4xx_rcc.c **** 
2005:platform/driver/src/stm32f4xx_rcc.c **** #if defined(STM32F413_423xx)
2006:platform/driver/src/stm32f4xx_rcc.c **** /**
2007:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the DFSDM Audio clock source (DFSDMACLK).
2008:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling the DFSDM APB clock.
2009:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_DFSDM2ACLKSource: specifies the DFSDM clock source.
2010:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
2011:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_DFSDM2AUDIOCLKSOURCE_I2SAPB1: APB clock used as DFSDM clock source.
2012:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_DFSDM2AUDIOCLKSOURCE_I2SAPB2: System clock used as DFSDM clock source.
2013:platform/driver/src/stm32f4xx_rcc.c ****   *                                        
2014:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
2015:platform/driver/src/stm32f4xx_rcc.c ****   */
2016:platform/driver/src/stm32f4xx_rcc.c **** void RCC_DFSDM2ACLKConfig(uint32_t RCC_DFSDMACLKSource)
2017:platform/driver/src/stm32f4xx_rcc.c **** {
2018:platform/driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
2019:platform/driver/src/stm32f4xx_rcc.c ****   
2020:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2021:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_DFSDMCLK_SOURCE(RCC_DFSDMACLKSource));
2022:platform/driver/src/stm32f4xx_rcc.c ****   
2023:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->DCKCFGR;
2024:platform/driver/src/stm32f4xx_rcc.c **** 
2025:platform/driver/src/stm32f4xx_rcc.c ****   /* Clear CKDFSDMA SEL  bit */
2026:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_DCKCFGR_CKDFSDM1ASEL;
2027:platform/driver/src/stm32f4xx_rcc.c **** 
2028:platform/driver/src/stm32f4xx_rcc.c ****   /* Set CKDFSDM-SEL   bt according to RCC_DFSDMCLKSource value */
2029:platform/driver/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_DFSDMACLKSource;
2030:platform/driver/src/stm32f4xx_rcc.c **** 
2031:platform/driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
2032:platform/driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR = tmpreg;
2033:platform/driver/src/stm32f4xx_rcc.c **** }
2034:platform/driver/src/stm32f4xx_rcc.c **** #endif /* STM32F413_423xx */
2035:platform/driver/src/stm32f4xx_rcc.c **** #endif /* STM32F412xG || STM32F413_423xx */
2036:platform/driver/src/stm32f4xx_rcc.c **** 
2037:platform/driver/src/stm32f4xx_rcc.c **** /**
2038:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the Timers clocks prescalers selection.
ARM GAS  /tmp/ccOp399b.s 			page 61


2039:platform/driver/src/stm32f4xx_rcc.c ****   * 
2040:platform/driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F42xxx/43xxx and STM32F401xx/411xE devices. 
2041:platform/driver/src/stm32f4xx_rcc.c ****   *   
2042:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_TIMCLKPrescaler : specifies the Timers clocks prescalers selection
2043:platform/driver/src/stm32f4xx_rcc.c ****   *         This parameter can be one of the following values:
2044:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_TIMPrescDesactivated: The Timers kernels clocks prescaler is 
2045:platform/driver/src/stm32f4xx_rcc.c ****   *                 equal to HPRE if PPREx is corresponding to division by 1 or 2, 
2046:platform/driver/src/stm32f4xx_rcc.c ****   *                 else it is equal to [(HPRE * PPREx) / 2] if PPREx is corresponding to 
2047:platform/driver/src/stm32f4xx_rcc.c ****   *                 division by 4 or more.
2048:platform/driver/src/stm32f4xx_rcc.c ****   *                   
2049:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_TIMPrescActivated: The Timers kernels clocks prescaler is 
2050:platform/driver/src/stm32f4xx_rcc.c ****   *                 equal to HPRE if PPREx is corresponding to division by 1, 2 or 4, 
2051:platform/driver/src/stm32f4xx_rcc.c ****   *                 else it is equal to [(HPRE * PPREx) / 4] if PPREx is corresponding 
2052:platform/driver/src/stm32f4xx_rcc.c ****   *                 to division by 8 or more.
2053:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
2054:platform/driver/src/stm32f4xx_rcc.c ****   */
2055:platform/driver/src/stm32f4xx_rcc.c **** void RCC_TIMCLKPresConfig(uint32_t RCC_TIMCLKPrescaler)
2056:platform/driver/src/stm32f4xx_rcc.c **** {
 1397              		.loc 1 2056 1 is_stmt 1 view -0
 1398              		.cfi_startproc
 1399              		@ args = 0, pretend = 0, frame = 0
 1400              		@ frame_needed = 0, uses_anonymous_args = 0
 1401              		@ link register save eliminated.
2057:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2058:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_TIMCLK_PRESCALER(RCC_TIMCLKPrescaler));
 1402              		.loc 1 2058 3 view .LVU376
2059:platform/driver/src/stm32f4xx_rcc.c **** 
2060:platform/driver/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) DCKCFGR_TIMPRE_BB = RCC_TIMCLKPrescaler;
 1403              		.loc 1 2060 3 view .LVU377
 1404              		.loc 1 2060 40 is_stmt 0 view .LVU378
 1405 0000 014B     		ldr	r3, .L105
 1406 0002 C3F8E001 		str	r0, [r3, #480]
2061:platform/driver/src/stm32f4xx_rcc.c **** }
 1407              		.loc 1 2061 1 view .LVU379
 1408 0006 7047     		bx	lr
 1409              	.L106:
 1410              		.align	2
 1411              	.L105:
 1412 0008 00104742 		.word	1111953408
 1413              		.cfi_endproc
 1414              	.LFE154:
 1416              		.section	.text.RCC_AHB1PeriphClockCmd,"ax",%progbits
 1417              		.align	1
 1418              		.global	RCC_AHB1PeriphClockCmd
 1419              		.syntax unified
 1420              		.thumb
 1421              		.thumb_func
 1423              	RCC_AHB1PeriphClockCmd:
 1424              	.LVL113:
 1425              	.LFB155:
2062:platform/driver/src/stm32f4xx_rcc.c **** 
2063:platform/driver/src/stm32f4xx_rcc.c **** /**
2064:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the AHB1 peripheral clock.
2065:platform/driver/src/stm32f4xx_rcc.c ****   * @note   After reset, the peripheral clock (used for registers read/write access)
2066:platform/driver/src/stm32f4xx_rcc.c ****   *         is disabled and the application software has to enable this clock before 
2067:platform/driver/src/stm32f4xx_rcc.c ****   *         using it.   
2068:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB1 peripheral to gates its clock.
ARM GAS  /tmp/ccOp399b.s 			page 62


2069:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2070:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOA:       GPIOA clock
2071:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOB:       GPIOB clock 
2072:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOC:       GPIOC clock
2073:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOD:       GPIOD clock
2074:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOE:       GPIOE clock
2075:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOF:       GPIOF clock
2076:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOG:       GPIOG clock
2077:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOG:       GPIOG clock
2078:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOI:       GPIOI clock
2079:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOJ:       GPIOJ clock (STM32F42xxx/43xxx devices) 
2080:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOK:       GPIOK clock (STM32F42xxx/43xxx devices)  
2081:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_CRC:         CRC clock
2082:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_BKPSRAM:     BKPSRAM interface clock
2083:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_CCMDATARAMEN CCM data RAM interface clock
2084:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_DMA1:        DMA1 clock
2085:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_DMA2:        DMA2 clock
2086:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_DMA2D:       DMA2D clock (STM32F429xx/439xx devices)  
2087:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_ETH_MAC:     Ethernet MAC clock
2088:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_ETH_MAC_Tx:  Ethernet Transmission clock
2089:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_ETH_MAC_Rx:  Ethernet Reception clock
2090:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_ETH_MAC_PTP: Ethernet PTP clock
2091:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_OTG_HS:      USB OTG HS clock
2092:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_OTG_HS_ULPI: USB OTG HS ULPI clock
2093:platform/driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
2094:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2095:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
2096:platform/driver/src/stm32f4xx_rcc.c ****   */
2097:platform/driver/src/stm32f4xx_rcc.c **** void RCC_AHB1PeriphClockCmd(uint32_t RCC_AHB1Periph, FunctionalState NewState)
2098:platform/driver/src/stm32f4xx_rcc.c **** {
 1426              		.loc 1 2098 1 is_stmt 1 view -0
 1427              		.cfi_startproc
 1428              		@ args = 0, pretend = 0, frame = 0
 1429              		@ frame_needed = 0, uses_anonymous_args = 0
 1430              		@ link register save eliminated.
2099:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2100:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_AHB1_CLOCK_PERIPH(RCC_AHB1Periph));
 1431              		.loc 1 2100 3 view .LVU381
2101:platform/driver/src/stm32f4xx_rcc.c **** 
2102:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1432              		.loc 1 2102 3 view .LVU382
2103:platform/driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 1433              		.loc 1 2103 3 view .LVU383
 1434              		.loc 1 2103 6 is_stmt 0 view .LVU384
 1435 0000 21B1     		cbz	r1, .L108
2104:platform/driver/src/stm32f4xx_rcc.c ****   {
2105:platform/driver/src/stm32f4xx_rcc.c ****     RCC->AHB1ENR |= RCC_AHB1Periph;
 1436              		.loc 1 2105 5 is_stmt 1 view .LVU385
 1437              		.loc 1 2105 18 is_stmt 0 view .LVU386
 1438 0002 054A     		ldr	r2, .L110
 1439 0004 136B     		ldr	r3, [r2, #48]
 1440 0006 1843     		orrs	r0, r0, r3
 1441              	.LVL114:
 1442              		.loc 1 2105 18 view .LVU387
 1443 0008 1063     		str	r0, [r2, #48]
 1444 000a 7047     		bx	lr
 1445              	.LVL115:
ARM GAS  /tmp/ccOp399b.s 			page 63


 1446              	.L108:
2106:platform/driver/src/stm32f4xx_rcc.c ****   }
2107:platform/driver/src/stm32f4xx_rcc.c ****   else
2108:platform/driver/src/stm32f4xx_rcc.c ****   {
2109:platform/driver/src/stm32f4xx_rcc.c ****     RCC->AHB1ENR &= ~RCC_AHB1Periph;
 1447              		.loc 1 2109 5 is_stmt 1 view .LVU388
 1448              		.loc 1 2109 18 is_stmt 0 view .LVU389
 1449 000c 024A     		ldr	r2, .L110
 1450 000e 136B     		ldr	r3, [r2, #48]
 1451 0010 23EA0000 		bic	r0, r3, r0
 1452              	.LVL116:
 1453              		.loc 1 2109 18 view .LVU390
 1454 0014 1063     		str	r0, [r2, #48]
2110:platform/driver/src/stm32f4xx_rcc.c ****   }
2111:platform/driver/src/stm32f4xx_rcc.c **** }
 1455              		.loc 1 2111 1 view .LVU391
 1456 0016 7047     		bx	lr
 1457              	.L111:
 1458              		.align	2
 1459              	.L110:
 1460 0018 00380240 		.word	1073887232
 1461              		.cfi_endproc
 1462              	.LFE155:
 1464              		.section	.text.RCC_AHB2PeriphClockCmd,"ax",%progbits
 1465              		.align	1
 1466              		.global	RCC_AHB2PeriphClockCmd
 1467              		.syntax unified
 1468              		.thumb
 1469              		.thumb_func
 1471              	RCC_AHB2PeriphClockCmd:
 1472              	.LVL117:
 1473              	.LFB156:
2112:platform/driver/src/stm32f4xx_rcc.c **** 
2113:platform/driver/src/stm32f4xx_rcc.c **** /**
2114:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the AHB2 peripheral clock.
2115:platform/driver/src/stm32f4xx_rcc.c ****   * @note   After reset, the peripheral clock (used for registers read/write access)
2116:platform/driver/src/stm32f4xx_rcc.c ****   *         is disabled and the application software has to enable this clock before 
2117:platform/driver/src/stm32f4xx_rcc.c ****   *         using it. 
2118:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB2 peripheral to gates its clock.
2119:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2120:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_DCMI:   DCMI clock
2121:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_CRYP:   CRYP clock
2122:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_HASH:   HASH clock
2123:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_RNG:    RNG clock
2124:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_OTG_FS: USB OTG FS clock
2125:platform/driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
2126:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2127:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
2128:platform/driver/src/stm32f4xx_rcc.c ****   */
2129:platform/driver/src/stm32f4xx_rcc.c **** void RCC_AHB2PeriphClockCmd(uint32_t RCC_AHB2Periph, FunctionalState NewState)
2130:platform/driver/src/stm32f4xx_rcc.c **** {
 1474              		.loc 1 2130 1 is_stmt 1 view -0
 1475              		.cfi_startproc
 1476              		@ args = 0, pretend = 0, frame = 0
 1477              		@ frame_needed = 0, uses_anonymous_args = 0
 1478              		@ link register save eliminated.
2131:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
ARM GAS  /tmp/ccOp399b.s 			page 64


2132:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_AHB2_PERIPH(RCC_AHB2Periph));
 1479              		.loc 1 2132 3 view .LVU393
2133:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1480              		.loc 1 2133 3 view .LVU394
2134:platform/driver/src/stm32f4xx_rcc.c **** 
2135:platform/driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 1481              		.loc 1 2135 3 view .LVU395
 1482              		.loc 1 2135 6 is_stmt 0 view .LVU396
 1483 0000 21B1     		cbz	r1, .L113
2136:platform/driver/src/stm32f4xx_rcc.c ****   {
2137:platform/driver/src/stm32f4xx_rcc.c ****     RCC->AHB2ENR |= RCC_AHB2Periph;
 1484              		.loc 1 2137 5 is_stmt 1 view .LVU397
 1485              		.loc 1 2137 18 is_stmt 0 view .LVU398
 1486 0002 054A     		ldr	r2, .L115
 1487 0004 536B     		ldr	r3, [r2, #52]
 1488 0006 1843     		orrs	r0, r0, r3
 1489              	.LVL118:
 1490              		.loc 1 2137 18 view .LVU399
 1491 0008 5063     		str	r0, [r2, #52]
 1492 000a 7047     		bx	lr
 1493              	.LVL119:
 1494              	.L113:
2138:platform/driver/src/stm32f4xx_rcc.c ****   }
2139:platform/driver/src/stm32f4xx_rcc.c ****   else
2140:platform/driver/src/stm32f4xx_rcc.c ****   {
2141:platform/driver/src/stm32f4xx_rcc.c ****     RCC->AHB2ENR &= ~RCC_AHB2Periph;
 1495              		.loc 1 2141 5 is_stmt 1 view .LVU400
 1496              		.loc 1 2141 18 is_stmt 0 view .LVU401
 1497 000c 024A     		ldr	r2, .L115
 1498 000e 536B     		ldr	r3, [r2, #52]
 1499 0010 23EA0000 		bic	r0, r3, r0
 1500              	.LVL120:
 1501              		.loc 1 2141 18 view .LVU402
 1502 0014 5063     		str	r0, [r2, #52]
2142:platform/driver/src/stm32f4xx_rcc.c ****   }
2143:platform/driver/src/stm32f4xx_rcc.c **** }
 1503              		.loc 1 2143 1 view .LVU403
 1504 0016 7047     		bx	lr
 1505              	.L116:
 1506              		.align	2
 1507              	.L115:
 1508 0018 00380240 		.word	1073887232
 1509              		.cfi_endproc
 1510              	.LFE156:
 1512              		.section	.text.RCC_AHB3PeriphClockCmd,"ax",%progbits
 1513              		.align	1
 1514              		.global	RCC_AHB3PeriphClockCmd
 1515              		.syntax unified
 1516              		.thumb
 1517              		.thumb_func
 1519              	RCC_AHB3PeriphClockCmd:
 1520              	.LVL121:
 1521              	.LFB157:
2144:platform/driver/src/stm32f4xx_rcc.c **** 
2145:platform/driver/src/stm32f4xx_rcc.c **** #if defined(STM32F40_41xxx) || defined(STM32F412xG) || defined(STM32F413_423xx) || defined(STM32F42
2146:platform/driver/src/stm32f4xx_rcc.c **** /**
2147:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the AHB3 peripheral clock.
ARM GAS  /tmp/ccOp399b.s 			page 65


2148:platform/driver/src/stm32f4xx_rcc.c ****   * @note   After reset, the peripheral clock (used for registers read/write access)
2149:platform/driver/src/stm32f4xx_rcc.c ****   *         is disabled and the application software has to enable this clock before 
2150:platform/driver/src/stm32f4xx_rcc.c ****   *         using it. 
2151:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB3 peripheral to gates its clock.
2152:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter must be: 
2153:platform/driver/src/stm32f4xx_rcc.c ****   *           - RCC_AHB3Periph_FSMC or RCC_AHB3Periph_FMC (STM32F412xG/STM32F413_423xx/STM32F429x/4
2154:platform/driver/src/stm32f4xx_rcc.c ****   *           - RCC_AHB3Periph_QSPI (STM32F412xG/STM32F413_423xx/STM32F446xx/STM32F469_479xx device
2155:platform/driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
2156:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2157:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
2158:platform/driver/src/stm32f4xx_rcc.c ****   */
2159:platform/driver/src/stm32f4xx_rcc.c **** void RCC_AHB3PeriphClockCmd(uint32_t RCC_AHB3Periph, FunctionalState NewState)
2160:platform/driver/src/stm32f4xx_rcc.c **** {
 1522              		.loc 1 2160 1 is_stmt 1 view -0
 1523              		.cfi_startproc
 1524              		@ args = 0, pretend = 0, frame = 0
 1525              		@ frame_needed = 0, uses_anonymous_args = 0
 1526              		@ link register save eliminated.
2161:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2162:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_AHB3_PERIPH(RCC_AHB3Periph));  
 1527              		.loc 1 2162 3 view .LVU405
2163:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1528              		.loc 1 2163 3 view .LVU406
2164:platform/driver/src/stm32f4xx_rcc.c **** 
2165:platform/driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 1529              		.loc 1 2165 3 view .LVU407
 1530              		.loc 1 2165 6 is_stmt 0 view .LVU408
 1531 0000 21B1     		cbz	r1, .L118
2166:platform/driver/src/stm32f4xx_rcc.c ****   {
2167:platform/driver/src/stm32f4xx_rcc.c ****     RCC->AHB3ENR |= RCC_AHB3Periph;
 1532              		.loc 1 2167 5 is_stmt 1 view .LVU409
 1533              		.loc 1 2167 18 is_stmt 0 view .LVU410
 1534 0002 054A     		ldr	r2, .L120
 1535 0004 936B     		ldr	r3, [r2, #56]
 1536 0006 1843     		orrs	r0, r0, r3
 1537              	.LVL122:
 1538              		.loc 1 2167 18 view .LVU411
 1539 0008 9063     		str	r0, [r2, #56]
 1540 000a 7047     		bx	lr
 1541              	.LVL123:
 1542              	.L118:
2168:platform/driver/src/stm32f4xx_rcc.c ****   }
2169:platform/driver/src/stm32f4xx_rcc.c ****   else
2170:platform/driver/src/stm32f4xx_rcc.c ****   {
2171:platform/driver/src/stm32f4xx_rcc.c ****     RCC->AHB3ENR &= ~RCC_AHB3Periph;
 1543              		.loc 1 2171 5 is_stmt 1 view .LVU412
 1544              		.loc 1 2171 18 is_stmt 0 view .LVU413
 1545 000c 024A     		ldr	r2, .L120
 1546 000e 936B     		ldr	r3, [r2, #56]
 1547 0010 23EA0000 		bic	r0, r3, r0
 1548              	.LVL124:
 1549              		.loc 1 2171 18 view .LVU414
 1550 0014 9063     		str	r0, [r2, #56]
2172:platform/driver/src/stm32f4xx_rcc.c ****   }
2173:platform/driver/src/stm32f4xx_rcc.c **** }
 1551              		.loc 1 2173 1 view .LVU415
 1552 0016 7047     		bx	lr
ARM GAS  /tmp/ccOp399b.s 			page 66


 1553              	.L121:
 1554              		.align	2
 1555              	.L120:
 1556 0018 00380240 		.word	1073887232
 1557              		.cfi_endproc
 1558              	.LFE157:
 1560              		.section	.text.RCC_APB1PeriphClockCmd,"ax",%progbits
 1561              		.align	1
 1562              		.global	RCC_APB1PeriphClockCmd
 1563              		.syntax unified
 1564              		.thumb
 1565              		.thumb_func
 1567              	RCC_APB1PeriphClockCmd:
 1568              	.LVL125:
 1569              	.LFB158:
2174:platform/driver/src/stm32f4xx_rcc.c **** #endif /* STM32F40_41xxx || STM32F412xG || STM32F413_423xx || STM32F427_437xx || STM32F429_439xx ||
2175:platform/driver/src/stm32f4xx_rcc.c **** 
2176:platform/driver/src/stm32f4xx_rcc.c **** /**
2177:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the Low Speed APB (APB1) peripheral clock.
2178:platform/driver/src/stm32f4xx_rcc.c ****   * @note   After reset, the peripheral clock (used for registers read/write access)
2179:platform/driver/src/stm32f4xx_rcc.c ****   *         is disabled and the application software has to enable this clock before 
2180:platform/driver/src/stm32f4xx_rcc.c ****   *         using it. 
2181:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to gates its clock.
2182:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2183:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM2:   TIM2 clock
2184:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM3:   TIM3 clock
2185:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM4:   TIM4 clock
2186:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM5:   TIM5 clock
2187:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM6:   TIM6 clock
2188:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM7:   TIM7 clock
2189:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM12:  TIM12 clock
2190:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM13:  TIM13 clock
2191:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM14:  TIM14 clock
2192:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_LPTIM1: LPTIM1 clock (STM32F410xx and STM32F413_423xx devices) 
2193:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_WWDG:   WWDG clock
2194:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_SPI2:   SPI2 clock
2195:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_SPI3:   SPI3 clock
2196:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_SPDIF:  SPDIF RX clock (STM32F446xx devices) 
2197:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_USART2: USART2 clock
2198:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_USART3: USART3 clock
2199:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART4:  UART4 clock
2200:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART5:  UART5 clock
2201:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_I2C1:   I2C1 clock
2202:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_I2C2:   I2C2 clock
2203:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_I2C3:   I2C3 clock
2204:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_FMPI2C1:FMPI2C1 clock
2205:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_CAN1:   CAN1 clock
2206:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_CAN2:   CAN2 clock
2207:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_CEC:    CEC clock (STM32F446xx devices)
2208:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_PWR:    PWR clock
2209:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_DAC:    DAC clock
2210:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART7:  UART7 clock
2211:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART8:  UART8 clock
2212:platform/driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
2213:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2214:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
2215:platform/driver/src/stm32f4xx_rcc.c ****   */
ARM GAS  /tmp/ccOp399b.s 			page 67


2216:platform/driver/src/stm32f4xx_rcc.c **** void RCC_APB1PeriphClockCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
2217:platform/driver/src/stm32f4xx_rcc.c **** {
 1570              		.loc 1 2217 1 is_stmt 1 view -0
 1571              		.cfi_startproc
 1572              		@ args = 0, pretend = 0, frame = 0
 1573              		@ frame_needed = 0, uses_anonymous_args = 0
 1574              		@ link register save eliminated.
2218:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2219:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));  
 1575              		.loc 1 2219 3 view .LVU417
2220:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1576              		.loc 1 2220 3 view .LVU418
2221:platform/driver/src/stm32f4xx_rcc.c **** 
2222:platform/driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 1577              		.loc 1 2222 3 view .LVU419
 1578              		.loc 1 2222 6 is_stmt 0 view .LVU420
 1579 0000 21B1     		cbz	r1, .L123
2223:platform/driver/src/stm32f4xx_rcc.c ****   {
2224:platform/driver/src/stm32f4xx_rcc.c ****     RCC->APB1ENR |= RCC_APB1Periph;
 1580              		.loc 1 2224 5 is_stmt 1 view .LVU421
 1581              		.loc 1 2224 18 is_stmt 0 view .LVU422
 1582 0002 054A     		ldr	r2, .L125
 1583 0004 136C     		ldr	r3, [r2, #64]
 1584 0006 1843     		orrs	r0, r0, r3
 1585              	.LVL126:
 1586              		.loc 1 2224 18 view .LVU423
 1587 0008 1064     		str	r0, [r2, #64]
 1588 000a 7047     		bx	lr
 1589              	.LVL127:
 1590              	.L123:
2225:platform/driver/src/stm32f4xx_rcc.c ****   }
2226:platform/driver/src/stm32f4xx_rcc.c ****   else
2227:platform/driver/src/stm32f4xx_rcc.c ****   {
2228:platform/driver/src/stm32f4xx_rcc.c ****     RCC->APB1ENR &= ~RCC_APB1Periph;
 1591              		.loc 1 2228 5 is_stmt 1 view .LVU424
 1592              		.loc 1 2228 18 is_stmt 0 view .LVU425
 1593 000c 024A     		ldr	r2, .L125
 1594 000e 136C     		ldr	r3, [r2, #64]
 1595 0010 23EA0000 		bic	r0, r3, r0
 1596              	.LVL128:
 1597              		.loc 1 2228 18 view .LVU426
 1598 0014 1064     		str	r0, [r2, #64]
2229:platform/driver/src/stm32f4xx_rcc.c ****   }
2230:platform/driver/src/stm32f4xx_rcc.c **** }
 1599              		.loc 1 2230 1 view .LVU427
 1600 0016 7047     		bx	lr
 1601              	.L126:
 1602              		.align	2
 1603              	.L125:
 1604 0018 00380240 		.word	1073887232
 1605              		.cfi_endproc
 1606              	.LFE158:
 1608              		.section	.text.RCC_APB2PeriphClockCmd,"ax",%progbits
 1609              		.align	1
 1610              		.global	RCC_APB2PeriphClockCmd
 1611              		.syntax unified
 1612              		.thumb
ARM GAS  /tmp/ccOp399b.s 			page 68


 1613              		.thumb_func
 1615              	RCC_APB2PeriphClockCmd:
 1616              	.LVL129:
 1617              	.LFB159:
2231:platform/driver/src/stm32f4xx_rcc.c **** 
2232:platform/driver/src/stm32f4xx_rcc.c **** /**
2233:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the High Speed APB (APB2) peripheral clock.
2234:platform/driver/src/stm32f4xx_rcc.c ****   * @note   After reset, the peripheral clock (used for registers read/write access)
2235:platform/driver/src/stm32f4xx_rcc.c ****   *         is disabled and the application software has to enable this clock before 
2236:platform/driver/src/stm32f4xx_rcc.c ****   *         using it.
2237:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to gates its clock.
2238:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2239:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM1:   TIM1 clock
2240:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM8:   TIM8 clock
2241:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_USART1: USART1 clock
2242:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_USART6: USART6 clock
2243:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_ADC1:   ADC1 clock
2244:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_ADC2:   ADC2 clock
2245:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_ADC3:   ADC3 clock
2246:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SDIO:   SDIO clock
2247:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI1:   SPI1 clock
2248:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI4:   SPI4 clock
2249:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SYSCFG: SYSCFG clock
2250:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_EXTIT:  EXTIIT clock
2251:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM9:   TIM9 clock
2252:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM10:  TIM10 clock
2253:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM11:  TIM11 clock
2254:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI5:   SPI5 clock
2255:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI6:   SPI6 clock
2256:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SAI1:   SAI1 clock (STM32F42xxx/43xxx/446xx/469xx/479xx/413_423x
2257:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SAI2:   SAI2 clock (STM32F446xx devices) 
2258:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_LTDC:   LTDC clock (STM32F429xx/439xx devices)
2259:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_DSI:    DSI clock (STM32F469_479xx devices)
2260:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_DFSDM1: DFSDM Clock (STM32F412xG and STM32F413_423xx Devices)
2261:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_DFSDM2: DFSDM2 Clock (STM32F413_423xx Devices)
2262:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_UART9:  UART9 Clock (STM32F413_423xx Devices)
2263:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_UART10: UART10 Clock (STM32F413_423xx Devices)
2264:platform/driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
2265:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2266:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
2267:platform/driver/src/stm32f4xx_rcc.c ****   */
2268:platform/driver/src/stm32f4xx_rcc.c **** void RCC_APB2PeriphClockCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
2269:platform/driver/src/stm32f4xx_rcc.c **** {
 1618              		.loc 1 2269 1 is_stmt 1 view -0
 1619              		.cfi_startproc
 1620              		@ args = 0, pretend = 0, frame = 0
 1621              		@ frame_needed = 0, uses_anonymous_args = 0
 1622              		@ link register save eliminated.
2270:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2271:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
 1623              		.loc 1 2271 3 view .LVU429
2272:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1624              		.loc 1 2272 3 view .LVU430
2273:platform/driver/src/stm32f4xx_rcc.c **** 
2274:platform/driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 1625              		.loc 1 2274 3 view .LVU431
 1626              		.loc 1 2274 6 is_stmt 0 view .LVU432
ARM GAS  /tmp/ccOp399b.s 			page 69


 1627 0000 21B1     		cbz	r1, .L128
2275:platform/driver/src/stm32f4xx_rcc.c ****   {
2276:platform/driver/src/stm32f4xx_rcc.c ****     RCC->APB2ENR |= RCC_APB2Periph;
 1628              		.loc 1 2276 5 is_stmt 1 view .LVU433
 1629              		.loc 1 2276 18 is_stmt 0 view .LVU434
 1630 0002 054A     		ldr	r2, .L130
 1631 0004 536C     		ldr	r3, [r2, #68]
 1632 0006 1843     		orrs	r0, r0, r3
 1633              	.LVL130:
 1634              		.loc 1 2276 18 view .LVU435
 1635 0008 5064     		str	r0, [r2, #68]
 1636 000a 7047     		bx	lr
 1637              	.LVL131:
 1638              	.L128:
2277:platform/driver/src/stm32f4xx_rcc.c ****   }
2278:platform/driver/src/stm32f4xx_rcc.c ****   else
2279:platform/driver/src/stm32f4xx_rcc.c ****   {
2280:platform/driver/src/stm32f4xx_rcc.c ****     RCC->APB2ENR &= ~RCC_APB2Periph;
 1639              		.loc 1 2280 5 is_stmt 1 view .LVU436
 1640              		.loc 1 2280 18 is_stmt 0 view .LVU437
 1641 000c 024A     		ldr	r2, .L130
 1642 000e 536C     		ldr	r3, [r2, #68]
 1643 0010 23EA0000 		bic	r0, r3, r0
 1644              	.LVL132:
 1645              		.loc 1 2280 18 view .LVU438
 1646 0014 5064     		str	r0, [r2, #68]
2281:platform/driver/src/stm32f4xx_rcc.c ****   }
2282:platform/driver/src/stm32f4xx_rcc.c **** }
 1647              		.loc 1 2282 1 view .LVU439
 1648 0016 7047     		bx	lr
 1649              	.L131:
 1650              		.align	2
 1651              	.L130:
 1652 0018 00380240 		.word	1073887232
 1653              		.cfi_endproc
 1654              	.LFE159:
 1656              		.section	.text.RCC_AHB1PeriphResetCmd,"ax",%progbits
 1657              		.align	1
 1658              		.global	RCC_AHB1PeriphResetCmd
 1659              		.syntax unified
 1660              		.thumb
 1661              		.thumb_func
 1663              	RCC_AHB1PeriphResetCmd:
 1664              	.LVL133:
 1665              	.LFB160:
2283:platform/driver/src/stm32f4xx_rcc.c **** 
2284:platform/driver/src/stm32f4xx_rcc.c **** /**
2285:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Forces or releases AHB1 peripheral reset.
2286:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_AHB1Periph: specifies the AHB1 peripheral to reset.
2287:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2288:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOA:   GPIOA clock
2289:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOB:   GPIOB clock 
2290:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOC:   GPIOC clock
2291:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOD:   GPIOD clock
2292:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOE:   GPIOE clock
2293:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOF:   GPIOF clock
2294:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOG:   GPIOG clock
ARM GAS  /tmp/ccOp399b.s 			page 70


2295:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOG:   GPIOG clock
2296:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOI:   GPIOI clock
2297:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOJ:   GPIOJ clock (STM32F42xxx/43xxx devices) 
2298:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOK:   GPIOK clock (STM32F42xxx/43xxxdevices)   
2299:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_CRC:     CRC clock
2300:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_DMA1:    DMA1 clock
2301:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_DMA2:    DMA2 clock
2302:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_DMA2D:   DMA2D clock (STM32F429xx/439xx devices)   
2303:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_ETH_MAC: Ethernet MAC clock
2304:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_OTG_HS:  USB OTG HS clock
2305:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_RNG:     RNG clock for STM32F410xx devices   
2306:platform/driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
2307:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2308:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
2309:platform/driver/src/stm32f4xx_rcc.c ****   */
2310:platform/driver/src/stm32f4xx_rcc.c **** void RCC_AHB1PeriphResetCmd(uint32_t RCC_AHB1Periph, FunctionalState NewState)
2311:platform/driver/src/stm32f4xx_rcc.c **** {
 1666              		.loc 1 2311 1 is_stmt 1 view -0
 1667              		.cfi_startproc
 1668              		@ args = 0, pretend = 0, frame = 0
 1669              		@ frame_needed = 0, uses_anonymous_args = 0
 1670              		@ link register save eliminated.
2312:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2313:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_AHB1_RESET_PERIPH(RCC_AHB1Periph));
 1671              		.loc 1 2313 3 view .LVU441
2314:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1672              		.loc 1 2314 3 view .LVU442
2315:platform/driver/src/stm32f4xx_rcc.c **** 
2316:platform/driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 1673              		.loc 1 2316 3 view .LVU443
 1674              		.loc 1 2316 6 is_stmt 0 view .LVU444
 1675 0000 21B1     		cbz	r1, .L133
2317:platform/driver/src/stm32f4xx_rcc.c ****   {
2318:platform/driver/src/stm32f4xx_rcc.c ****     RCC->AHB1RSTR |= RCC_AHB1Periph;
 1676              		.loc 1 2318 5 is_stmt 1 view .LVU445
 1677              		.loc 1 2318 19 is_stmt 0 view .LVU446
 1678 0002 054A     		ldr	r2, .L135
 1679 0004 1369     		ldr	r3, [r2, #16]
 1680 0006 1843     		orrs	r0, r0, r3
 1681              	.LVL134:
 1682              		.loc 1 2318 19 view .LVU447
 1683 0008 1061     		str	r0, [r2, #16]
 1684 000a 7047     		bx	lr
 1685              	.LVL135:
 1686              	.L133:
2319:platform/driver/src/stm32f4xx_rcc.c ****   }
2320:platform/driver/src/stm32f4xx_rcc.c ****   else
2321:platform/driver/src/stm32f4xx_rcc.c ****   {
2322:platform/driver/src/stm32f4xx_rcc.c ****     RCC->AHB1RSTR &= ~RCC_AHB1Periph;
 1687              		.loc 1 2322 5 is_stmt 1 view .LVU448
 1688              		.loc 1 2322 19 is_stmt 0 view .LVU449
 1689 000c 024A     		ldr	r2, .L135
 1690 000e 1369     		ldr	r3, [r2, #16]
 1691 0010 23EA0000 		bic	r0, r3, r0
 1692              	.LVL136:
 1693              		.loc 1 2322 19 view .LVU450
 1694 0014 1061     		str	r0, [r2, #16]
ARM GAS  /tmp/ccOp399b.s 			page 71


2323:platform/driver/src/stm32f4xx_rcc.c ****   }
2324:platform/driver/src/stm32f4xx_rcc.c **** }
 1695              		.loc 1 2324 1 view .LVU451
 1696 0016 7047     		bx	lr
 1697              	.L136:
 1698              		.align	2
 1699              	.L135:
 1700 0018 00380240 		.word	1073887232
 1701              		.cfi_endproc
 1702              	.LFE160:
 1704              		.section	.text.RCC_AHB2PeriphResetCmd,"ax",%progbits
 1705              		.align	1
 1706              		.global	RCC_AHB2PeriphResetCmd
 1707              		.syntax unified
 1708              		.thumb
 1709              		.thumb_func
 1711              	RCC_AHB2PeriphResetCmd:
 1712              	.LVL137:
 1713              	.LFB161:
2325:platform/driver/src/stm32f4xx_rcc.c **** 
2326:platform/driver/src/stm32f4xx_rcc.c **** /**
2327:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Forces or releases AHB2 peripheral reset.
2328:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_AHB2Periph: specifies the AHB2 peripheral to reset.
2329:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2330:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_DCMI:   DCMI clock
2331:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_CRYP:   CRYP clock
2332:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_HASH:   HASH clock
2333:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_RNG:    RNG clock for STM32F40_41xxx/STM32F412xG/STM32F413_423xx
2334:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_OTG_FS: USB OTG FS clock
2335:platform/driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
2336:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2337:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
2338:platform/driver/src/stm32f4xx_rcc.c ****   */
2339:platform/driver/src/stm32f4xx_rcc.c **** void RCC_AHB2PeriphResetCmd(uint32_t RCC_AHB2Periph, FunctionalState NewState)
2340:platform/driver/src/stm32f4xx_rcc.c **** {
 1714              		.loc 1 2340 1 is_stmt 1 view -0
 1715              		.cfi_startproc
 1716              		@ args = 0, pretend = 0, frame = 0
 1717              		@ frame_needed = 0, uses_anonymous_args = 0
 1718              		@ link register save eliminated.
2341:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2342:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_AHB2_PERIPH(RCC_AHB2Periph));
 1719              		.loc 1 2342 3 view .LVU453
2343:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1720              		.loc 1 2343 3 view .LVU454
2344:platform/driver/src/stm32f4xx_rcc.c **** 
2345:platform/driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 1721              		.loc 1 2345 3 view .LVU455
 1722              		.loc 1 2345 6 is_stmt 0 view .LVU456
 1723 0000 21B1     		cbz	r1, .L138
2346:platform/driver/src/stm32f4xx_rcc.c ****   {
2347:platform/driver/src/stm32f4xx_rcc.c ****     RCC->AHB2RSTR |= RCC_AHB2Periph;
 1724              		.loc 1 2347 5 is_stmt 1 view .LVU457
 1725              		.loc 1 2347 19 is_stmt 0 view .LVU458
 1726 0002 054A     		ldr	r2, .L140
 1727 0004 5369     		ldr	r3, [r2, #20]
 1728 0006 1843     		orrs	r0, r0, r3
ARM GAS  /tmp/ccOp399b.s 			page 72


 1729              	.LVL138:
 1730              		.loc 1 2347 19 view .LVU459
 1731 0008 5061     		str	r0, [r2, #20]
 1732 000a 7047     		bx	lr
 1733              	.LVL139:
 1734              	.L138:
2348:platform/driver/src/stm32f4xx_rcc.c ****   }
2349:platform/driver/src/stm32f4xx_rcc.c ****   else
2350:platform/driver/src/stm32f4xx_rcc.c ****   {
2351:platform/driver/src/stm32f4xx_rcc.c ****     RCC->AHB2RSTR &= ~RCC_AHB2Periph;
 1735              		.loc 1 2351 5 is_stmt 1 view .LVU460
 1736              		.loc 1 2351 19 is_stmt 0 view .LVU461
 1737 000c 024A     		ldr	r2, .L140
 1738 000e 5369     		ldr	r3, [r2, #20]
 1739 0010 23EA0000 		bic	r0, r3, r0
 1740              	.LVL140:
 1741              		.loc 1 2351 19 view .LVU462
 1742 0014 5061     		str	r0, [r2, #20]
2352:platform/driver/src/stm32f4xx_rcc.c ****   }
2353:platform/driver/src/stm32f4xx_rcc.c **** }
 1743              		.loc 1 2353 1 view .LVU463
 1744 0016 7047     		bx	lr
 1745              	.L141:
 1746              		.align	2
 1747              	.L140:
 1748 0018 00380240 		.word	1073887232
 1749              		.cfi_endproc
 1750              	.LFE161:
 1752              		.section	.text.RCC_AHB3PeriphResetCmd,"ax",%progbits
 1753              		.align	1
 1754              		.global	RCC_AHB3PeriphResetCmd
 1755              		.syntax unified
 1756              		.thumb
 1757              		.thumb_func
 1759              	RCC_AHB3PeriphResetCmd:
 1760              	.LVL141:
 1761              	.LFB162:
2354:platform/driver/src/stm32f4xx_rcc.c **** 
2355:platform/driver/src/stm32f4xx_rcc.c **** #if defined(STM32F40_41xxx) || defined(STM32F412xG) || defined(STM32F413_423xx) || defined(STM32F42
2356:platform/driver/src/stm32f4xx_rcc.c **** /**
2357:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Forces or releases AHB3 peripheral reset.
2358:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_AHB3Periph: specifies the AHB3 peripheral to reset.
2359:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter must be: 
2360:platform/driver/src/stm32f4xx_rcc.c ****   *           - RCC_AHB3Periph_FSMC or RCC_AHB3Periph_FMC (STM32F412xG, STM32F413_423xx and STM32F4
2361:platform/driver/src/stm32f4xx_rcc.c ****   *           - RCC_AHB3Periph_QSPI (STM32F412xG/STM32F446xx/STM32F469_479xx devices)
2362:platform/driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
2363:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2364:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
2365:platform/driver/src/stm32f4xx_rcc.c ****   */
2366:platform/driver/src/stm32f4xx_rcc.c **** void RCC_AHB3PeriphResetCmd(uint32_t RCC_AHB3Periph, FunctionalState NewState)
2367:platform/driver/src/stm32f4xx_rcc.c **** {
 1762              		.loc 1 2367 1 is_stmt 1 view -0
 1763              		.cfi_startproc
 1764              		@ args = 0, pretend = 0, frame = 0
 1765              		@ frame_needed = 0, uses_anonymous_args = 0
 1766              		@ link register save eliminated.
2368:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
ARM GAS  /tmp/ccOp399b.s 			page 73


2369:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_AHB3_PERIPH(RCC_AHB3Periph));
 1767              		.loc 1 2369 3 view .LVU465
2370:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1768              		.loc 1 2370 3 view .LVU466
2371:platform/driver/src/stm32f4xx_rcc.c **** 
2372:platform/driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 1769              		.loc 1 2372 3 view .LVU467
 1770              		.loc 1 2372 6 is_stmt 0 view .LVU468
 1771 0000 21B1     		cbz	r1, .L143
2373:platform/driver/src/stm32f4xx_rcc.c ****   {
2374:platform/driver/src/stm32f4xx_rcc.c ****     RCC->AHB3RSTR |= RCC_AHB3Periph;
 1772              		.loc 1 2374 5 is_stmt 1 view .LVU469
 1773              		.loc 1 2374 19 is_stmt 0 view .LVU470
 1774 0002 054A     		ldr	r2, .L145
 1775 0004 9369     		ldr	r3, [r2, #24]
 1776 0006 1843     		orrs	r0, r0, r3
 1777              	.LVL142:
 1778              		.loc 1 2374 19 view .LVU471
 1779 0008 9061     		str	r0, [r2, #24]
 1780 000a 7047     		bx	lr
 1781              	.LVL143:
 1782              	.L143:
2375:platform/driver/src/stm32f4xx_rcc.c ****   }
2376:platform/driver/src/stm32f4xx_rcc.c ****   else
2377:platform/driver/src/stm32f4xx_rcc.c ****   {
2378:platform/driver/src/stm32f4xx_rcc.c ****     RCC->AHB3RSTR &= ~RCC_AHB3Periph;
 1783              		.loc 1 2378 5 is_stmt 1 view .LVU472
 1784              		.loc 1 2378 19 is_stmt 0 view .LVU473
 1785 000c 024A     		ldr	r2, .L145
 1786 000e 9369     		ldr	r3, [r2, #24]
 1787 0010 23EA0000 		bic	r0, r3, r0
 1788              	.LVL144:
 1789              		.loc 1 2378 19 view .LVU474
 1790 0014 9061     		str	r0, [r2, #24]
2379:platform/driver/src/stm32f4xx_rcc.c ****   }
2380:platform/driver/src/stm32f4xx_rcc.c **** }
 1791              		.loc 1 2380 1 view .LVU475
 1792 0016 7047     		bx	lr
 1793              	.L146:
 1794              		.align	2
 1795              	.L145:
 1796 0018 00380240 		.word	1073887232
 1797              		.cfi_endproc
 1798              	.LFE162:
 1800              		.section	.text.RCC_APB1PeriphResetCmd,"ax",%progbits
 1801              		.align	1
 1802              		.global	RCC_APB1PeriphResetCmd
 1803              		.syntax unified
 1804              		.thumb
 1805              		.thumb_func
 1807              	RCC_APB1PeriphResetCmd:
 1808              	.LVL145:
 1809              	.LFB163:
2381:platform/driver/src/stm32f4xx_rcc.c **** #endif /* STM32F40_41xxx || STM32F412xG || STM32F413_423xx || STM32F427_437xx || STM32F429_439xx ||
2382:platform/driver/src/stm32f4xx_rcc.c **** 
2383:platform/driver/src/stm32f4xx_rcc.c **** /**
2384:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Forces or releases Low Speed APB (APB1) peripheral reset.
ARM GAS  /tmp/ccOp399b.s 			page 74


2385:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to reset.
2386:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2387:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM2:   TIM2 clock
2388:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM3:   TIM3 clock
2389:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM4:   TIM4 clock
2390:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM5:   TIM5 clock
2391:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM6:   TIM6 clock
2392:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM7:   TIM7 clock
2393:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM12:  TIM12 clock
2394:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM13:  TIM13 clock
2395:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM14:  TIM14 clock
2396:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_LPTIM1: LPTIM1 clock (STM32F410xx and STM32F413_423xx devices) 
2397:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_WWDG:   WWDG clock
2398:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_SPI2:   SPI2 clock
2399:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_SPI3:   SPI3 clock
2400:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_SPDIF:  SPDIF RX clock (STM32F446xx devices) 
2401:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_USART2: USART2 clock
2402:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_USART3: USART3 clock
2403:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART4:  UART4 clock
2404:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART5:  UART5 clock
2405:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_I2C1:   I2C1 clock
2406:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_I2C2:   I2C2 clock
2407:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_I2C3:   I2C3 clock
2408:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_FMPI2C1:FMPI2C1 clock
2409:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_CAN1:   CAN1 clock
2410:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_CAN2:   CAN2 clock
2411:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_CEC:    CEC clock(STM32F446xx devices)
2412:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_PWR:    PWR clock
2413:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_DAC:    DAC clock
2414:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART7:  UART7 clock
2415:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART8:  UART8 clock  
2416:platform/driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
2417:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2418:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
2419:platform/driver/src/stm32f4xx_rcc.c ****   */
2420:platform/driver/src/stm32f4xx_rcc.c **** void RCC_APB1PeriphResetCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
2421:platform/driver/src/stm32f4xx_rcc.c **** {
 1810              		.loc 1 2421 1 is_stmt 1 view -0
 1811              		.cfi_startproc
 1812              		@ args = 0, pretend = 0, frame = 0
 1813              		@ frame_needed = 0, uses_anonymous_args = 0
 1814              		@ link register save eliminated.
2422:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2423:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
 1815              		.loc 1 2423 3 view .LVU477
2424:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1816              		.loc 1 2424 3 view .LVU478
2425:platform/driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 1817              		.loc 1 2425 3 view .LVU479
 1818              		.loc 1 2425 6 is_stmt 0 view .LVU480
 1819 0000 21B1     		cbz	r1, .L148
2426:platform/driver/src/stm32f4xx_rcc.c ****   {
2427:platform/driver/src/stm32f4xx_rcc.c ****     RCC->APB1RSTR |= RCC_APB1Periph;
 1820              		.loc 1 2427 5 is_stmt 1 view .LVU481
 1821              		.loc 1 2427 19 is_stmt 0 view .LVU482
 1822 0002 054A     		ldr	r2, .L150
 1823 0004 136A     		ldr	r3, [r2, #32]
ARM GAS  /tmp/ccOp399b.s 			page 75


 1824 0006 1843     		orrs	r0, r0, r3
 1825              	.LVL146:
 1826              		.loc 1 2427 19 view .LVU483
 1827 0008 1062     		str	r0, [r2, #32]
 1828 000a 7047     		bx	lr
 1829              	.LVL147:
 1830              	.L148:
2428:platform/driver/src/stm32f4xx_rcc.c ****   }
2429:platform/driver/src/stm32f4xx_rcc.c ****   else
2430:platform/driver/src/stm32f4xx_rcc.c ****   {
2431:platform/driver/src/stm32f4xx_rcc.c ****     RCC->APB1RSTR &= ~RCC_APB1Periph;
 1831              		.loc 1 2431 5 is_stmt 1 view .LVU484
 1832              		.loc 1 2431 19 is_stmt 0 view .LVU485
 1833 000c 024A     		ldr	r2, .L150
 1834 000e 136A     		ldr	r3, [r2, #32]
 1835 0010 23EA0000 		bic	r0, r3, r0
 1836              	.LVL148:
 1837              		.loc 1 2431 19 view .LVU486
 1838 0014 1062     		str	r0, [r2, #32]
2432:platform/driver/src/stm32f4xx_rcc.c ****   }
2433:platform/driver/src/stm32f4xx_rcc.c **** }
 1839              		.loc 1 2433 1 view .LVU487
 1840 0016 7047     		bx	lr
 1841              	.L151:
 1842              		.align	2
 1843              	.L150:
 1844 0018 00380240 		.word	1073887232
 1845              		.cfi_endproc
 1846              	.LFE163:
 1848              		.section	.text.RCC_APB2PeriphResetCmd,"ax",%progbits
 1849              		.align	1
 1850              		.global	RCC_APB2PeriphResetCmd
 1851              		.syntax unified
 1852              		.thumb
 1853              		.thumb_func
 1855              	RCC_APB2PeriphResetCmd:
 1856              	.LVL149:
 1857              	.LFB164:
2434:platform/driver/src/stm32f4xx_rcc.c **** 
2435:platform/driver/src/stm32f4xx_rcc.c **** /**
2436:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Forces or releases High Speed APB (APB2) peripheral reset.
2437:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to reset.
2438:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2439:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM1:   TIM1 clock
2440:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM8:   TIM8 clock
2441:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_USART1: USART1 clock
2442:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_USART6: USART6 clock
2443:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_ADC1:   ADC1 clock
2444:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_ADC2:   ADC2 clock
2445:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_ADC3:   ADC3 clock
2446:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SDIO:   SDIO clock
2447:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI1:   SPI1 clock
2448:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI4:   SPI4 clock  
2449:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SYSCFG: SYSCFG clock
2450:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM9:   TIM9 clock
2451:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM10:  TIM10 clock
2452:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM11:  TIM11 clock
ARM GAS  /tmp/ccOp399b.s 			page 76


2453:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI5:   SPI5 clock
2454:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI6:   SPI6 clock
2455:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SAI1:   SAI1 clock (STM32F42xxx/43xxx/446xx/469xx/479xx/413_423x
2456:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SAI2:   SAI2 clock (STM32F446xx devices) 
2457:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_LTDC:   LTDC clock (STM32F429xx/439xx devices)
2458:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_DSI:    DSI clock (STM32F469_479xx devices)
2459:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_DFSDM1: DFSDM Clock (STM32F412xG and STM32F413_423xx Devices)
2460:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_DFSDM2: DFSDM2 Clock (STM32F413_423xx Devices)
2461:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_UART9:  UART9 Clock (STM32F413_423xx Devices)
2462:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_UART10: UART10 Clock (STM32F413_423xx Devices)
2463:platform/driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
2464:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2465:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
2466:platform/driver/src/stm32f4xx_rcc.c ****   */
2467:platform/driver/src/stm32f4xx_rcc.c **** void RCC_APB2PeriphResetCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
2468:platform/driver/src/stm32f4xx_rcc.c **** {
 1858              		.loc 1 2468 1 is_stmt 1 view -0
 1859              		.cfi_startproc
 1860              		@ args = 0, pretend = 0, frame = 0
 1861              		@ frame_needed = 0, uses_anonymous_args = 0
 1862              		@ link register save eliminated.
2469:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2470:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_APB2_RESET_PERIPH(RCC_APB2Periph));
 1863              		.loc 1 2470 3 view .LVU489
2471:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1864              		.loc 1 2471 3 view .LVU490
2472:platform/driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 1865              		.loc 1 2472 3 view .LVU491
 1866              		.loc 1 2472 6 is_stmt 0 view .LVU492
 1867 0000 21B1     		cbz	r1, .L153
2473:platform/driver/src/stm32f4xx_rcc.c ****   {
2474:platform/driver/src/stm32f4xx_rcc.c ****     RCC->APB2RSTR |= RCC_APB2Periph;
 1868              		.loc 1 2474 5 is_stmt 1 view .LVU493
 1869              		.loc 1 2474 19 is_stmt 0 view .LVU494
 1870 0002 054A     		ldr	r2, .L155
 1871 0004 536A     		ldr	r3, [r2, #36]
 1872 0006 1843     		orrs	r0, r0, r3
 1873              	.LVL150:
 1874              		.loc 1 2474 19 view .LVU495
 1875 0008 5062     		str	r0, [r2, #36]
 1876 000a 7047     		bx	lr
 1877              	.LVL151:
 1878              	.L153:
2475:platform/driver/src/stm32f4xx_rcc.c ****   }
2476:platform/driver/src/stm32f4xx_rcc.c ****   else
2477:platform/driver/src/stm32f4xx_rcc.c ****   {
2478:platform/driver/src/stm32f4xx_rcc.c ****     RCC->APB2RSTR &= ~RCC_APB2Periph;
 1879              		.loc 1 2478 5 is_stmt 1 view .LVU496
 1880              		.loc 1 2478 19 is_stmt 0 view .LVU497
 1881 000c 024A     		ldr	r2, .L155
 1882 000e 536A     		ldr	r3, [r2, #36]
 1883 0010 23EA0000 		bic	r0, r3, r0
 1884              	.LVL152:
 1885              		.loc 1 2478 19 view .LVU498
 1886 0014 5062     		str	r0, [r2, #36]
2479:platform/driver/src/stm32f4xx_rcc.c ****   }
2480:platform/driver/src/stm32f4xx_rcc.c **** }
ARM GAS  /tmp/ccOp399b.s 			page 77


 1887              		.loc 1 2480 1 view .LVU499
 1888 0016 7047     		bx	lr
 1889              	.L156:
 1890              		.align	2
 1891              	.L155:
 1892 0018 00380240 		.word	1073887232
 1893              		.cfi_endproc
 1894              	.LFE164:
 1896              		.section	.text.RCC_AHB1PeriphClockLPModeCmd,"ax",%progbits
 1897              		.align	1
 1898              		.global	RCC_AHB1PeriphClockLPModeCmd
 1899              		.syntax unified
 1900              		.thumb
 1901              		.thumb_func
 1903              	RCC_AHB1PeriphClockLPModeCmd:
 1904              	.LVL153:
 1905              	.LFB165:
2481:platform/driver/src/stm32f4xx_rcc.c **** 
2482:platform/driver/src/stm32f4xx_rcc.c **** /**
2483:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the AHB1 peripheral clock during Low Power (Sleep) mode.
2484:platform/driver/src/stm32f4xx_rcc.c ****   * @note   Peripheral clock gating in SLEEP mode can be used to further reduce
2485:platform/driver/src/stm32f4xx_rcc.c ****   *         power consumption.
2486:platform/driver/src/stm32f4xx_rcc.c ****   * @note   After wakeup from SLEEP mode, the peripheral clock is enabled again.
2487:platform/driver/src/stm32f4xx_rcc.c ****   * @note   By default, all peripheral clocks are enabled during SLEEP mode.
2488:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB1 peripheral to gates its clock.
2489:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2490:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOA:       GPIOA clock
2491:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOB:       GPIOB clock 
2492:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOC:       GPIOC clock
2493:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOD:       GPIOD clock
2494:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOE:       GPIOE clock
2495:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOF:       GPIOF clock
2496:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOG:       GPIOG clock
2497:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOG:       GPIOG clock
2498:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOI:       GPIOI clock
2499:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOJ:       GPIOJ clock (STM32F42xxx/43xxx devices) 
2500:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOK:       GPIOK clock (STM32F42xxx/43xxx devices)   
2501:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_CRC:         CRC clock
2502:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_BKPSRAM:     BKPSRAM interface clock
2503:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_DMA1:        DMA1 clock
2504:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_DMA2:        DMA2 clock
2505:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_DMA2D:       DMA2D clock (STM32F429xx/439xx devices) 
2506:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_ETH_MAC:     Ethernet MAC clock
2507:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_ETH_MAC_Tx:  Ethernet Transmission clock
2508:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_ETH_MAC_Rx:  Ethernet Reception clock
2509:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_ETH_MAC_PTP: Ethernet PTP clock
2510:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_OTG_HS:      USB OTG HS clock
2511:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_OTG_HS_ULPI: USB OTG HS ULPI clock
2512:platform/driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
2513:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2514:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
2515:platform/driver/src/stm32f4xx_rcc.c ****   */
2516:platform/driver/src/stm32f4xx_rcc.c **** void RCC_AHB1PeriphClockLPModeCmd(uint32_t RCC_AHB1Periph, FunctionalState NewState)
2517:platform/driver/src/stm32f4xx_rcc.c **** {
 1906              		.loc 1 2517 1 is_stmt 1 view -0
 1907              		.cfi_startproc
 1908              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccOp399b.s 			page 78


 1909              		@ frame_needed = 0, uses_anonymous_args = 0
 1910              		@ link register save eliminated.
2518:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2519:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_AHB1_LPMODE_PERIPH(RCC_AHB1Periph));
 1911              		.loc 1 2519 3 view .LVU501
2520:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1912              		.loc 1 2520 3 view .LVU502
2521:platform/driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 1913              		.loc 1 2521 3 view .LVU503
 1914              		.loc 1 2521 6 is_stmt 0 view .LVU504
 1915 0000 21B1     		cbz	r1, .L158
2522:platform/driver/src/stm32f4xx_rcc.c ****   {
2523:platform/driver/src/stm32f4xx_rcc.c ****     RCC->AHB1LPENR |= RCC_AHB1Periph;
 1916              		.loc 1 2523 5 is_stmt 1 view .LVU505
 1917              		.loc 1 2523 20 is_stmt 0 view .LVU506
 1918 0002 054A     		ldr	r2, .L160
 1919 0004 136D     		ldr	r3, [r2, #80]
 1920 0006 1843     		orrs	r0, r0, r3
 1921              	.LVL154:
 1922              		.loc 1 2523 20 view .LVU507
 1923 0008 1065     		str	r0, [r2, #80]
 1924 000a 7047     		bx	lr
 1925              	.LVL155:
 1926              	.L158:
2524:platform/driver/src/stm32f4xx_rcc.c ****   }
2525:platform/driver/src/stm32f4xx_rcc.c ****   else
2526:platform/driver/src/stm32f4xx_rcc.c ****   {
2527:platform/driver/src/stm32f4xx_rcc.c ****     RCC->AHB1LPENR &= ~RCC_AHB1Periph;
 1927              		.loc 1 2527 5 is_stmt 1 view .LVU508
 1928              		.loc 1 2527 20 is_stmt 0 view .LVU509
 1929 000c 024A     		ldr	r2, .L160
 1930 000e 136D     		ldr	r3, [r2, #80]
 1931 0010 23EA0000 		bic	r0, r3, r0
 1932              	.LVL156:
 1933              		.loc 1 2527 20 view .LVU510
 1934 0014 1065     		str	r0, [r2, #80]
2528:platform/driver/src/stm32f4xx_rcc.c ****   }
2529:platform/driver/src/stm32f4xx_rcc.c **** }
 1935              		.loc 1 2529 1 view .LVU511
 1936 0016 7047     		bx	lr
 1937              	.L161:
 1938              		.align	2
 1939              	.L160:
 1940 0018 00380240 		.word	1073887232
 1941              		.cfi_endproc
 1942              	.LFE165:
 1944              		.section	.text.RCC_AHB2PeriphClockLPModeCmd,"ax",%progbits
 1945              		.align	1
 1946              		.global	RCC_AHB2PeriphClockLPModeCmd
 1947              		.syntax unified
 1948              		.thumb
 1949              		.thumb_func
 1951              	RCC_AHB2PeriphClockLPModeCmd:
 1952              	.LVL157:
 1953              	.LFB166:
2530:platform/driver/src/stm32f4xx_rcc.c **** 
2531:platform/driver/src/stm32f4xx_rcc.c **** /**
ARM GAS  /tmp/ccOp399b.s 			page 79


2532:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the AHB2 peripheral clock during Low Power (Sleep) mode.
2533:platform/driver/src/stm32f4xx_rcc.c ****   * @note   Peripheral clock gating in SLEEP mode can be used to further reduce
2534:platform/driver/src/stm32f4xx_rcc.c ****   *           power consumption.
2535:platform/driver/src/stm32f4xx_rcc.c ****   * @note   After wakeup from SLEEP mode, the peripheral clock is enabled again.
2536:platform/driver/src/stm32f4xx_rcc.c ****   * @note   By default, all peripheral clocks are enabled during SLEEP mode.
2537:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB2 peripheral to gates its clock.
2538:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2539:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_DCMI:   DCMI clock
2540:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_CRYP:   CRYP clock
2541:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_HASH:   HASH clock
2542:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_RNG:    RNG clock
2543:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_OTG_FS: USB OTG FS clock  
2544:platform/driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
2545:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2546:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
2547:platform/driver/src/stm32f4xx_rcc.c ****   */
2548:platform/driver/src/stm32f4xx_rcc.c **** void RCC_AHB2PeriphClockLPModeCmd(uint32_t RCC_AHB2Periph, FunctionalState NewState)
2549:platform/driver/src/stm32f4xx_rcc.c **** {
 1954              		.loc 1 2549 1 is_stmt 1 view -0
 1955              		.cfi_startproc
 1956              		@ args = 0, pretend = 0, frame = 0
 1957              		@ frame_needed = 0, uses_anonymous_args = 0
 1958              		@ link register save eliminated.
2550:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2551:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_AHB2_PERIPH(RCC_AHB2Periph));
 1959              		.loc 1 2551 3 view .LVU513
2552:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1960              		.loc 1 2552 3 view .LVU514
2553:platform/driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 1961              		.loc 1 2553 3 view .LVU515
 1962              		.loc 1 2553 6 is_stmt 0 view .LVU516
 1963 0000 21B1     		cbz	r1, .L163
2554:platform/driver/src/stm32f4xx_rcc.c ****   {
2555:platform/driver/src/stm32f4xx_rcc.c ****     RCC->AHB2LPENR |= RCC_AHB2Periph;
 1964              		.loc 1 2555 5 is_stmt 1 view .LVU517
 1965              		.loc 1 2555 20 is_stmt 0 view .LVU518
 1966 0002 054A     		ldr	r2, .L165
 1967 0004 536D     		ldr	r3, [r2, #84]
 1968 0006 1843     		orrs	r0, r0, r3
 1969              	.LVL158:
 1970              		.loc 1 2555 20 view .LVU519
 1971 0008 5065     		str	r0, [r2, #84]
 1972 000a 7047     		bx	lr
 1973              	.LVL159:
 1974              	.L163:
2556:platform/driver/src/stm32f4xx_rcc.c ****   }
2557:platform/driver/src/stm32f4xx_rcc.c ****   else
2558:platform/driver/src/stm32f4xx_rcc.c ****   {
2559:platform/driver/src/stm32f4xx_rcc.c ****     RCC->AHB2LPENR &= ~RCC_AHB2Periph;
 1975              		.loc 1 2559 5 is_stmt 1 view .LVU520
 1976              		.loc 1 2559 20 is_stmt 0 view .LVU521
 1977 000c 024A     		ldr	r2, .L165
 1978 000e 536D     		ldr	r3, [r2, #84]
 1979 0010 23EA0000 		bic	r0, r3, r0
 1980              	.LVL160:
 1981              		.loc 1 2559 20 view .LVU522
 1982 0014 5065     		str	r0, [r2, #84]
ARM GAS  /tmp/ccOp399b.s 			page 80


2560:platform/driver/src/stm32f4xx_rcc.c ****   }
2561:platform/driver/src/stm32f4xx_rcc.c **** }
 1983              		.loc 1 2561 1 view .LVU523
 1984 0016 7047     		bx	lr
 1985              	.L166:
 1986              		.align	2
 1987              	.L165:
 1988 0018 00380240 		.word	1073887232
 1989              		.cfi_endproc
 1990              	.LFE166:
 1992              		.section	.text.RCC_AHB3PeriphClockLPModeCmd,"ax",%progbits
 1993              		.align	1
 1994              		.global	RCC_AHB3PeriphClockLPModeCmd
 1995              		.syntax unified
 1996              		.thumb
 1997              		.thumb_func
 1999              	RCC_AHB3PeriphClockLPModeCmd:
 2000              	.LVL161:
 2001              	.LFB167:
2562:platform/driver/src/stm32f4xx_rcc.c **** 
2563:platform/driver/src/stm32f4xx_rcc.c **** #if defined(STM32F40_41xxx) || defined(STM32F412xG) || defined(STM32F413_423xx) || defined(STM32F42
2564:platform/driver/src/stm32f4xx_rcc.c **** /**
2565:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the AHB3 peripheral clock during Low Power (Sleep) mode.
2566:platform/driver/src/stm32f4xx_rcc.c ****   * @note   Peripheral clock gating in SLEEP mode can be used to further reduce
2567:platform/driver/src/stm32f4xx_rcc.c ****   *         power consumption.
2568:platform/driver/src/stm32f4xx_rcc.c ****   * @note   After wakeup from SLEEP mode, the peripheral clock is enabled again.
2569:platform/driver/src/stm32f4xx_rcc.c ****   * @note   By default, all peripheral clocks are enabled during SLEEP mode.
2570:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB3 peripheral to gates its clock.
2571:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter must be: 
2572:platform/driver/src/stm32f4xx_rcc.c ****   *           - RCC_AHB3Periph_FSMC or RCC_AHB3Periph_FMC (STM32F412xG/STM32F413_423xx/STM32F429x/4
2573:platform/driver/src/stm32f4xx_rcc.c ****   *           - RCC_AHB3Periph_QSPI (STM32F412xG/STM32F413_423xx/STM32F446xx/STM32F469_479xx device
2574:platform/driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
2575:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2576:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
2577:platform/driver/src/stm32f4xx_rcc.c ****   */
2578:platform/driver/src/stm32f4xx_rcc.c **** void RCC_AHB3PeriphClockLPModeCmd(uint32_t RCC_AHB3Periph, FunctionalState NewState)
2579:platform/driver/src/stm32f4xx_rcc.c **** {
 2002              		.loc 1 2579 1 is_stmt 1 view -0
 2003              		.cfi_startproc
 2004              		@ args = 0, pretend = 0, frame = 0
 2005              		@ frame_needed = 0, uses_anonymous_args = 0
 2006              		@ link register save eliminated.
2580:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2581:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_AHB3_PERIPH(RCC_AHB3Periph));
 2007              		.loc 1 2581 3 view .LVU525
2582:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2008              		.loc 1 2582 3 view .LVU526
2583:platform/driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 2009              		.loc 1 2583 3 view .LVU527
 2010              		.loc 1 2583 6 is_stmt 0 view .LVU528
 2011 0000 21B1     		cbz	r1, .L168
2584:platform/driver/src/stm32f4xx_rcc.c ****   {
2585:platform/driver/src/stm32f4xx_rcc.c ****     RCC->AHB3LPENR |= RCC_AHB3Periph;
 2012              		.loc 1 2585 5 is_stmt 1 view .LVU529
 2013              		.loc 1 2585 20 is_stmt 0 view .LVU530
 2014 0002 054A     		ldr	r2, .L170
 2015 0004 936D     		ldr	r3, [r2, #88]
ARM GAS  /tmp/ccOp399b.s 			page 81


 2016 0006 1843     		orrs	r0, r0, r3
 2017              	.LVL162:
 2018              		.loc 1 2585 20 view .LVU531
 2019 0008 9065     		str	r0, [r2, #88]
 2020 000a 7047     		bx	lr
 2021              	.LVL163:
 2022              	.L168:
2586:platform/driver/src/stm32f4xx_rcc.c ****   }
2587:platform/driver/src/stm32f4xx_rcc.c ****   else
2588:platform/driver/src/stm32f4xx_rcc.c ****   {
2589:platform/driver/src/stm32f4xx_rcc.c ****     RCC->AHB3LPENR &= ~RCC_AHB3Periph;
 2023              		.loc 1 2589 5 is_stmt 1 view .LVU532
 2024              		.loc 1 2589 20 is_stmt 0 view .LVU533
 2025 000c 024A     		ldr	r2, .L170
 2026 000e 936D     		ldr	r3, [r2, #88]
 2027 0010 23EA0000 		bic	r0, r3, r0
 2028              	.LVL164:
 2029              		.loc 1 2589 20 view .LVU534
 2030 0014 9065     		str	r0, [r2, #88]
2590:platform/driver/src/stm32f4xx_rcc.c ****   }
2591:platform/driver/src/stm32f4xx_rcc.c **** }
 2031              		.loc 1 2591 1 view .LVU535
 2032 0016 7047     		bx	lr
 2033              	.L171:
 2034              		.align	2
 2035              	.L170:
 2036 0018 00380240 		.word	1073887232
 2037              		.cfi_endproc
 2038              	.LFE167:
 2040              		.section	.text.RCC_APB1PeriphClockLPModeCmd,"ax",%progbits
 2041              		.align	1
 2042              		.global	RCC_APB1PeriphClockLPModeCmd
 2043              		.syntax unified
 2044              		.thumb
 2045              		.thumb_func
 2047              	RCC_APB1PeriphClockLPModeCmd:
 2048              	.LVL165:
 2049              	.LFB168:
2592:platform/driver/src/stm32f4xx_rcc.c **** #endif /* STM32F40_41xxx || STM32F412xG || STM32F413_423xx || STM32F427_437xx || STM32F429_439xx ||
2593:platform/driver/src/stm32f4xx_rcc.c **** 
2594:platform/driver/src/stm32f4xx_rcc.c **** /**
2595:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the APB1 peripheral clock during Low Power (Sleep) mode.
2596:platform/driver/src/stm32f4xx_rcc.c ****   * @note   Peripheral clock gating in SLEEP mode can be used to further reduce
2597:platform/driver/src/stm32f4xx_rcc.c ****   *         power consumption.
2598:platform/driver/src/stm32f4xx_rcc.c ****   * @note   After wakeup from SLEEP mode, the peripheral clock is enabled again.
2599:platform/driver/src/stm32f4xx_rcc.c ****   * @note   By default, all peripheral clocks are enabled during SLEEP mode.
2600:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to gates its clock.
2601:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2602:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM2:   TIM2 clock
2603:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM3:   TIM3 clock
2604:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM4:   TIM4 clock
2605:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM5:   TIM5 clock
2606:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM6:   TIM6 clock
2607:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM7:   TIM7 clock
2608:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM12:  TIM12 clock
2609:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM13:  TIM13 clock
2610:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM14:  TIM14 clock
ARM GAS  /tmp/ccOp399b.s 			page 82


2611:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_LPTIM1: LPTIM1 clock (STM32F410xx and STM32F413_423xx devices) 
2612:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_WWDG:   WWDG clock
2613:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_SPI2:   SPI2 clock
2614:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_SPI3:   SPI3 clock
2615:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_SPDIF:   SPDIF RX clock (STM32F446xx devices) 
2616:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_USART2: USART2 clock
2617:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_USART3: USART3 clock
2618:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART4:  UART4 clock
2619:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART5:  UART5 clock
2620:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_I2C1:   I2C1 clock
2621:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_I2C2:   I2C2 clock
2622:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_I2C3:   I2C3 clock
2623:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_FMPI2C1:   FMPI2C1 clock
2624:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_CAN1:   CAN1 clock
2625:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_CAN2:   CAN2 clock
2626:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_CEC:    CEC clock (STM32F446xx devices)
2627:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_PWR:    PWR clock
2628:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_DAC:    DAC clock
2629:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART7:  UART7 clock
2630:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART8:  UART8 clock
2631:platform/driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
2632:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2633:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
2634:platform/driver/src/stm32f4xx_rcc.c ****   */
2635:platform/driver/src/stm32f4xx_rcc.c **** void RCC_APB1PeriphClockLPModeCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
2636:platform/driver/src/stm32f4xx_rcc.c **** {
 2050              		.loc 1 2636 1 is_stmt 1 view -0
 2051              		.cfi_startproc
 2052              		@ args = 0, pretend = 0, frame = 0
 2053              		@ frame_needed = 0, uses_anonymous_args = 0
 2054              		@ link register save eliminated.
2637:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2638:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
 2055              		.loc 1 2638 3 view .LVU537
2639:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2056              		.loc 1 2639 3 view .LVU538
2640:platform/driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 2057              		.loc 1 2640 3 view .LVU539
 2058              		.loc 1 2640 6 is_stmt 0 view .LVU540
 2059 0000 21B1     		cbz	r1, .L173
2641:platform/driver/src/stm32f4xx_rcc.c ****   {
2642:platform/driver/src/stm32f4xx_rcc.c ****     RCC->APB1LPENR |= RCC_APB1Periph;
 2060              		.loc 1 2642 5 is_stmt 1 view .LVU541
 2061              		.loc 1 2642 20 is_stmt 0 view .LVU542
 2062 0002 054A     		ldr	r2, .L175
 2063 0004 136E     		ldr	r3, [r2, #96]
 2064 0006 1843     		orrs	r0, r0, r3
 2065              	.LVL166:
 2066              		.loc 1 2642 20 view .LVU543
 2067 0008 1066     		str	r0, [r2, #96]
 2068 000a 7047     		bx	lr
 2069              	.LVL167:
 2070              	.L173:
2643:platform/driver/src/stm32f4xx_rcc.c ****   }
2644:platform/driver/src/stm32f4xx_rcc.c ****   else
2645:platform/driver/src/stm32f4xx_rcc.c ****   {
2646:platform/driver/src/stm32f4xx_rcc.c ****     RCC->APB1LPENR &= ~RCC_APB1Periph;
ARM GAS  /tmp/ccOp399b.s 			page 83


 2071              		.loc 1 2646 5 is_stmt 1 view .LVU544
 2072              		.loc 1 2646 20 is_stmt 0 view .LVU545
 2073 000c 024A     		ldr	r2, .L175
 2074 000e 136E     		ldr	r3, [r2, #96]
 2075 0010 23EA0000 		bic	r0, r3, r0
 2076              	.LVL168:
 2077              		.loc 1 2646 20 view .LVU546
 2078 0014 1066     		str	r0, [r2, #96]
2647:platform/driver/src/stm32f4xx_rcc.c ****   }
2648:platform/driver/src/stm32f4xx_rcc.c **** }
 2079              		.loc 1 2648 1 view .LVU547
 2080 0016 7047     		bx	lr
 2081              	.L176:
 2082              		.align	2
 2083              	.L175:
 2084 0018 00380240 		.word	1073887232
 2085              		.cfi_endproc
 2086              	.LFE168:
 2088              		.section	.text.RCC_APB2PeriphClockLPModeCmd,"ax",%progbits
 2089              		.align	1
 2090              		.global	RCC_APB2PeriphClockLPModeCmd
 2091              		.syntax unified
 2092              		.thumb
 2093              		.thumb_func
 2095              	RCC_APB2PeriphClockLPModeCmd:
 2096              	.LVL169:
 2097              	.LFB169:
2649:platform/driver/src/stm32f4xx_rcc.c **** 
2650:platform/driver/src/stm32f4xx_rcc.c **** /**
2651:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the APB2 peripheral clock during Low Power (Sleep) mode.
2652:platform/driver/src/stm32f4xx_rcc.c ****   * @note   Peripheral clock gating in SLEEP mode can be used to further reduce
2653:platform/driver/src/stm32f4xx_rcc.c ****   *         power consumption.
2654:platform/driver/src/stm32f4xx_rcc.c ****   * @note   After wakeup from SLEEP mode, the peripheral clock is enabled again.
2655:platform/driver/src/stm32f4xx_rcc.c ****   * @note   By default, all peripheral clocks are enabled during SLEEP mode.
2656:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to gates its clock.
2657:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2658:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM1:   TIM1 clock
2659:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM8:   TIM8 clock
2660:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_USART1: USART1 clock
2661:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_USART6: USART6 clock
2662:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_ADC1:   ADC1 clock
2663:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_ADC2:   ADC2 clock
2664:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_ADC3:   ADC3 clock
2665:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SDIO:   SDIO clock
2666:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI1:   SPI1 clock
2667:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI4:   SPI4 clock
2668:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SYSCFG: SYSCFG clock
2669:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_EXTIT:  EXTIIT clock
2670:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM9:   TIM9 clock
2671:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM10:  TIM10 clock
2672:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM11:  TIM11 clock
2673:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI5:   SPI5 clock
2674:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI6:   SPI6 clock
2675:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SAI1:   SAI1 clock (STM32F42xxx/43xxx/446xx/469xx/479xx/413_423x
2676:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SAI2:   SAI2 clock (STM32F446xx devices)
2677:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_LTDC:   LTDC clock (STM32F429xx/439xx devices)
2678:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_DSI:    DSI clock (STM32F469_479xx devices)
ARM GAS  /tmp/ccOp399b.s 			page 84


2679:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_DFSDM1: DFSDM Clock (STM32F412xG and STM32F413_423xx Devices)
2680:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_DFSDM2: DFSDM2 Clock (STM32F413_423xx Devices)
2681:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_UART9:  UART9 Clock (STM32F413_423xx Devices)
2682:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_UART10: UART10 Clock (STM32F413_423xx Devices)
2683:platform/driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
2684:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2685:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
2686:platform/driver/src/stm32f4xx_rcc.c ****   */
2687:platform/driver/src/stm32f4xx_rcc.c **** void RCC_APB2PeriphClockLPModeCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
2688:platform/driver/src/stm32f4xx_rcc.c **** {
 2098              		.loc 1 2688 1 is_stmt 1 view -0
 2099              		.cfi_startproc
 2100              		@ args = 0, pretend = 0, frame = 0
 2101              		@ frame_needed = 0, uses_anonymous_args = 0
 2102              		@ link register save eliminated.
2689:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2690:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
 2103              		.loc 1 2690 3 view .LVU549
2691:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2104              		.loc 1 2691 3 view .LVU550
2692:platform/driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 2105              		.loc 1 2692 3 view .LVU551
 2106              		.loc 1 2692 6 is_stmt 0 view .LVU552
 2107 0000 21B1     		cbz	r1, .L178
2693:platform/driver/src/stm32f4xx_rcc.c ****   {
2694:platform/driver/src/stm32f4xx_rcc.c ****     RCC->APB2LPENR |= RCC_APB2Periph;
 2108              		.loc 1 2694 5 is_stmt 1 view .LVU553
 2109              		.loc 1 2694 20 is_stmt 0 view .LVU554
 2110 0002 054A     		ldr	r2, .L180
 2111 0004 536E     		ldr	r3, [r2, #100]
 2112 0006 1843     		orrs	r0, r0, r3
 2113              	.LVL170:
 2114              		.loc 1 2694 20 view .LVU555
 2115 0008 5066     		str	r0, [r2, #100]
 2116 000a 7047     		bx	lr
 2117              	.LVL171:
 2118              	.L178:
2695:platform/driver/src/stm32f4xx_rcc.c ****   }
2696:platform/driver/src/stm32f4xx_rcc.c ****   else
2697:platform/driver/src/stm32f4xx_rcc.c ****   {
2698:platform/driver/src/stm32f4xx_rcc.c ****     RCC->APB2LPENR &= ~RCC_APB2Periph;
 2119              		.loc 1 2698 5 is_stmt 1 view .LVU556
 2120              		.loc 1 2698 20 is_stmt 0 view .LVU557
 2121 000c 024A     		ldr	r2, .L180
 2122 000e 536E     		ldr	r3, [r2, #100]
 2123 0010 23EA0000 		bic	r0, r3, r0
 2124              	.LVL172:
 2125              		.loc 1 2698 20 view .LVU558
 2126 0014 5066     		str	r0, [r2, #100]
2699:platform/driver/src/stm32f4xx_rcc.c ****   }
2700:platform/driver/src/stm32f4xx_rcc.c **** }
 2127              		.loc 1 2700 1 view .LVU559
 2128 0016 7047     		bx	lr
 2129              	.L181:
 2130              		.align	2
 2131              	.L180:
 2132 0018 00380240 		.word	1073887232
ARM GAS  /tmp/ccOp399b.s 			page 85


 2133              		.cfi_endproc
 2134              	.LFE169:
 2136              		.section	.text.RCC_LSEModeConfig,"ax",%progbits
 2137              		.align	1
 2138              		.global	RCC_LSEModeConfig
 2139              		.syntax unified
 2140              		.thumb
 2141              		.thumb_func
 2143              	RCC_LSEModeConfig:
 2144              	.LVL173:
 2145              	.LFB170:
2701:platform/driver/src/stm32f4xx_rcc.c **** 
2702:platform/driver/src/stm32f4xx_rcc.c **** /**
2703:platform/driver/src/stm32f4xx_rcc.c ****   * @brief Configures the External Low Speed oscillator mode (LSE mode).
2704:platform/driver/src/stm32f4xx_rcc.c ****   * @note This mode is only available for STM32F410xx/STM32F411xx/STM32F446xx/STM32F469_479xx devic
2705:platform/driver/src/stm32f4xx_rcc.c ****   * @param  Mode: specifies the LSE mode.
2706:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
2707:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_LSE_LOWPOWER_MODE:  LSE oscillator in low power mode.
2708:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_LSE_HIGHDRIVE_MODE: LSE oscillator in High Drive mode.
2709:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
2710:platform/driver/src/stm32f4xx_rcc.c ****   */
2711:platform/driver/src/stm32f4xx_rcc.c **** void RCC_LSEModeConfig(uint8_t RCC_Mode)
2712:platform/driver/src/stm32f4xx_rcc.c **** {
 2146              		.loc 1 2712 1 is_stmt 1 view -0
 2147              		.cfi_startproc
 2148              		@ args = 0, pretend = 0, frame = 0
 2149              		@ frame_needed = 0, uses_anonymous_args = 0
 2150              		@ link register save eliminated.
2713:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2714:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_LSE_MODE(RCC_Mode));
 2151              		.loc 1 2714 3 view .LVU561
2715:platform/driver/src/stm32f4xx_rcc.c ****   
2716:platform/driver/src/stm32f4xx_rcc.c ****   if(RCC_Mode == RCC_LSE_HIGHDRIVE_MODE)
 2152              		.loc 1 2716 3 view .LVU562
 2153              		.loc 1 2716 5 is_stmt 0 view .LVU563
 2154 0000 0128     		cmp	r0, #1
 2155 0002 05D0     		beq	.L185
2717:platform/driver/src/stm32f4xx_rcc.c ****   {
2718:platform/driver/src/stm32f4xx_rcc.c ****     SET_BIT(RCC->BDCR, RCC_BDCR_LSEMOD);
2719:platform/driver/src/stm32f4xx_rcc.c ****   }
2720:platform/driver/src/stm32f4xx_rcc.c ****   else
2721:platform/driver/src/stm32f4xx_rcc.c ****   {
2722:platform/driver/src/stm32f4xx_rcc.c ****     CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEMOD);
 2156              		.loc 1 2722 5 is_stmt 1 view .LVU564
 2157 0004 054A     		ldr	r2, .L186
 2158 0006 136F     		ldr	r3, [r2, #112]
 2159 0008 23F00803 		bic	r3, r3, #8
 2160 000c 1367     		str	r3, [r2, #112]
2723:platform/driver/src/stm32f4xx_rcc.c ****   }
2724:platform/driver/src/stm32f4xx_rcc.c **** }
 2161              		.loc 1 2724 1 is_stmt 0 view .LVU565
 2162 000e 7047     		bx	lr
 2163              	.L185:
2718:platform/driver/src/stm32f4xx_rcc.c ****   }
 2164              		.loc 1 2718 5 is_stmt 1 view .LVU566
 2165 0010 024A     		ldr	r2, .L186
 2166 0012 136F     		ldr	r3, [r2, #112]
ARM GAS  /tmp/ccOp399b.s 			page 86


 2167 0014 43F00803 		orr	r3, r3, #8
 2168 0018 1367     		str	r3, [r2, #112]
 2169 001a 7047     		bx	lr
 2170              	.L187:
 2171              		.align	2
 2172              	.L186:
 2173 001c 00380240 		.word	1073887232
 2174              		.cfi_endproc
 2175              	.LFE170:
 2177              		.section	.text.RCC_ITConfig,"ax",%progbits
 2178              		.align	1
 2179              		.global	RCC_ITConfig
 2180              		.syntax unified
 2181              		.thumb
 2182              		.thumb_func
 2184              	RCC_ITConfig:
 2185              	.LVL174:
 2186              	.LFB171:
2725:platform/driver/src/stm32f4xx_rcc.c **** 
2726:platform/driver/src/stm32f4xx_rcc.c **** #if defined(STM32F410xx) || defined(STM32F413_423xx)
2727:platform/driver/src/stm32f4xx_rcc.c **** /**
2728:platform/driver/src/stm32f4xx_rcc.c ****   * @brief Configures the LPTIM1 clock Source.
2729:platform/driver/src/stm32f4xx_rcc.c ****   * @note This feature is only available for STM32F410xx devices.
2730:platform/driver/src/stm32f4xx_rcc.c ****   * @param RCC_ClockSource: specifies the LPTIM1 clock Source.
2731:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
2732:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_LPTIM1CLKSOURCE_PCLK: LPTIM1 clock from APB1 selected.
2733:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_LPTIM1CLKSOURCE_HSI:  LPTIM1 clock from HSI selected.
2734:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_LPTIM1CLKSOURCE_LSI:  LPTIM1 clock from LSI selected.
2735:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_LPTIM1CLKSOURCE_LSE:  LPTIM1 clock from LSE selected.
2736:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
2737:platform/driver/src/stm32f4xx_rcc.c ****   */
2738:platform/driver/src/stm32f4xx_rcc.c **** void RCC_LPTIM1ClockSourceConfig(uint32_t RCC_ClockSource)
2739:platform/driver/src/stm32f4xx_rcc.c **** {
2740:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2741:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_LPTIM1_CLOCKSOURCE(RCC_ClockSource));
2742:platform/driver/src/stm32f4xx_rcc.c **** 
2743:platform/driver/src/stm32f4xx_rcc.c ****   /* Clear LPTIM1 clock source selection source bits */
2744:platform/driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR2 &= ~RCC_DCKCFGR2_LPTIM1SEL;
2745:platform/driver/src/stm32f4xx_rcc.c ****   /* Set new LPTIM1 clock source */
2746:platform/driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR2 |= RCC_ClockSource;
2747:platform/driver/src/stm32f4xx_rcc.c **** }
2748:platform/driver/src/stm32f4xx_rcc.c **** #endif /* STM32F410xx || STM32F413_423xx */
2749:platform/driver/src/stm32f4xx_rcc.c **** 
2750:platform/driver/src/stm32f4xx_rcc.c **** #if defined(STM32F469_479xx)
2751:platform/driver/src/stm32f4xx_rcc.c **** /**
2752:platform/driver/src/stm32f4xx_rcc.c ****   * @brief Configures the DSI clock Source.
2753:platform/driver/src/stm32f4xx_rcc.c ****   * @note This feature is only available for STM32F469_479xx devices.
2754:platform/driver/src/stm32f4xx_rcc.c ****   * @param RCC_ClockSource: specifies the DSI clock Source.
2755:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
2756:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_DSICLKSource_PHY: DSI-PHY used as DSI byte lane clock source (usual case).
2757:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_DSICLKSource_PLLR: PLL_R used as DSI byte lane clock source, used in case D
2758:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
2759:platform/driver/src/stm32f4xx_rcc.c ****   */
2760:platform/driver/src/stm32f4xx_rcc.c **** void RCC_DSIClockSourceConfig(uint8_t RCC_ClockSource)
2761:platform/driver/src/stm32f4xx_rcc.c **** {
2762:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2763:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_DSI_CLOCKSOURCE(RCC_ClockSource));
ARM GAS  /tmp/ccOp399b.s 			page 87


2764:platform/driver/src/stm32f4xx_rcc.c ****   
2765:platform/driver/src/stm32f4xx_rcc.c ****   if(RCC_ClockSource == RCC_DSICLKSource_PLLR)
2766:platform/driver/src/stm32f4xx_rcc.c ****   {
2767:platform/driver/src/stm32f4xx_rcc.c ****     SET_BIT(RCC->DCKCFGR, RCC_DCKCFGR_DSISEL);
2768:platform/driver/src/stm32f4xx_rcc.c ****   }
2769:platform/driver/src/stm32f4xx_rcc.c ****   else
2770:platform/driver/src/stm32f4xx_rcc.c ****   {
2771:platform/driver/src/stm32f4xx_rcc.c ****     CLEAR_BIT(RCC->DCKCFGR, RCC_DCKCFGR_DSISEL);
2772:platform/driver/src/stm32f4xx_rcc.c ****   }
2773:platform/driver/src/stm32f4xx_rcc.c **** }
2774:platform/driver/src/stm32f4xx_rcc.c **** #endif /*  STM32F469_479xx */
2775:platform/driver/src/stm32f4xx_rcc.c **** 
2776:platform/driver/src/stm32f4xx_rcc.c **** #if defined(STM32F412xG) || defined(STM32F413_423xx) || defined(STM32F446xx) || defined(STM32F469_4
2777:platform/driver/src/stm32f4xx_rcc.c **** /**
2778:platform/driver/src/stm32f4xx_rcc.c ****   * @brief Configures the 48MHz clock Source.
2779:platform/driver/src/stm32f4xx_rcc.c ****   * @note This feature is only available for STM32F446xx/STM32F469_479xx devices.
2780:platform/driver/src/stm32f4xx_rcc.c ****   * @param RCC_ClockSource: specifies the 48MHz clock Source.
2781:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
2782:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_48MHZCLKSource_PLL: 48MHz from PLL selected.
2783:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_48MHZCLKSource_PLLSAI: 48MHz from PLLSAI selected.
2784:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_CK48CLKSOURCE_PLLI2SQ : 48MHz from PLLI2SQ
2785:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
2786:platform/driver/src/stm32f4xx_rcc.c ****   */
2787:platform/driver/src/stm32f4xx_rcc.c **** void RCC_48MHzClockSourceConfig(uint8_t RCC_ClockSource)
2788:platform/driver/src/stm32f4xx_rcc.c **** {
2789:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2790:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_48MHZ_CLOCKSOURCE(RCC_ClockSource));
2791:platform/driver/src/stm32f4xx_rcc.c **** #if defined(STM32F469_479xx) 
2792:platform/driver/src/stm32f4xx_rcc.c ****   if(RCC_ClockSource == RCC_48MHZCLKSource_PLLSAI)
2793:platform/driver/src/stm32f4xx_rcc.c ****   {
2794:platform/driver/src/stm32f4xx_rcc.c ****     SET_BIT(RCC->DCKCFGR, RCC_DCKCFGR_CK48MSEL);
2795:platform/driver/src/stm32f4xx_rcc.c ****   }
2796:platform/driver/src/stm32f4xx_rcc.c ****   else
2797:platform/driver/src/stm32f4xx_rcc.c ****   {
2798:platform/driver/src/stm32f4xx_rcc.c ****     CLEAR_BIT(RCC->DCKCFGR, RCC_DCKCFGR_CK48MSEL);
2799:platform/driver/src/stm32f4xx_rcc.c ****   }
2800:platform/driver/src/stm32f4xx_rcc.c **** #elif  defined(STM32F446xx)
2801:platform/driver/src/stm32f4xx_rcc.c ****   if(RCC_ClockSource == RCC_48MHZCLKSource_PLLSAI)
2802:platform/driver/src/stm32f4xx_rcc.c ****   {
2803:platform/driver/src/stm32f4xx_rcc.c ****     SET_BIT(RCC->DCKCFGR2, RCC_DCKCFGR2_CK48MSEL);
2804:platform/driver/src/stm32f4xx_rcc.c ****   }
2805:platform/driver/src/stm32f4xx_rcc.c ****   else
2806:platform/driver/src/stm32f4xx_rcc.c ****   {
2807:platform/driver/src/stm32f4xx_rcc.c ****     CLEAR_BIT(RCC->DCKCFGR2, RCC_DCKCFGR2_CK48MSEL);
2808:platform/driver/src/stm32f4xx_rcc.c ****   }
2809:platform/driver/src/stm32f4xx_rcc.c **** #elif defined(STM32F412xG) || defined(STM32F413_423xx)
2810:platform/driver/src/stm32f4xx_rcc.c ****   if(RCC_ClockSource == RCC_CK48CLKSOURCE_PLLI2SQ)
2811:platform/driver/src/stm32f4xx_rcc.c ****   {
2812:platform/driver/src/stm32f4xx_rcc.c ****     SET_BIT(RCC->DCKCFGR2, RCC_DCKCFGR2_CK48MSEL);
2813:platform/driver/src/stm32f4xx_rcc.c ****   }
2814:platform/driver/src/stm32f4xx_rcc.c ****   else
2815:platform/driver/src/stm32f4xx_rcc.c ****   {
2816:platform/driver/src/stm32f4xx_rcc.c ****     CLEAR_BIT(RCC->DCKCFGR2, RCC_DCKCFGR2_CK48MSEL);
2817:platform/driver/src/stm32f4xx_rcc.c ****   }
2818:platform/driver/src/stm32f4xx_rcc.c **** #else
2819:platform/driver/src/stm32f4xx_rcc.c **** #endif /* STM32F469_479xx */  
2820:platform/driver/src/stm32f4xx_rcc.c **** }
ARM GAS  /tmp/ccOp399b.s 			page 88


2821:platform/driver/src/stm32f4xx_rcc.c **** 
2822:platform/driver/src/stm32f4xx_rcc.c **** /**
2823:platform/driver/src/stm32f4xx_rcc.c ****   * @brief Configures the SDIO clock Source.
2824:platform/driver/src/stm32f4xx_rcc.c ****   * @note This feature is only available for STM32F469_479xx/STM32F446xx devices.
2825:platform/driver/src/stm32f4xx_rcc.c ****   * @param RCC_ClockSource: specifies the SDIO clock Source.
2826:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
2827:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SDIOCLKSource_48MHZ: 48MHz clock selected.
2828:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SDIOCLKSource_SYSCLK: system clock selected.
2829:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
2830:platform/driver/src/stm32f4xx_rcc.c ****   */
2831:platform/driver/src/stm32f4xx_rcc.c **** void RCC_SDIOClockSourceConfig(uint8_t RCC_ClockSource)
2832:platform/driver/src/stm32f4xx_rcc.c **** {
2833:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2834:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_SDIO_CLOCKSOURCE(RCC_ClockSource));
2835:platform/driver/src/stm32f4xx_rcc.c **** #if defined(STM32F469_479xx)   
2836:platform/driver/src/stm32f4xx_rcc.c ****   if(RCC_ClockSource == RCC_SDIOCLKSource_SYSCLK)
2837:platform/driver/src/stm32f4xx_rcc.c ****   {
2838:platform/driver/src/stm32f4xx_rcc.c ****     SET_BIT(RCC->DCKCFGR, RCC_DCKCFGR_SDIOSEL);
2839:platform/driver/src/stm32f4xx_rcc.c ****   }
2840:platform/driver/src/stm32f4xx_rcc.c ****   else
2841:platform/driver/src/stm32f4xx_rcc.c ****   {
2842:platform/driver/src/stm32f4xx_rcc.c ****     CLEAR_BIT(RCC->DCKCFGR, RCC_DCKCFGR_SDIOSEL);
2843:platform/driver/src/stm32f4xx_rcc.c ****   }
2844:platform/driver/src/stm32f4xx_rcc.c **** #elif defined(STM32F412xG) || defined(STM32F413_423xx) || defined(STM32F446xx)
2845:platform/driver/src/stm32f4xx_rcc.c ****   if(RCC_ClockSource == RCC_SDIOCLKSource_SYSCLK)
2846:platform/driver/src/stm32f4xx_rcc.c ****   {
2847:platform/driver/src/stm32f4xx_rcc.c ****     SET_BIT(RCC->DCKCFGR2, RCC_DCKCFGR2_SDIOSEL);
2848:platform/driver/src/stm32f4xx_rcc.c ****   }
2849:platform/driver/src/stm32f4xx_rcc.c ****   else
2850:platform/driver/src/stm32f4xx_rcc.c ****   {
2851:platform/driver/src/stm32f4xx_rcc.c ****     CLEAR_BIT(RCC->DCKCFGR2, RCC_DCKCFGR2_SDIOSEL);
2852:platform/driver/src/stm32f4xx_rcc.c ****   }
2853:platform/driver/src/stm32f4xx_rcc.c **** #else
2854:platform/driver/src/stm32f4xx_rcc.c **** #endif /* STM32F469_479xx */ 
2855:platform/driver/src/stm32f4xx_rcc.c **** }
2856:platform/driver/src/stm32f4xx_rcc.c **** #endif /* STM32F412xG || STM32F413_423xx || STM32F446xx || STM32F469_479xx */
2857:platform/driver/src/stm32f4xx_rcc.c **** 
2858:platform/driver/src/stm32f4xx_rcc.c **** #if defined(STM32F446xx)
2859:platform/driver/src/stm32f4xx_rcc.c **** /**
2860:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the AHB1 clock gating for the specified IPs.
2861:platform/driver/src/stm32f4xx_rcc.c ****   * @note This feature is only available for STM32F446xx devices.
2862:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_AHB1ClockGating: specifies the AHB1 clock gating.
2863:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2864:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1ClockGating_APB1Bridge: AHB1 to APB1 clock
2865:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1ClockGating_APB2Bridge: AHB1 to APB2 clock 
2866:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1ClockGating_CM4DBG: Cortex M4 ETM clock
2867:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1ClockGating_SPARE: Spare clock
2868:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1ClockGating_SRAM: SRAM controller clock
2869:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1ClockGating_FLITF: Flash interface clock
2870:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1ClockGating_RCC: RCC clock
2871:platform/driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
2872:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2873:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
2874:platform/driver/src/stm32f4xx_rcc.c ****   */
2875:platform/driver/src/stm32f4xx_rcc.c **** void RCC_AHB1ClockGatingCmd(uint32_t RCC_AHB1ClockGating, FunctionalState NewState)
2876:platform/driver/src/stm32f4xx_rcc.c **** {
2877:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
ARM GAS  /tmp/ccOp399b.s 			page 89


2878:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_AHB1_CLOCKGATING(RCC_AHB1ClockGating));
2879:platform/driver/src/stm32f4xx_rcc.c **** 
2880:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2881:platform/driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
2882:platform/driver/src/stm32f4xx_rcc.c ****   {
2883:platform/driver/src/stm32f4xx_rcc.c ****     RCC->CKGATENR &= ~RCC_AHB1ClockGating;
2884:platform/driver/src/stm32f4xx_rcc.c ****   }
2885:platform/driver/src/stm32f4xx_rcc.c ****   else
2886:platform/driver/src/stm32f4xx_rcc.c ****   {
2887:platform/driver/src/stm32f4xx_rcc.c ****     RCC->CKGATENR |= RCC_AHB1ClockGating;
2888:platform/driver/src/stm32f4xx_rcc.c ****   }
2889:platform/driver/src/stm32f4xx_rcc.c **** }
2890:platform/driver/src/stm32f4xx_rcc.c **** 
2891:platform/driver/src/stm32f4xx_rcc.c **** /**
2892:platform/driver/src/stm32f4xx_rcc.c ****   * @brief Configures the SPDIFRX clock Source.
2893:platform/driver/src/stm32f4xx_rcc.c ****   * @note This feature is only available for STM32F446xx devices.
2894:platform/driver/src/stm32f4xx_rcc.c ****   * @param RCC_ClockSource: specifies the SPDIFRX clock Source.
2895:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
2896:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SPDIFRXCLKSource_PLLR: SPDIFRX clock from PLL_R selected.
2897:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SPDIFRXCLKSource_PLLI2SP: SPDIFRX clock from PLLI2S_P selected.
2898:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
2899:platform/driver/src/stm32f4xx_rcc.c ****   */
2900:platform/driver/src/stm32f4xx_rcc.c **** void RCC_SPDIFRXClockSourceConfig(uint8_t RCC_ClockSource)
2901:platform/driver/src/stm32f4xx_rcc.c **** {
2902:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2903:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_SPDIFRX_CLOCKSOURCE(RCC_ClockSource));
2904:platform/driver/src/stm32f4xx_rcc.c ****   
2905:platform/driver/src/stm32f4xx_rcc.c ****   if(RCC_ClockSource == RCC_SPDIFRXCLKSource_PLLI2SP)
2906:platform/driver/src/stm32f4xx_rcc.c ****   {
2907:platform/driver/src/stm32f4xx_rcc.c ****     SET_BIT(RCC->DCKCFGR2, RCC_DCKCFGR2_SPDIFRXSEL);
2908:platform/driver/src/stm32f4xx_rcc.c ****   }
2909:platform/driver/src/stm32f4xx_rcc.c ****   else
2910:platform/driver/src/stm32f4xx_rcc.c ****   {
2911:platform/driver/src/stm32f4xx_rcc.c ****     CLEAR_BIT(RCC->DCKCFGR2, RCC_DCKCFGR2_SPDIFRXSEL);
2912:platform/driver/src/stm32f4xx_rcc.c ****   }
2913:platform/driver/src/stm32f4xx_rcc.c **** }
2914:platform/driver/src/stm32f4xx_rcc.c **** 
2915:platform/driver/src/stm32f4xx_rcc.c **** /**
2916:platform/driver/src/stm32f4xx_rcc.c ****   * @brief Configures the CEC clock Source.
2917:platform/driver/src/stm32f4xx_rcc.c ****   * @note This feature is only available for STM32F446xx devices.
2918:platform/driver/src/stm32f4xx_rcc.c ****   * @param RCC_ClockSource: specifies the CEC clock Source.
2919:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
2920:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_CECCLKSource_HSIDiv488: CEC clock from HSI/488 selected.
2921:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_CECCLKSource_LSE: CEC clock from LSE selected.
2922:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
2923:platform/driver/src/stm32f4xx_rcc.c ****   */
2924:platform/driver/src/stm32f4xx_rcc.c **** void RCC_CECClockSourceConfig(uint8_t RCC_ClockSource)
2925:platform/driver/src/stm32f4xx_rcc.c **** {
2926:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2927:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_CEC_CLOCKSOURCE(RCC_ClockSource));
2928:platform/driver/src/stm32f4xx_rcc.c ****   
2929:platform/driver/src/stm32f4xx_rcc.c ****   if(RCC_ClockSource == RCC_CECCLKSource_LSE)
2930:platform/driver/src/stm32f4xx_rcc.c ****   {
2931:platform/driver/src/stm32f4xx_rcc.c ****     SET_BIT(RCC->DCKCFGR2, RCC_DCKCFGR2_CECSEL);
2932:platform/driver/src/stm32f4xx_rcc.c ****   }
2933:platform/driver/src/stm32f4xx_rcc.c ****   else
2934:platform/driver/src/stm32f4xx_rcc.c ****   {
ARM GAS  /tmp/ccOp399b.s 			page 90


2935:platform/driver/src/stm32f4xx_rcc.c ****     CLEAR_BIT(RCC->DCKCFGR2, RCC_DCKCFGR2_CECSEL);
2936:platform/driver/src/stm32f4xx_rcc.c ****   }
2937:platform/driver/src/stm32f4xx_rcc.c **** }
2938:platform/driver/src/stm32f4xx_rcc.c **** #endif /* STM32F446xx */
2939:platform/driver/src/stm32f4xx_rcc.c **** 
2940:platform/driver/src/stm32f4xx_rcc.c **** #if defined(STM32F410xx) || defined(STM32F412xG) || defined(STM32F413_423xx) || defined(STM32F446xx
2941:platform/driver/src/stm32f4xx_rcc.c **** /**
2942:platform/driver/src/stm32f4xx_rcc.c ****   * @brief Configures the FMPI2C1 clock Source.
2943:platform/driver/src/stm32f4xx_rcc.c ****   * @note This feature is only available for STM32F446xx devices.
2944:platform/driver/src/stm32f4xx_rcc.c ****   * @param RCC_ClockSource: specifies the FMPI2C1 clock Source.
2945:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
2946:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FMPI2C1CLKSource_APB1: FMPI2C1 clock from APB1 selected.
2947:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FMPI2C1CLKSource_SYSCLK: FMPI2C1 clock from Sytem clock selected.
2948:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FMPI2C1CLKSource_HSI: FMPI2C1 clock from HSI selected.
2949:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
2950:platform/driver/src/stm32f4xx_rcc.c ****   */
2951:platform/driver/src/stm32f4xx_rcc.c **** void RCC_FMPI2C1ClockSourceConfig(uint32_t RCC_ClockSource)
2952:platform/driver/src/stm32f4xx_rcc.c **** {
2953:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2954:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_FMPI2C1_CLOCKSOURCE(RCC_ClockSource));
2955:platform/driver/src/stm32f4xx_rcc.c **** 
2956:platform/driver/src/stm32f4xx_rcc.c ****   /* Clear FMPI2C1 clock source selection source bits */
2957:platform/driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR2 &= ~RCC_DCKCFGR2_FMPI2C1SEL;
2958:platform/driver/src/stm32f4xx_rcc.c ****   /* Set new FMPI2C1 clock source */
2959:platform/driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR2 |= RCC_ClockSource;
2960:platform/driver/src/stm32f4xx_rcc.c **** }
2961:platform/driver/src/stm32f4xx_rcc.c **** #endif /* STM32F410xx || STM32F412xG || STM32F413_423xx || STM32F446xx */
2962:platform/driver/src/stm32f4xx_rcc.c **** /**
2963:platform/driver/src/stm32f4xx_rcc.c ****   * @}
2964:platform/driver/src/stm32f4xx_rcc.c ****   */
2965:platform/driver/src/stm32f4xx_rcc.c **** 
2966:platform/driver/src/stm32f4xx_rcc.c **** #if defined(STM32F410xx)
2967:platform/driver/src/stm32f4xx_rcc.c **** /**
2968:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the MCO1.
2969:platform/driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the MCO1.
2970:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2971:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
2972:platform/driver/src/stm32f4xx_rcc.c ****   */
2973:platform/driver/src/stm32f4xx_rcc.c **** void RCC_MCO1Cmd(FunctionalState NewState)
2974:platform/driver/src/stm32f4xx_rcc.c **** {
2975:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2976:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2977:platform/driver/src/stm32f4xx_rcc.c **** 
2978:platform/driver/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) RCC_CFGR_MCO1EN_BB = (uint32_t)NewState;
2979:platform/driver/src/stm32f4xx_rcc.c **** }
2980:platform/driver/src/stm32f4xx_rcc.c **** 
2981:platform/driver/src/stm32f4xx_rcc.c **** /**
2982:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the MCO2.
2983:platform/driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the MCO2.
2984:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2985:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
2986:platform/driver/src/stm32f4xx_rcc.c ****   */
2987:platform/driver/src/stm32f4xx_rcc.c **** void RCC_MCO2Cmd(FunctionalState NewState)
2988:platform/driver/src/stm32f4xx_rcc.c **** {
2989:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2990:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2991:platform/driver/src/stm32f4xx_rcc.c **** 
ARM GAS  /tmp/ccOp399b.s 			page 91


2992:platform/driver/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) RCC_CFGR_MCO2EN_BB = (uint32_t)NewState;
2993:platform/driver/src/stm32f4xx_rcc.c **** }
2994:platform/driver/src/stm32f4xx_rcc.c **** #endif /* STM32F410xx */
2995:platform/driver/src/stm32f4xx_rcc.c **** 
2996:platform/driver/src/stm32f4xx_rcc.c **** /** @defgroup RCC_Group4 Interrupts and flags management functions
2997:platform/driver/src/stm32f4xx_rcc.c ****  *  @brief   Interrupts and flags management functions 
2998:platform/driver/src/stm32f4xx_rcc.c ****  *
2999:platform/driver/src/stm32f4xx_rcc.c **** @verbatim   
3000:platform/driver/src/stm32f4xx_rcc.c ****  ===============================================================================
3001:platform/driver/src/stm32f4xx_rcc.c ****                 ##### Interrupts and flags management functions #####
3002:platform/driver/src/stm32f4xx_rcc.c ****  ===============================================================================  
3003:platform/driver/src/stm32f4xx_rcc.c **** 
3004:platform/driver/src/stm32f4xx_rcc.c **** @endverbatim
3005:platform/driver/src/stm32f4xx_rcc.c ****   * @{
3006:platform/driver/src/stm32f4xx_rcc.c ****   */
3007:platform/driver/src/stm32f4xx_rcc.c **** 
3008:platform/driver/src/stm32f4xx_rcc.c **** /**
3009:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the specified RCC interrupts.
3010:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_IT: specifies the RCC interrupt sources to be enabled or disabled.
3011:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
3012:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_LSIRDY: LSI ready interrupt
3013:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_LSERDY: LSE ready interrupt
3014:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_HSIRDY: HSI ready interrupt
3015:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_HSERDY: HSE ready interrupt
3016:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_PLLRDY: main PLL ready interrupt
3017:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_PLLI2SRDY: PLLI2S ready interrupt
3018:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_PLLSAIRDY: PLLSAI ready interrupt (only for STM32F42xxx/43xxx/446xx/469x
3019:platform/driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified RCC interrupts.
3020:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
3021:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
3022:platform/driver/src/stm32f4xx_rcc.c ****   */
3023:platform/driver/src/stm32f4xx_rcc.c **** void RCC_ITConfig(uint8_t RCC_IT, FunctionalState NewState)
3024:platform/driver/src/stm32f4xx_rcc.c **** {
 2187              		.loc 1 3024 1 view -0
 2188              		.cfi_startproc
 2189              		@ args = 0, pretend = 0, frame = 0
 2190              		@ frame_needed = 0, uses_anonymous_args = 0
 2191              		@ link register save eliminated.
3025:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
3026:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_IT(RCC_IT));
 2192              		.loc 1 3026 3 view .LVU568
3027:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2193              		.loc 1 3027 3 view .LVU569
3028:platform/driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 2194              		.loc 1 3028 3 view .LVU570
 2195              		.loc 1 3028 6 is_stmt 0 view .LVU571
 2196 0000 21B1     		cbz	r1, .L189
3029:platform/driver/src/stm32f4xx_rcc.c ****   {
3030:platform/driver/src/stm32f4xx_rcc.c ****     /* Perform Byte access to RCC_CIR[14:8] bits to enable the selected interrupts */
3031:platform/driver/src/stm32f4xx_rcc.c ****     *(__IO uint8_t *) CIR_BYTE2_ADDRESS |= RCC_IT;
 2197              		.loc 1 3031 5 is_stmt 1 view .LVU572
 2198              		.loc 1 3031 41 is_stmt 0 view .LVU573
 2199 0002 054A     		ldr	r2, .L191
 2200 0004 537B     		ldrb	r3, [r2, #13]	@ zero_extendqisi2
 2201 0006 1843     		orrs	r0, r0, r3
 2202              	.LVL175:
 2203              		.loc 1 3031 41 view .LVU574
ARM GAS  /tmp/ccOp399b.s 			page 92


 2204 0008 5073     		strb	r0, [r2, #13]
 2205 000a 7047     		bx	lr
 2206              	.LVL176:
 2207              	.L189:
3032:platform/driver/src/stm32f4xx_rcc.c ****   }
3033:platform/driver/src/stm32f4xx_rcc.c ****   else
3034:platform/driver/src/stm32f4xx_rcc.c ****   {
3035:platform/driver/src/stm32f4xx_rcc.c ****     /* Perform Byte access to RCC_CIR[14:8] bits to disable the selected interrupts */
3036:platform/driver/src/stm32f4xx_rcc.c ****     *(__IO uint8_t *) CIR_BYTE2_ADDRESS &= (uint8_t)~RCC_IT;
 2208              		.loc 1 3036 5 is_stmt 1 view .LVU575
 2209              		.loc 1 3036 41 is_stmt 0 view .LVU576
 2210 000c 024A     		ldr	r2, .L191
 2211 000e 537B     		ldrb	r3, [r2, #13]	@ zero_extendqisi2
 2212 0010 23EA0000 		bic	r0, r3, r0
 2213              	.LVL177:
 2214              		.loc 1 3036 41 view .LVU577
 2215 0014 5073     		strb	r0, [r2, #13]
3037:platform/driver/src/stm32f4xx_rcc.c ****   }
3038:platform/driver/src/stm32f4xx_rcc.c **** }
 2216              		.loc 1 3038 1 view .LVU578
 2217 0016 7047     		bx	lr
 2218              	.L192:
 2219              		.align	2
 2220              	.L191:
 2221 0018 00380240 		.word	1073887232
 2222              		.cfi_endproc
 2223              	.LFE171:
 2225              		.section	.text.RCC_GetFlagStatus,"ax",%progbits
 2226              		.align	1
 2227              		.global	RCC_GetFlagStatus
 2228              		.syntax unified
 2229              		.thumb
 2230              		.thumb_func
 2232              	RCC_GetFlagStatus:
 2233              	.LVL178:
 2234              	.LFB172:
3039:platform/driver/src/stm32f4xx_rcc.c **** 
3040:platform/driver/src/stm32f4xx_rcc.c **** /**
3041:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Checks whether the specified RCC flag is set or not.
3042:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_FLAG: specifies the flag to check.
3043:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
3044:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_HSIRDY: HSI oscillator clock ready
3045:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_HSERDY: HSE oscillator clock ready
3046:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_PLLRDY: main PLL clock ready
3047:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_PLLI2SRDY: PLLI2S clock ready
3048:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_PLLSAIRDY: PLLSAI clock ready (only for STM32F42xxx/43xxx/446xx/469xx/
3049:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_LSERDY: LSE oscillator clock ready
3050:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_LSIRDY: LSI oscillator clock ready
3051:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_BORRST: POR/PDR or BOR reset
3052:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_PINRST: Pin reset
3053:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_PORRST: POR/PDR reset
3054:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_SFTRST: Software reset
3055:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_IWDGRST: Independent Watchdog reset
3056:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_WWDGRST: Window Watchdog reset
3057:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_LPWRRST: Low Power reset
3058:platform/driver/src/stm32f4xx_rcc.c ****   * @retval The new state of RCC_FLAG (SET or RESET).
3059:platform/driver/src/stm32f4xx_rcc.c ****   */
ARM GAS  /tmp/ccOp399b.s 			page 93


3060:platform/driver/src/stm32f4xx_rcc.c **** FlagStatus RCC_GetFlagStatus(uint8_t RCC_FLAG)
3061:platform/driver/src/stm32f4xx_rcc.c **** {
 2235              		.loc 1 3061 1 is_stmt 1 view -0
 2236              		.cfi_startproc
 2237              		@ args = 0, pretend = 0, frame = 0
 2238              		@ frame_needed = 0, uses_anonymous_args = 0
 2239              		@ link register save eliminated.
3062:platform/driver/src/stm32f4xx_rcc.c ****   uint32_t tmp = 0;
 2240              		.loc 1 3062 3 view .LVU580
3063:platform/driver/src/stm32f4xx_rcc.c ****   uint32_t statusreg = 0;
 2241              		.loc 1 3063 3 view .LVU581
3064:platform/driver/src/stm32f4xx_rcc.c ****   FlagStatus bitstatus = RESET;
 2242              		.loc 1 3064 3 view .LVU582
3065:platform/driver/src/stm32f4xx_rcc.c **** 
3066:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
3067:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_FLAG(RCC_FLAG));
 2243              		.loc 1 3067 3 view .LVU583
3068:platform/driver/src/stm32f4xx_rcc.c **** 
3069:platform/driver/src/stm32f4xx_rcc.c ****   /* Get the RCC register index */
3070:platform/driver/src/stm32f4xx_rcc.c ****   tmp = RCC_FLAG >> 5;
 2244              		.loc 1 3070 3 view .LVU584
 2245              		.loc 1 3070 18 is_stmt 0 view .LVU585
 2246 0000 4309     		lsrs	r3, r0, #5
 2247              	.LVL179:
3071:platform/driver/src/stm32f4xx_rcc.c ****   if (tmp == 1)               /* The flag to check is in CR register */
 2248              		.loc 1 3071 3 is_stmt 1 view .LVU586
 2249              		.loc 1 3071 6 is_stmt 0 view .LVU587
 2250 0002 012B     		cmp	r3, #1
 2251 0004 0CD0     		beq	.L199
3072:platform/driver/src/stm32f4xx_rcc.c ****   {
3073:platform/driver/src/stm32f4xx_rcc.c ****     statusreg = RCC->CR;
3074:platform/driver/src/stm32f4xx_rcc.c ****   }
3075:platform/driver/src/stm32f4xx_rcc.c ****   else if (tmp == 2)          /* The flag to check is in BDCR register */
 2252              		.loc 1 3075 8 is_stmt 1 view .LVU588
 2253              		.loc 1 3075 11 is_stmt 0 view .LVU589
 2254 0006 022B     		cmp	r3, #2
 2255 0008 0DD0     		beq	.L200
3076:platform/driver/src/stm32f4xx_rcc.c ****   {
3077:platform/driver/src/stm32f4xx_rcc.c ****     statusreg = RCC->BDCR;
3078:platform/driver/src/stm32f4xx_rcc.c ****   }
3079:platform/driver/src/stm32f4xx_rcc.c ****   else                       /* The flag to check is in CSR register */
3080:platform/driver/src/stm32f4xx_rcc.c ****   {
3081:platform/driver/src/stm32f4xx_rcc.c ****     statusreg = RCC->CSR;
 2256              		.loc 1 3081 5 is_stmt 1 view .LVU590
 2257              		.loc 1 3081 15 is_stmt 0 view .LVU591
 2258 000a 094B     		ldr	r3, .L201
 2259              	.LVL180:
 2260              		.loc 1 3081 15 view .LVU592
 2261 000c 5B6F     		ldr	r3, [r3, #116]
 2262              	.LVL181:
 2263              	.L195:
3082:platform/driver/src/stm32f4xx_rcc.c ****   }
3083:platform/driver/src/stm32f4xx_rcc.c **** 
3084:platform/driver/src/stm32f4xx_rcc.c ****   /* Get the flag position */
3085:platform/driver/src/stm32f4xx_rcc.c ****   tmp = RCC_FLAG & FLAG_MASK;
 2264              		.loc 1 3085 3 is_stmt 1 view .LVU593
 2265              		.loc 1 3085 7 is_stmt 0 view .LVU594
ARM GAS  /tmp/ccOp399b.s 			page 94


 2266 000e 00F01F00 		and	r0, r0, #31
 2267              	.LVL182:
3086:platform/driver/src/stm32f4xx_rcc.c ****   if ((statusreg & ((uint32_t)1 << tmp)) != (uint32_t)RESET)
 2268              		.loc 1 3086 3 is_stmt 1 view .LVU595
 2269              		.loc 1 3086 42 is_stmt 0 view .LVU596
 2270 0012 23FA00F0 		lsr	r0, r3, r0
 2271              	.LVL183:
 2272              		.loc 1 3086 6 view .LVU597
 2273 0016 10F0010F 		tst	r0, #1
 2274 001a 07D0     		beq	.L198
3087:platform/driver/src/stm32f4xx_rcc.c ****   {
3088:platform/driver/src/stm32f4xx_rcc.c ****     bitstatus = SET;
 2275              		.loc 1 3088 15 view .LVU598
 2276 001c 0120     		movs	r0, #1
 2277 001e 7047     		bx	lr
 2278              	.LVL184:
 2279              	.L199:
3073:platform/driver/src/stm32f4xx_rcc.c ****   }
 2280              		.loc 1 3073 5 is_stmt 1 view .LVU599
3073:platform/driver/src/stm32f4xx_rcc.c ****   }
 2281              		.loc 1 3073 15 is_stmt 0 view .LVU600
 2282 0020 034B     		ldr	r3, .L201
 2283              	.LVL185:
3073:platform/driver/src/stm32f4xx_rcc.c ****   }
 2284              		.loc 1 3073 15 view .LVU601
 2285 0022 1B68     		ldr	r3, [r3]
 2286              	.LVL186:
3073:platform/driver/src/stm32f4xx_rcc.c ****   }
 2287              		.loc 1 3073 15 view .LVU602
 2288 0024 F3E7     		b	.L195
 2289              	.LVL187:
 2290              	.L200:
3077:platform/driver/src/stm32f4xx_rcc.c ****   }
 2291              		.loc 1 3077 5 is_stmt 1 view .LVU603
3077:platform/driver/src/stm32f4xx_rcc.c ****   }
 2292              		.loc 1 3077 15 is_stmt 0 view .LVU604
 2293 0026 024B     		ldr	r3, .L201
 2294              	.LVL188:
3077:platform/driver/src/stm32f4xx_rcc.c ****   }
 2295              		.loc 1 3077 15 view .LVU605
 2296 0028 1B6F     		ldr	r3, [r3, #112]
 2297              	.LVL189:
3077:platform/driver/src/stm32f4xx_rcc.c ****   }
 2298              		.loc 1 3077 15 view .LVU606
 2299 002a F0E7     		b	.L195
 2300              	.LVL190:
 2301              	.L198:
3089:platform/driver/src/stm32f4xx_rcc.c ****   }
3090:platform/driver/src/stm32f4xx_rcc.c ****   else
3091:platform/driver/src/stm32f4xx_rcc.c ****   {
3092:platform/driver/src/stm32f4xx_rcc.c ****     bitstatus = RESET;
 2302              		.loc 1 3092 15 view .LVU607
 2303 002c 0020     		movs	r0, #0
 2304              	.LVL191:
3093:platform/driver/src/stm32f4xx_rcc.c ****   }
3094:platform/driver/src/stm32f4xx_rcc.c ****   /* Return the flag status */
3095:platform/driver/src/stm32f4xx_rcc.c ****   return bitstatus;
ARM GAS  /tmp/ccOp399b.s 			page 95


 2305              		.loc 1 3095 3 is_stmt 1 view .LVU608
3096:platform/driver/src/stm32f4xx_rcc.c **** }
 2306              		.loc 1 3096 1 is_stmt 0 view .LVU609
 2307 002e 7047     		bx	lr
 2308              	.L202:
 2309              		.align	2
 2310              	.L201:
 2311 0030 00380240 		.word	1073887232
 2312              		.cfi_endproc
 2313              	.LFE172:
 2315              		.section	.text.RCC_WaitForHSEStartUp,"ax",%progbits
 2316              		.align	1
 2317              		.global	RCC_WaitForHSEStartUp
 2318              		.syntax unified
 2319              		.thumb
 2320              		.thumb_func
 2322              	RCC_WaitForHSEStartUp:
 2323              	.LFB125:
 302:platform/driver/src/stm32f4xx_rcc.c ****   __IO uint32_t startupcounter = 0;
 2324              		.loc 1 302 1 is_stmt 1 view -0
 2325              		.cfi_startproc
 2326              		@ args = 0, pretend = 0, frame = 8
 2327              		@ frame_needed = 0, uses_anonymous_args = 0
 2328 0000 00B5     		push	{lr}
 2329              	.LCFI3:
 2330              		.cfi_def_cfa_offset 4
 2331              		.cfi_offset 14, -4
 2332 0002 83B0     		sub	sp, sp, #12
 2333              	.LCFI4:
 2334              		.cfi_def_cfa_offset 16
 303:platform/driver/src/stm32f4xx_rcc.c ****   ErrorStatus status = ERROR;
 2335              		.loc 1 303 3 view .LVU611
 303:platform/driver/src/stm32f4xx_rcc.c ****   ErrorStatus status = ERROR;
 2336              		.loc 1 303 17 is_stmt 0 view .LVU612
 2337 0004 0023     		movs	r3, #0
 2338 0006 0193     		str	r3, [sp, #4]
 304:platform/driver/src/stm32f4xx_rcc.c ****   FlagStatus hsestatus = RESET;
 2339              		.loc 1 304 3 is_stmt 1 view .LVU613
 2340              	.LVL192:
 305:platform/driver/src/stm32f4xx_rcc.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 2341              		.loc 1 305 3 view .LVU614
 2342              	.L205:
 307:platform/driver/src/stm32f4xx_rcc.c ****   {
 2343              		.loc 1 307 3 discriminator 2 view .LVU615
 309:platform/driver/src/stm32f4xx_rcc.c ****     startupcounter++;
 2344              		.loc 1 309 5 discriminator 2 view .LVU616
 309:platform/driver/src/stm32f4xx_rcc.c ****     startupcounter++;
 2345              		.loc 1 309 17 is_stmt 0 discriminator 2 view .LVU617
 2346 0008 3120     		movs	r0, #49
 2347 000a FFF7FEFF 		bl	RCC_GetFlagStatus
 2348              	.LVL193:
 310:platform/driver/src/stm32f4xx_rcc.c ****   } while((startupcounter != HSE_STARTUP_TIMEOUT) && (hsestatus == RESET));
 2349              		.loc 1 310 5 is_stmt 1 discriminator 2 view .LVU618
 310:platform/driver/src/stm32f4xx_rcc.c ****   } while((startupcounter != HSE_STARTUP_TIMEOUT) && (hsestatus == RESET));
 2350              		.loc 1 310 19 is_stmt 0 discriminator 2 view .LVU619
 2351 000e 019B     		ldr	r3, [sp, #4]
 2352 0010 0133     		adds	r3, r3, #1
ARM GAS  /tmp/ccOp399b.s 			page 96


 2353 0012 0193     		str	r3, [sp, #4]
 311:platform/driver/src/stm32f4xx_rcc.c **** 
 2354              		.loc 1 311 10 is_stmt 1 discriminator 2 view .LVU620
 311:platform/driver/src/stm32f4xx_rcc.c **** 
 2355              		.loc 1 311 27 is_stmt 0 discriminator 2 view .LVU621
 2356 0014 019B     		ldr	r3, [sp, #4]
 311:platform/driver/src/stm32f4xx_rcc.c **** 
 2357              		.loc 1 311 3 discriminator 2 view .LVU622
 2358 0016 B3F5A04F 		cmp	r3, #20480
 2359 001a 01D0     		beq	.L204
 311:platform/driver/src/stm32f4xx_rcc.c **** 
 2360              		.loc 1 311 51 discriminator 1 view .LVU623
 2361 001c 0028     		cmp	r0, #0
 2362 001e F3D0     		beq	.L205
 2363              	.L204:
 313:platform/driver/src/stm32f4xx_rcc.c ****   {
 2364              		.loc 1 313 3 is_stmt 1 view .LVU624
 313:platform/driver/src/stm32f4xx_rcc.c ****   {
 2365              		.loc 1 313 7 is_stmt 0 view .LVU625
 2366 0020 3120     		movs	r0, #49
 2367              	.LVL194:
 313:platform/driver/src/stm32f4xx_rcc.c ****   {
 2368              		.loc 1 313 7 view .LVU626
 2369 0022 FFF7FEFF 		bl	RCC_GetFlagStatus
 2370              	.LVL195:
 313:platform/driver/src/stm32f4xx_rcc.c ****   {
 2371              		.loc 1 313 6 view .LVU627
 2372 0026 00B1     		cbz	r0, .L206
 315:platform/driver/src/stm32f4xx_rcc.c ****   }
 2373              		.loc 1 315 12 view .LVU628
 2374 0028 0120     		movs	r0, #1
 2375              	.L206:
 2376              	.LVL196:
 321:platform/driver/src/stm32f4xx_rcc.c **** }
 2377              		.loc 1 321 3 is_stmt 1 view .LVU629
 322:platform/driver/src/stm32f4xx_rcc.c **** 
 2378              		.loc 1 322 1 is_stmt 0 view .LVU630
 2379 002a 03B0     		add	sp, sp, #12
 2380              	.LCFI5:
 2381              		.cfi_def_cfa_offset 4
 2382              		@ sp needed
 2383 002c 5DF804FB 		ldr	pc, [sp], #4
 2384              		.cfi_endproc
 2385              	.LFE125:
 2387              		.section	.text.RCC_ClearFlag,"ax",%progbits
 2388              		.align	1
 2389              		.global	RCC_ClearFlag
 2390              		.syntax unified
 2391              		.thumb
 2392              		.thumb_func
 2394              	RCC_ClearFlag:
 2395              	.LFB173:
3097:platform/driver/src/stm32f4xx_rcc.c **** 
3098:platform/driver/src/stm32f4xx_rcc.c **** /**
3099:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Clears the RCC reset flags.
3100:platform/driver/src/stm32f4xx_rcc.c ****   *         The reset flags are: RCC_FLAG_PINRST, RCC_FLAG_PORRST,  RCC_FLAG_SFTRST,
3101:platform/driver/src/stm32f4xx_rcc.c ****   *         RCC_FLAG_IWDGRST, RCC_FLAG_WWDGRST, RCC_FLAG_LPWRRST
ARM GAS  /tmp/ccOp399b.s 			page 97


3102:platform/driver/src/stm32f4xx_rcc.c ****   * @param  None
3103:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
3104:platform/driver/src/stm32f4xx_rcc.c ****   */
3105:platform/driver/src/stm32f4xx_rcc.c **** void RCC_ClearFlag(void)
3106:platform/driver/src/stm32f4xx_rcc.c **** {
 2396              		.loc 1 3106 1 is_stmt 1 view -0
 2397              		.cfi_startproc
 2398              		@ args = 0, pretend = 0, frame = 0
 2399              		@ frame_needed = 0, uses_anonymous_args = 0
 2400              		@ link register save eliminated.
3107:platform/driver/src/stm32f4xx_rcc.c ****   /* Set RMVF bit to clear the reset flags */
3108:platform/driver/src/stm32f4xx_rcc.c ****   RCC->CSR |= RCC_CSR_RMVF;
 2401              		.loc 1 3108 3 view .LVU632
 2402              		.loc 1 3108 12 is_stmt 0 view .LVU633
 2403 0000 024A     		ldr	r2, .L209
 2404 0002 536F     		ldr	r3, [r2, #116]
 2405 0004 43F08073 		orr	r3, r3, #16777216
 2406 0008 5367     		str	r3, [r2, #116]
3109:platform/driver/src/stm32f4xx_rcc.c **** }
 2407              		.loc 1 3109 1 view .LVU634
 2408 000a 7047     		bx	lr
 2409              	.L210:
 2410              		.align	2
 2411              	.L209:
 2412 000c 00380240 		.word	1073887232
 2413              		.cfi_endproc
 2414              	.LFE173:
 2416              		.section	.text.RCC_GetITStatus,"ax",%progbits
 2417              		.align	1
 2418              		.global	RCC_GetITStatus
 2419              		.syntax unified
 2420              		.thumb
 2421              		.thumb_func
 2423              	RCC_GetITStatus:
 2424              	.LVL197:
 2425              	.LFB174:
3110:platform/driver/src/stm32f4xx_rcc.c **** 
3111:platform/driver/src/stm32f4xx_rcc.c **** /**
3112:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Checks whether the specified RCC interrupt has occurred or not.
3113:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_IT: specifies the RCC interrupt source to check.
3114:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
3115:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_LSIRDY: LSI ready interrupt
3116:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_LSERDY: LSE ready interrupt
3117:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_HSIRDY: HSI ready interrupt
3118:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_HSERDY: HSE ready interrupt
3119:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_PLLRDY: main PLL ready interrupt
3120:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_PLLI2SRDY: PLLI2S ready interrupt
3121:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_PLLSAIRDY: PLLSAI clock ready interrupt (only for STM32F42xxx/43xxx/446x
3122:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_CSS: Clock Security System interrupt
3123:platform/driver/src/stm32f4xx_rcc.c ****   * @retval The new state of RCC_IT (SET or RESET).
3124:platform/driver/src/stm32f4xx_rcc.c ****   */
3125:platform/driver/src/stm32f4xx_rcc.c **** ITStatus RCC_GetITStatus(uint8_t RCC_IT)
3126:platform/driver/src/stm32f4xx_rcc.c **** {
 2426              		.loc 1 3126 1 is_stmt 1 view -0
 2427              		.cfi_startproc
 2428              		@ args = 0, pretend = 0, frame = 0
 2429              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccOp399b.s 			page 98


 2430              		@ link register save eliminated.
3127:platform/driver/src/stm32f4xx_rcc.c ****   ITStatus bitstatus = RESET;
 2431              		.loc 1 3127 3 view .LVU636
3128:platform/driver/src/stm32f4xx_rcc.c **** 
3129:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
3130:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_GET_IT(RCC_IT));
 2432              		.loc 1 3130 3 view .LVU637
3131:platform/driver/src/stm32f4xx_rcc.c **** 
3132:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the status of the specified RCC interrupt */
3133:platform/driver/src/stm32f4xx_rcc.c ****   if ((RCC->CIR & RCC_IT) != (uint32_t)RESET)
 2433              		.loc 1 3133 3 view .LVU638
 2434              		.loc 1 3133 11 is_stmt 0 view .LVU639
 2435 0000 034B     		ldr	r3, .L214
 2436 0002 DB68     		ldr	r3, [r3, #12]
 2437              		.loc 1 3133 6 view .LVU640
 2438 0004 1842     		tst	r0, r3
 2439 0006 01D0     		beq	.L213
3134:platform/driver/src/stm32f4xx_rcc.c ****   {
3135:platform/driver/src/stm32f4xx_rcc.c ****     bitstatus = SET;
 2440              		.loc 1 3135 15 view .LVU641
 2441 0008 0120     		movs	r0, #1
 2442              	.LVL198:
 2443              		.loc 1 3135 15 view .LVU642
 2444 000a 7047     		bx	lr
 2445              	.LVL199:
 2446              	.L213:
3136:platform/driver/src/stm32f4xx_rcc.c ****   }
3137:platform/driver/src/stm32f4xx_rcc.c ****   else
3138:platform/driver/src/stm32f4xx_rcc.c ****   {
3139:platform/driver/src/stm32f4xx_rcc.c ****     bitstatus = RESET;
 2447              		.loc 1 3139 15 view .LVU643
 2448 000c 0020     		movs	r0, #0
 2449              	.LVL200:
3140:platform/driver/src/stm32f4xx_rcc.c ****   }
3141:platform/driver/src/stm32f4xx_rcc.c ****   /* Return the RCC_IT status */
3142:platform/driver/src/stm32f4xx_rcc.c ****   return  bitstatus;
 2450              		.loc 1 3142 3 is_stmt 1 view .LVU644
3143:platform/driver/src/stm32f4xx_rcc.c **** }
 2451              		.loc 1 3143 1 is_stmt 0 view .LVU645
 2452 000e 7047     		bx	lr
 2453              	.L215:
 2454              		.align	2
 2455              	.L214:
 2456 0010 00380240 		.word	1073887232
 2457              		.cfi_endproc
 2458              	.LFE174:
 2460              		.section	.text.RCC_ClearITPendingBit,"ax",%progbits
 2461              		.align	1
 2462              		.global	RCC_ClearITPendingBit
 2463              		.syntax unified
 2464              		.thumb
 2465              		.thumb_func
 2467              	RCC_ClearITPendingBit:
 2468              	.LVL201:
 2469              	.LFB175:
3144:platform/driver/src/stm32f4xx_rcc.c **** 
3145:platform/driver/src/stm32f4xx_rcc.c **** /**
ARM GAS  /tmp/ccOp399b.s 			page 99


3146:platform/driver/src/stm32f4xx_rcc.c ****   * @brief  Clears the RCC's interrupt pending bits.
3147:platform/driver/src/stm32f4xx_rcc.c ****   * @param  RCC_IT: specifies the interrupt pending bit to clear.
3148:platform/driver/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
3149:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_LSIRDY: LSI ready interrupt
3150:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_LSERDY: LSE ready interrupt
3151:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_HSIRDY: HSI ready interrupt
3152:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_HSERDY: HSE ready interrupt
3153:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_PLLRDY: main PLL ready interrupt
3154:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_PLLI2SRDY: PLLI2S ready interrupt  
3155:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_PLLSAIRDY: PLLSAI ready interrupt (only for STM32F42xxx/43xxx/446xx/469x
3156:platform/driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_CSS: Clock Security System interrupt
3157:platform/driver/src/stm32f4xx_rcc.c ****   * @retval None
3158:platform/driver/src/stm32f4xx_rcc.c ****   */
3159:platform/driver/src/stm32f4xx_rcc.c **** void RCC_ClearITPendingBit(uint8_t RCC_IT)
3160:platform/driver/src/stm32f4xx_rcc.c **** {
 2470              		.loc 1 3160 1 is_stmt 1 view -0
 2471              		.cfi_startproc
 2472              		@ args = 0, pretend = 0, frame = 0
 2473              		@ frame_needed = 0, uses_anonymous_args = 0
 2474              		@ link register save eliminated.
3161:platform/driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
3162:platform/driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_CLEAR_IT(RCC_IT));
 2475              		.loc 1 3162 3 view .LVU647
3163:platform/driver/src/stm32f4xx_rcc.c **** 
3164:platform/driver/src/stm32f4xx_rcc.c ****   /* Perform Byte access to RCC_CIR[23:16] bits to clear the selected interrupt
3165:platform/driver/src/stm32f4xx_rcc.c ****      pending bits */
3166:platform/driver/src/stm32f4xx_rcc.c ****   *(__IO uint8_t *) CIR_BYTE3_ADDRESS = RCC_IT;
 2476              		.loc 1 3166 3 view .LVU648
 2477              		.loc 1 3166 39 is_stmt 0 view .LVU649
 2478 0000 014B     		ldr	r3, .L217
 2479 0002 9873     		strb	r0, [r3, #14]
3167:platform/driver/src/stm32f4xx_rcc.c **** }
 2480              		.loc 1 3167 1 view .LVU650
 2481 0004 7047     		bx	lr
 2482              	.L218:
 2483 0006 00BF     		.align	2
 2484              	.L217:
 2485 0008 00380240 		.word	1073887232
 2486              		.cfi_endproc
 2487              	.LFE175:
 2489              		.section	.data.APBAHBPrescTable,"aw"
 2490              		.align	2
 2491              		.set	.LANCHOR0,. + 0
 2494              	APBAHBPrescTable:
 2495 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004\001\002\003\004\006"
 2495      01020304 
 2495      01020304 
 2495      06
 2496 000d 070809   		.ascii	"\007\010\011"
 2497              		.text
 2498              	.Letext0:
 2499              		.file 2 "/home/lee/stm32f407_boot/tools/toolchain/gcc-arm-none-eabi/gcc-arm-none-eabi-10.3-2021.10
 2500              		.file 3 "/home/lee/stm32f407_boot/tools/toolchain/gcc-arm-none-eabi/gcc-arm-none-eabi-10.3-2021.10
 2501              		.file 4 "platform/cmsis/device/stm32f4xx.h"
 2502              		.file 5 "platform/driver/inc/stm32f4xx_rcc.h"
ARM GAS  /tmp/ccOp399b.s 			page 100


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_rcc.c
     /tmp/ccOp399b.s:20     .text.RCC_DeInit:0000000000000000 $t
     /tmp/ccOp399b.s:26     .text.RCC_DeInit:0000000000000000 RCC_DeInit
     /tmp/ccOp399b.s:78     .text.RCC_DeInit:000000000000003c $d
     /tmp/ccOp399b.s:85     .text.RCC_HSEConfig:0000000000000000 $t
     /tmp/ccOp399b.s:91     .text.RCC_HSEConfig:0000000000000000 RCC_HSEConfig
     /tmp/ccOp399b.s:113    .text.RCC_HSEConfig:000000000000000c $d
     /tmp/ccOp399b.s:118    .text.RCC_AdjustHSICalibrationValue:0000000000000000 $t
     /tmp/ccOp399b.s:124    .text.RCC_AdjustHSICalibrationValue:0000000000000000 RCC_AdjustHSICalibrationValue
     /tmp/ccOp399b.s:155    .text.RCC_AdjustHSICalibrationValue:0000000000000010 $d
     /tmp/ccOp399b.s:160    .text.RCC_HSICmd:0000000000000000 $t
     /tmp/ccOp399b.s:166    .text.RCC_HSICmd:0000000000000000 RCC_HSICmd
     /tmp/ccOp399b.s:184    .text.RCC_HSICmd:0000000000000008 $d
     /tmp/ccOp399b.s:189    .text.RCC_LSEConfig:0000000000000000 $t
     /tmp/ccOp399b.s:195    .text.RCC_LSEConfig:0000000000000000 RCC_LSEConfig
     /tmp/ccOp399b.s:238    .text.RCC_LSEConfig:000000000000002c $d
     /tmp/ccOp399b.s:243    .text.RCC_LSICmd:0000000000000000 $t
     /tmp/ccOp399b.s:249    .text.RCC_LSICmd:0000000000000000 RCC_LSICmd
     /tmp/ccOp399b.s:267    .text.RCC_LSICmd:0000000000000008 $d
     /tmp/ccOp399b.s:272    .text.RCC_PLLConfig:0000000000000000 $t
     /tmp/ccOp399b.s:278    .text.RCC_PLLConfig:0000000000000000 RCC_PLLConfig
     /tmp/ccOp399b.s:318    .text.RCC_PLLConfig:000000000000001c $d
     /tmp/ccOp399b.s:323    .text.RCC_PLLCmd:0000000000000000 $t
     /tmp/ccOp399b.s:329    .text.RCC_PLLCmd:0000000000000000 RCC_PLLCmd
     /tmp/ccOp399b.s:347    .text.RCC_PLLCmd:0000000000000008 $d
     /tmp/ccOp399b.s:352    .text.RCC_PLLI2SConfig:0000000000000000 $t
     /tmp/ccOp399b.s:358    .text.RCC_PLLI2SConfig:0000000000000000 RCC_PLLI2SConfig
     /tmp/ccOp399b.s:382    .text.RCC_PLLI2SConfig:0000000000000010 $d
     /tmp/ccOp399b.s:387    .text.RCC_PLLI2SCmd:0000000000000000 $t
     /tmp/ccOp399b.s:393    .text.RCC_PLLI2SCmd:0000000000000000 RCC_PLLI2SCmd
     /tmp/ccOp399b.s:411    .text.RCC_PLLI2SCmd:0000000000000008 $d
     /tmp/ccOp399b.s:416    .text.RCC_PLLSAIConfig:0000000000000000 $t
     /tmp/ccOp399b.s:422    .text.RCC_PLLSAIConfig:0000000000000000 RCC_PLLSAIConfig
     /tmp/ccOp399b.s:449    .text.RCC_PLLSAIConfig:0000000000000014 $d
     /tmp/ccOp399b.s:454    .text.RCC_PLLSAICmd:0000000000000000 $t
     /tmp/ccOp399b.s:460    .text.RCC_PLLSAICmd:0000000000000000 RCC_PLLSAICmd
     /tmp/ccOp399b.s:478    .text.RCC_PLLSAICmd:0000000000000008 $d
     /tmp/ccOp399b.s:483    .text.RCC_ClockSecuritySystemCmd:0000000000000000 $t
     /tmp/ccOp399b.s:489    .text.RCC_ClockSecuritySystemCmd:0000000000000000 RCC_ClockSecuritySystemCmd
     /tmp/ccOp399b.s:507    .text.RCC_ClockSecuritySystemCmd:0000000000000008 $d
     /tmp/ccOp399b.s:512    .text.RCC_MCO1Config:0000000000000000 $t
     /tmp/ccOp399b.s:518    .text.RCC_MCO1Config:0000000000000000 RCC_MCO1Config
     /tmp/ccOp399b.s:553    .text.RCC_MCO1Config:0000000000000010 $d
     /tmp/ccOp399b.s:558    .text.RCC_MCO2Config:0000000000000000 $t
     /tmp/ccOp399b.s:564    .text.RCC_MCO2Config:0000000000000000 RCC_MCO2Config
     /tmp/ccOp399b.s:599    .text.RCC_MCO2Config:0000000000000010 $d
     /tmp/ccOp399b.s:604    .text.RCC_SYSCLKConfig:0000000000000000 $t
     /tmp/ccOp399b.s:610    .text.RCC_SYSCLKConfig:0000000000000000 RCC_SYSCLKConfig
     /tmp/ccOp399b.s:641    .text.RCC_SYSCLKConfig:0000000000000010 $d
     /tmp/ccOp399b.s:646    .text.RCC_GetSYSCLKSource:0000000000000000 $t
     /tmp/ccOp399b.s:652    .text.RCC_GetSYSCLKSource:0000000000000000 RCC_GetSYSCLKSource
     /tmp/ccOp399b.s:669    .text.RCC_GetSYSCLKSource:000000000000000c $d
     /tmp/ccOp399b.s:674    .text.RCC_HCLKConfig:0000000000000000 $t
     /tmp/ccOp399b.s:680    .text.RCC_HCLKConfig:0000000000000000 RCC_HCLKConfig
     /tmp/ccOp399b.s:711    .text.RCC_HCLKConfig:0000000000000010 $d
     /tmp/ccOp399b.s:716    .text.RCC_PCLK1Config:0000000000000000 $t
ARM GAS  /tmp/ccOp399b.s 			page 101


     /tmp/ccOp399b.s:722    .text.RCC_PCLK1Config:0000000000000000 RCC_PCLK1Config
     /tmp/ccOp399b.s:753    .text.RCC_PCLK1Config:0000000000000010 $d
     /tmp/ccOp399b.s:758    .text.RCC_PCLK2Config:0000000000000000 $t
     /tmp/ccOp399b.s:764    .text.RCC_PCLK2Config:0000000000000000 RCC_PCLK2Config
     /tmp/ccOp399b.s:795    .text.RCC_PCLK2Config:0000000000000010 $d
     /tmp/ccOp399b.s:800    .text.RCC_GetClocksFreq:0000000000000000 $t
     /tmp/ccOp399b.s:806    .text.RCC_GetClocksFreq:0000000000000000 RCC_GetClocksFreq
     /tmp/ccOp399b.s:1011   .text.RCC_GetClocksFreq:00000000000000a8 $d
     /tmp/ccOp399b.s:1019   .text.RCC_RTCCLKConfig:0000000000000000 $t
     /tmp/ccOp399b.s:1025   .text.RCC_RTCCLKConfig:0000000000000000 RCC_RTCCLKConfig
     /tmp/ccOp399b.s:1080   .text.RCC_RTCCLKConfig:0000000000000030 $d
     /tmp/ccOp399b.s:1085   .text.RCC_RTCCLKCmd:0000000000000000 $t
     /tmp/ccOp399b.s:1091   .text.RCC_RTCCLKCmd:0000000000000000 RCC_RTCCLKCmd
     /tmp/ccOp399b.s:1109   .text.RCC_RTCCLKCmd:0000000000000008 $d
     /tmp/ccOp399b.s:1114   .text.RCC_BackupResetCmd:0000000000000000 $t
     /tmp/ccOp399b.s:1120   .text.RCC_BackupResetCmd:0000000000000000 RCC_BackupResetCmd
     /tmp/ccOp399b.s:1138   .text.RCC_BackupResetCmd:0000000000000008 $d
     /tmp/ccOp399b.s:1143   .text.RCC_I2SCLKConfig:0000000000000000 $t
     /tmp/ccOp399b.s:1149   .text.RCC_I2SCLKConfig:0000000000000000 RCC_I2SCLKConfig
     /tmp/ccOp399b.s:1167   .text.RCC_I2SCLKConfig:0000000000000008 $d
     /tmp/ccOp399b.s:1172   .text.RCC_SAIBlockACLKConfig:0000000000000000 $t
     /tmp/ccOp399b.s:1178   .text.RCC_SAIBlockACLKConfig:0000000000000000 RCC_SAIBlockACLKConfig
     /tmp/ccOp399b.s:1209   .text.RCC_SAIBlockACLKConfig:0000000000000014 $d
     /tmp/ccOp399b.s:1214   .text.RCC_SAIBlockBCLKConfig:0000000000000000 $t
     /tmp/ccOp399b.s:1220   .text.RCC_SAIBlockBCLKConfig:0000000000000000 RCC_SAIBlockBCLKConfig
     /tmp/ccOp399b.s:1251   .text.RCC_SAIBlockBCLKConfig:0000000000000014 $d
     /tmp/ccOp399b.s:1256   .text.RCC_SAIPLLI2SClkDivConfig:0000000000000000 $t
     /tmp/ccOp399b.s:1262   .text.RCC_SAIPLLI2SClkDivConfig:0000000000000000 RCC_SAIPLLI2SClkDivConfig
     /tmp/ccOp399b.s:1296   .text.RCC_SAIPLLI2SClkDivConfig:0000000000000014 $d
     /tmp/ccOp399b.s:1301   .text.RCC_SAIPLLSAIClkDivConfig:0000000000000000 $t
     /tmp/ccOp399b.s:1307   .text.RCC_SAIPLLSAIClkDivConfig:0000000000000000 RCC_SAIPLLSAIClkDivConfig
     /tmp/ccOp399b.s:1341   .text.RCC_SAIPLLSAIClkDivConfig:0000000000000018 $d
     /tmp/ccOp399b.s:1346   .text.RCC_LTDCCLKDivConfig:0000000000000000 $t
     /tmp/ccOp399b.s:1352   .text.RCC_LTDCCLKDivConfig:0000000000000000 RCC_LTDCCLKDivConfig
     /tmp/ccOp399b.s:1383   .text.RCC_LTDCCLKDivConfig:0000000000000014 $d
     /tmp/ccOp399b.s:1388   .text.RCC_TIMCLKPresConfig:0000000000000000 $t
     /tmp/ccOp399b.s:1394   .text.RCC_TIMCLKPresConfig:0000000000000000 RCC_TIMCLKPresConfig
     /tmp/ccOp399b.s:1412   .text.RCC_TIMCLKPresConfig:0000000000000008 $d
     /tmp/ccOp399b.s:1417   .text.RCC_AHB1PeriphClockCmd:0000000000000000 $t
     /tmp/ccOp399b.s:1423   .text.RCC_AHB1PeriphClockCmd:0000000000000000 RCC_AHB1PeriphClockCmd
     /tmp/ccOp399b.s:1460   .text.RCC_AHB1PeriphClockCmd:0000000000000018 $d
     /tmp/ccOp399b.s:1465   .text.RCC_AHB2PeriphClockCmd:0000000000000000 $t
     /tmp/ccOp399b.s:1471   .text.RCC_AHB2PeriphClockCmd:0000000000000000 RCC_AHB2PeriphClockCmd
     /tmp/ccOp399b.s:1508   .text.RCC_AHB2PeriphClockCmd:0000000000000018 $d
     /tmp/ccOp399b.s:1513   .text.RCC_AHB3PeriphClockCmd:0000000000000000 $t
     /tmp/ccOp399b.s:1519   .text.RCC_AHB3PeriphClockCmd:0000000000000000 RCC_AHB3PeriphClockCmd
     /tmp/ccOp399b.s:1556   .text.RCC_AHB3PeriphClockCmd:0000000000000018 $d
     /tmp/ccOp399b.s:1561   .text.RCC_APB1PeriphClockCmd:0000000000000000 $t
     /tmp/ccOp399b.s:1567   .text.RCC_APB1PeriphClockCmd:0000000000000000 RCC_APB1PeriphClockCmd
     /tmp/ccOp399b.s:1604   .text.RCC_APB1PeriphClockCmd:0000000000000018 $d
     /tmp/ccOp399b.s:1609   .text.RCC_APB2PeriphClockCmd:0000000000000000 $t
     /tmp/ccOp399b.s:1615   .text.RCC_APB2PeriphClockCmd:0000000000000000 RCC_APB2PeriphClockCmd
     /tmp/ccOp399b.s:1652   .text.RCC_APB2PeriphClockCmd:0000000000000018 $d
     /tmp/ccOp399b.s:1657   .text.RCC_AHB1PeriphResetCmd:0000000000000000 $t
     /tmp/ccOp399b.s:1663   .text.RCC_AHB1PeriphResetCmd:0000000000000000 RCC_AHB1PeriphResetCmd
     /tmp/ccOp399b.s:1700   .text.RCC_AHB1PeriphResetCmd:0000000000000018 $d
     /tmp/ccOp399b.s:1705   .text.RCC_AHB2PeriphResetCmd:0000000000000000 $t
ARM GAS  /tmp/ccOp399b.s 			page 102


     /tmp/ccOp399b.s:1711   .text.RCC_AHB2PeriphResetCmd:0000000000000000 RCC_AHB2PeriphResetCmd
     /tmp/ccOp399b.s:1748   .text.RCC_AHB2PeriphResetCmd:0000000000000018 $d
     /tmp/ccOp399b.s:1753   .text.RCC_AHB3PeriphResetCmd:0000000000000000 $t
     /tmp/ccOp399b.s:1759   .text.RCC_AHB3PeriphResetCmd:0000000000000000 RCC_AHB3PeriphResetCmd
     /tmp/ccOp399b.s:1796   .text.RCC_AHB3PeriphResetCmd:0000000000000018 $d
     /tmp/ccOp399b.s:1801   .text.RCC_APB1PeriphResetCmd:0000000000000000 $t
     /tmp/ccOp399b.s:1807   .text.RCC_APB1PeriphResetCmd:0000000000000000 RCC_APB1PeriphResetCmd
     /tmp/ccOp399b.s:1844   .text.RCC_APB1PeriphResetCmd:0000000000000018 $d
     /tmp/ccOp399b.s:1849   .text.RCC_APB2PeriphResetCmd:0000000000000000 $t
     /tmp/ccOp399b.s:1855   .text.RCC_APB2PeriphResetCmd:0000000000000000 RCC_APB2PeriphResetCmd
     /tmp/ccOp399b.s:1892   .text.RCC_APB2PeriphResetCmd:0000000000000018 $d
     /tmp/ccOp399b.s:1897   .text.RCC_AHB1PeriphClockLPModeCmd:0000000000000000 $t
     /tmp/ccOp399b.s:1903   .text.RCC_AHB1PeriphClockLPModeCmd:0000000000000000 RCC_AHB1PeriphClockLPModeCmd
     /tmp/ccOp399b.s:1940   .text.RCC_AHB1PeriphClockLPModeCmd:0000000000000018 $d
     /tmp/ccOp399b.s:1945   .text.RCC_AHB2PeriphClockLPModeCmd:0000000000000000 $t
     /tmp/ccOp399b.s:1951   .text.RCC_AHB2PeriphClockLPModeCmd:0000000000000000 RCC_AHB2PeriphClockLPModeCmd
     /tmp/ccOp399b.s:1988   .text.RCC_AHB2PeriphClockLPModeCmd:0000000000000018 $d
     /tmp/ccOp399b.s:1993   .text.RCC_AHB3PeriphClockLPModeCmd:0000000000000000 $t
     /tmp/ccOp399b.s:1999   .text.RCC_AHB3PeriphClockLPModeCmd:0000000000000000 RCC_AHB3PeriphClockLPModeCmd
     /tmp/ccOp399b.s:2036   .text.RCC_AHB3PeriphClockLPModeCmd:0000000000000018 $d
     /tmp/ccOp399b.s:2041   .text.RCC_APB1PeriphClockLPModeCmd:0000000000000000 $t
     /tmp/ccOp399b.s:2047   .text.RCC_APB1PeriphClockLPModeCmd:0000000000000000 RCC_APB1PeriphClockLPModeCmd
     /tmp/ccOp399b.s:2084   .text.RCC_APB1PeriphClockLPModeCmd:0000000000000018 $d
     /tmp/ccOp399b.s:2089   .text.RCC_APB2PeriphClockLPModeCmd:0000000000000000 $t
     /tmp/ccOp399b.s:2095   .text.RCC_APB2PeriphClockLPModeCmd:0000000000000000 RCC_APB2PeriphClockLPModeCmd
     /tmp/ccOp399b.s:2132   .text.RCC_APB2PeriphClockLPModeCmd:0000000000000018 $d
     /tmp/ccOp399b.s:2137   .text.RCC_LSEModeConfig:0000000000000000 $t
     /tmp/ccOp399b.s:2143   .text.RCC_LSEModeConfig:0000000000000000 RCC_LSEModeConfig
     /tmp/ccOp399b.s:2173   .text.RCC_LSEModeConfig:000000000000001c $d
     /tmp/ccOp399b.s:2178   .text.RCC_ITConfig:0000000000000000 $t
     /tmp/ccOp399b.s:2184   .text.RCC_ITConfig:0000000000000000 RCC_ITConfig
     /tmp/ccOp399b.s:2221   .text.RCC_ITConfig:0000000000000018 $d
     /tmp/ccOp399b.s:2226   .text.RCC_GetFlagStatus:0000000000000000 $t
     /tmp/ccOp399b.s:2232   .text.RCC_GetFlagStatus:0000000000000000 RCC_GetFlagStatus
     /tmp/ccOp399b.s:2311   .text.RCC_GetFlagStatus:0000000000000030 $d
     /tmp/ccOp399b.s:2316   .text.RCC_WaitForHSEStartUp:0000000000000000 $t
     /tmp/ccOp399b.s:2322   .text.RCC_WaitForHSEStartUp:0000000000000000 RCC_WaitForHSEStartUp
     /tmp/ccOp399b.s:2388   .text.RCC_ClearFlag:0000000000000000 $t
     /tmp/ccOp399b.s:2394   .text.RCC_ClearFlag:0000000000000000 RCC_ClearFlag
     /tmp/ccOp399b.s:2412   .text.RCC_ClearFlag:000000000000000c $d
     /tmp/ccOp399b.s:2417   .text.RCC_GetITStatus:0000000000000000 $t
     /tmp/ccOp399b.s:2423   .text.RCC_GetITStatus:0000000000000000 RCC_GetITStatus
     /tmp/ccOp399b.s:2456   .text.RCC_GetITStatus:0000000000000010 $d
     /tmp/ccOp399b.s:2461   .text.RCC_ClearITPendingBit:0000000000000000 $t
     /tmp/ccOp399b.s:2467   .text.RCC_ClearITPendingBit:0000000000000000 RCC_ClearITPendingBit
     /tmp/ccOp399b.s:2485   .text.RCC_ClearITPendingBit:0000000000000008 $d
     /tmp/ccOp399b.s:2490   .data.APBAHBPrescTable:0000000000000000 $d
     /tmp/ccOp399b.s:2494   .data.APBAHBPrescTable:0000000000000000 APBAHBPrescTable

NO UNDEFINED SYMBOLS
